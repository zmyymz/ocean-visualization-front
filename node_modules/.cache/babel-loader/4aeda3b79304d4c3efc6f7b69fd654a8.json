{"ast":null,"code":"/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\n\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\n\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\n\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\n\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}","map":{"version":3,"mappings":"AAAA;;;AAGA,SAAQA,SAAR,QAAwB,WAAxB;AAEA;;;;AAIA;;;;;AAIA,OAAM,SAAUC,OAAV,CAAkBC,QAAlB,EAA0B;AAC9B,MAAIA,QAAQ,KAAKC,SAAjB,EAA4B;AAC1B,WAAO,CAAP;AACD,GAFD,MAEO;AACL,WAAOA,SAAP;AACD;AACF;AAED;;;;;AAIA,OAAM,SAAUC,IAAV,CAAeF,QAAf,EAAuB;AAC3B,MAAIA,QAAQ,KAAKC,SAAjB,EAA4B;AAC1B,WAAOD,QAAP;AACD,GAFD,MAEO;AACL,WAAOC,SAAP;AACD;AACF;AAED;;;;;AAIA,OAAM,SAAUE,aAAV,CAAwBC,CAAxB,EAAyB;AAC7B,MAAMC,KAAK,GAAI,IAAIC,IAAI,CAACC,EAAV,GAAgBH,CAA9B;AACA;AACE;;;;;AAKA,cAAUJ,QAAV,EAAoBQ,YAApB,EAAgC;AAC9B,UAAIA,YAAJ,EAAkB;AAChB,eAAOR,QAAP;AACD;;AAED,UAAIA,QAAQ,KAAKC,SAAjB,EAA4B;AAC1BD,gBAAQ,GAAGM,IAAI,CAACG,KAAL,CAAWT,QAAQ,GAAGK,KAAX,GAAmB,GAA9B,IAAqCA,KAAhD;AACA,eAAOL,QAAP;AACD,OAHD,MAGO;AACL,eAAOC,SAAP;AACD;AACF;AAjBH;AAmBD;AAED;;;;;AAIA,OAAM,SAAUS,gBAAV,CAA2BC,aAA3B,EAAwC;AAC5C,MAAMC,SAAS,GAAGD,aAAa,IAAIb,SAAS,CAAC,CAAD,CAA5C;AACA;AACE;;;;;AAKA,cAAUE,QAAV,EAAoBQ,YAApB,EAAgC;AAC9B,UAAIA,YAAJ,EAAkB;AAChB,eAAOR,QAAP;AACD;;AAED,UAAIA,QAAQ,KAAKC,SAAjB,EAA4B;AAC1B,YAAIK,IAAI,CAACO,GAAL,CAASb,QAAT,KAAsBY,SAA1B,EAAqC;AACnC,iBAAO,CAAP;AACD,SAFD,MAEO;AACL,iBAAOZ,QAAP;AACD;AACF,OAND,MAMO;AACL,eAAOC,SAAP;AACD;AACF;AApBH;AAsBD","names":["toRadians","disable","rotation","undefined","none","createSnapToN","n","theta","Math","PI","opt_isMoving","floor","createSnapToZero","opt_tolerance","tolerance","abs"],"sourceRoot":"","sources":["src/rotationconstraint.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}