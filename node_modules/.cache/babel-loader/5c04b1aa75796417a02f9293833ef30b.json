{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/Image\n */\n\n\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nvar ImageWrapper =\n/** @class */\nfunction (_super) {\n  __extends(ImageWrapper, _super);\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n\n\n  function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n    var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n    /**\n     * @private\n     * @type {string}\n     */\n\n\n    _this.src_ = src;\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n\n    _this.image_ = new Image();\n\n    if (crossOrigin !== null) {\n      _this.image_.crossOrigin = crossOrigin;\n    }\n    /**\n     * @private\n     * @type {?function():void}\n     */\n\n\n    _this.unlisten_ = null;\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n\n    _this.state = ImageState.IDLE;\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n\n    _this.imageLoadFunction_ = imageLoadFunction;\n    return _this;\n  }\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n\n\n  ImageWrapper.prototype.getImage = function () {\n    return this.image_;\n  };\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n\n\n  ImageWrapper.prototype.handleImageError_ = function () {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n\n\n  ImageWrapper.prototype.handleImageLoad_ = function () {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n\n\n  ImageWrapper.prototype.load = function () {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n    }\n  };\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n\n\n  ImageWrapper.prototype.setImage = function (image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  };\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n\n\n  ImageWrapper.prototype.unlistenImage_ = function () {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  };\n\n  return ImageWrapper;\n}(ImageBase);\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\n\n\nexport function listenImage(image, loadHandler, errorHandler) {\n  var img =\n  /** @type {HTMLImageElement} */\n  image;\n  var listening = true;\n  var decoding = false;\n  var loaded = false;\n  var listenerKeys = [listenOnce(img, EventType.LOAD, function () {\n    loaded = true;\n\n    if (!decoding) {\n      loadHandler();\n    }\n  })];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img.decode().then(function () {\n      if (listening) {\n        loadHandler();\n      }\n    }).catch(function (error) {\n      if (listening) {\n        if (loaded) {\n          loadHandler();\n        } else {\n          errorHandler();\n        }\n      }\n    });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\nexport default ImageWrapper;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,OAAOA,SAAP,MAAsB,uBAAtB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,SAAQC,YAAR,QAA2B,UAA3B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,UAAR,EAAoBC,aAApB,QAAwC,aAAxC;AAEA;;;;;;;;;;;;;;;;;;AAkBA;AAAA;AAAA;AAA2BC;AACzB;;;;;;;;;;AAQA,wBACEC,MADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,GAJF,EAKEC,WALF,EAMEC,iBANF,EAMmB;AANnB,gBAQEC,kBAAMN,MAAN,EAAcC,UAAd,EAA0BC,UAA1B,EAAsCR,UAAU,CAACa,IAAjD,KAAsD,IARxD;AAUE;;;;;;AAIAC,SAAI,CAACC,IAAL,GAAYN,GAAZ;AAEA;;;;;AAIAK,SAAI,CAACE,MAAL,GAAc,IAAIC,KAAJ,EAAd;;AACA,QAAIP,WAAW,KAAK,IAApB,EAA0B;AACxBI,WAAI,CAACE,MAAL,CAAYN,WAAZ,GAA0BA,WAA1B;AACD;AAED;;;;;;AAIAI,SAAI,CAACI,SAAL,GAAiB,IAAjB;AAEA;;;;;AAIAJ,SAAI,CAACK,KAAL,GAAanB,UAAU,CAACa,IAAxB;AAEA;;;;;AAIAC,SAAI,CAACM,kBAAL,GAA0BT,iBAA1B;;AACD;AAED;;;;;;AAIAU;AACE,WAAO,KAAKL,MAAZ;AACD,GAFD;AAIA;;;;;;;AAKAK;AACE,SAAKF,KAAL,GAAanB,UAAU,CAACsB,KAAxB;AACA,SAAKC,cAAL;AACA,SAAKC,OAAL;AACD,GAJD;AAMA;;;;;;;AAKAH;AACE,QAAI,KAAKd,UAAL,KAAoBkB,SAAxB,EAAmC;AACjC,WAAKlB,UAAL,GAAkBL,SAAS,CAAC,KAAKI,MAAN,CAAT,GAAyB,KAAKU,MAAL,CAAYU,MAAvD;AACD;;AACD,SAAKP,KAAL,GAAanB,UAAU,CAAC2B,MAAxB;AACA,SAAKJ,cAAL;AACA,SAAKC,OAAL;AACD,GAPD;AASA;;;;;;;;AAMAH;AACE,QAAI,KAAKF,KAAL,IAAcnB,UAAU,CAACa,IAAzB,IAAiC,KAAKM,KAAL,IAAcnB,UAAU,CAACsB,KAA9D,EAAqE;AACnE,WAAKH,KAAL,GAAanB,UAAU,CAAC4B,OAAxB;AACA,WAAKJ,OAAL;AACA,WAAKJ,kBAAL,CAAwB,IAAxB,EAA8B,KAAKL,IAAnC;AACA,WAAKG,SAAL,GAAiBW,WAAW,CAC1B,KAAKb,MADqB,EAE1B,KAAKc,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAF0B,EAG1B,KAAKC,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAH0B,CAA5B;AAKD;AACF,GAXD;AAaA;;;;;AAGAV,8CAASY,KAAT,EAAc;AACZ,SAAKjB,MAAL,GAAciB,KAAd;AACA,SAAK1B,UAAL,GAAkBL,SAAS,CAAC,KAAKI,MAAN,CAAT,GAAyB,KAAKU,MAAL,CAAYU,MAAvD;AACD,GAHD;AAKA;;;;;;;AAKAL;AACE,QAAI,KAAKH,SAAT,EAAoB;AAClB,WAAKA,SAAL;AACA,WAAKA,SAAL,GAAiB,IAAjB;AACD;AACF,GALD;;AAMF;AA5HA,EAA2BnB,SAA3B;AA8HA;;;;;;;;AAMA,OAAM,SAAU8B,WAAV,CAAsBI,KAAtB,EAA6BC,WAA7B,EAA0CC,YAA1C,EAAsD;AAC1D,MAAMC,GAAG;AAAG;AAAiCH,OAA7C;AACA,MAAII,SAAS,GAAG,IAAhB;AACA,MAAIC,QAAQ,GAAG,KAAf;AACA,MAAIC,MAAM,GAAG,KAAb;AAEA,MAAMC,YAAY,GAAG,CACnBrC,UAAU,CAACiC,GAAD,EAAMtC,SAAS,CAAC2C,IAAhB,EAAsB;AAC9BF,UAAM,GAAG,IAAT;;AACA,QAAI,CAACD,QAAL,EAAe;AACbJ,iBAAW;AACZ;AACF,GALS,CADS,CAArB;;AASA,MAAIE,GAAG,CAAC3B,GAAJ,IAAWR,YAAf,EAA6B;AAC3BqC,YAAQ,GAAG,IAAX;AACAF,OAAG,CACAM,MADH,GAEGC,IAFH,CAEQ;AACJ,UAAIN,SAAJ,EAAe;AACbH,mBAAW;AACZ;AACF,KANH,EAOGU,KAPH,CAOS,UAAUC,KAAV,EAAe;AACpB,UAAIR,SAAJ,EAAe;AACb,YAAIE,MAAJ,EAAY;AACVL,qBAAW;AACZ,SAFD,MAEO;AACLC,sBAAY;AACb;AACF;AACF,KAfH;AAgBD,GAlBD,MAkBO;AACLK,gBAAY,CAACM,IAAb,CAAkB3C,UAAU,CAACiC,GAAD,EAAMtC,SAAS,CAACwB,KAAhB,EAAuBa,YAAvB,CAA5B;AACD;;AAED,SAAO,SAASY,QAAT,GAAiB;AACtBV,aAAS,GAAG,KAAZ;AACAG,gBAAY,CAACQ,OAAb,CAAqB5C,aAArB;AACD,GAHD;AAID;AAED,eAAeiB,YAAf","names":["EventType","ImageBase","ImageState","IMAGE_DECODE","getHeight","listenOnce","unlistenByKey","__extends","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","_super","IDLE","_this","src_","image_","Image","unlisten_","state","imageLoadFunction_","ImageWrapper","ERROR","unlistenImage_","changed","undefined","height","LOADED","LOADING","listenImage","handleImageLoad_","bind","handleImageError_","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","LOAD","decode","then","catch","error","push","unlisten","forEach"],"sourceRoot":"","sources":["src/Image.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}