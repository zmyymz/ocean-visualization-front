{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\n/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport FeatureFormat, { transformGeometryWithOptions } from './Feature.js';\nimport FormatType from './FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport Units from '../proj/Units.js';\nimport { assert } from '../asserts.js';\nimport { get } from '../proj.js';\nimport { inflateEnds } from '../geom/flat/orient.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [opt_options] Options.\n * @api\n */\n\nvar MVT =\n/** @class */\nfunction (_super) {\n  __extends(MVT, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function MVT(opt_options) {\n    var _this = _super.call(this) || this;\n\n    var options = opt_options ? opt_options : {};\n    /**\n     * @type {Projection}\n     */\n\n    _this.dataProjection = new Projection({\n      code: '',\n      units: Units.TILE_PIXELS\n    });\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n\n    _this.featureClass_ = options.featureClass ? options.featureClass : RenderFeature;\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n\n    _this.geometryName_ = options.geometryName;\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.layerName_ = options.layerName ? options.layerName : 'layer';\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n\n    _this.layers_ = options.layers ? options.layers : null;\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.idProperty_ = options.idProperty;\n    _this.supportedMediaTypes = ['application/vnd.mapbox-vector-tile', 'application/x-protobuf'];\n    return _this;\n  }\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n\n\n  MVT.prototype.readRawGeometry_ = function (pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n    var end = pbf.readVarint() + pbf.pos;\n    var cmd = 1;\n    var length = 0;\n    var x = 0;\n    var y = 0;\n    var coordsLen = 0;\n    var currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        var cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  };\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n\n\n  MVT.prototype.createFeature_ = function (pbf, rawFeature, options) {\n    var type = rawFeature.type;\n\n    if (type === 0) {\n      return null;\n    }\n\n    var feature;\n    var values = rawFeature.properties;\n    var id;\n\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n    var flatCoordinates =\n    /** @type {Array<number>} */\n    [];\n    var ends =\n    /** @type {Array<number>} */\n    [];\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n    var geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n      feature.transform(options.dataProjection);\n    } else {\n      var geom = void 0;\n\n      if (geometryType == GeometryType.POLYGON) {\n        var endss = inflateEnds(flatCoordinates, ends);\n        geom = endss.length > 1 ? new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss) : new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n      } else {\n        geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) : geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) : geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) : geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) : geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) : null;\n      }\n\n      var ctor =\n      /** @type {typeof import(\"../Feature.js\").default} */\n      this.featureClass_;\n      feature = new ctor();\n\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n\n      var geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  };\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n\n\n  MVT.prototype.getType = function () {\n    return FormatType.ARRAY_BUFFER;\n  };\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n\n\n  MVT.prototype.readFeatures = function (source, opt_options) {\n    var layers = this.layers_;\n    var options =\n    /** @type {import(\"./Feature.js\").ReadOptions} */\n    this.adaptOptions(opt_options);\n    var dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n    var pbf = new PBF(\n    /** @type {ArrayBuffer} */\n    source);\n    var pbfLayers = pbf.readFields(layersPBFReader, {});\n    var features = [];\n\n    for (var name_1 in pbfLayers) {\n      if (layers && layers.indexOf(name_1) == -1) {\n        continue;\n      }\n\n      var pbfLayer = pbfLayers[name_1];\n      var extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        var rawFeature = readRawFeature(pbf, pbfLayer, i);\n        var feature = this.createFeature_(pbf, rawFeature, options);\n\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  };\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n\n\n  MVT.prototype.readProjection = function (source) {\n    return this.dataProjection;\n  };\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n\n\n  MVT.prototype.setLayers = function (layers) {\n    this.layers_ = layers;\n  };\n\n  return MVT;\n}(FeatureFormat);\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\n\n\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    var layer = {\n      keys: [],\n      values: [],\n      features: []\n    };\n    var end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\n\n\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    var value = null;\n    var end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value = tag === 1 ? pbf.readString() : tag === 2 ? pbf.readFloat() : tag === 3 ? pbf.readDouble() : tag === 4 ? pbf.readVarint64() : tag === 5 ? pbf.readVarint() : tag === 6 ? pbf.readSVarint() : tag === 7 ? pbf.readBoolean() : null;\n    }\n\n    layer.values.push(value);\n  }\n}\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\n\n\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    var end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n      var key = feature.layer.keys[pbf.readVarint()];\n      var value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\n\n\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  var end = pbf.readVarint() + pbf.pos;\n  var feature = {\n    layer: layer,\n    type: 0,\n    properties: {}\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/GeometryType.js\").default} The geometry type.\n */\n\n\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/GeometryType.js\").default} */\n  var geometryType;\n\n  if (type === 1) {\n    geometryType = numEnds === 1 ? GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? GeometryType.LINE_STRING : GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON; // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n\n  return geometryType;\n}\n\nexport default MVT;","map":{"version":3,"mappings":"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","names":["FeatureFormat","transformGeometryWithOptions","FormatType","GeometryLayout","GeometryType","LineString","MultiLineString","MultiPoint","MultiPolygon","PBF","Point","Polygon","Projection","RenderFeature","Units","assert","get","inflateEnds","__extends","opt_options","_super","options","_this","dataProjection","code","units","TILE_PIXELS","featureClass_","featureClass","geometryName_","geometryName","layerName_","layerName","layers_","layers","idProperty_","idProperty","supportedMediaTypes","MVT","pbf","feature","flatCoordinates","ends","pos","geometry","end","readVarint","cmd","length","x","y","coordsLen","currentEnd","cmdLen","readSVarint","push","rawFeature","type","values","properties","id","layer","name","readRawGeometry_","geometryType","getGeometryType","transform","geom","POLYGON","endss","XY","POINT","LINE_STRING","MULTI_POINT","MULTI_LINE_STRING","ctor","setGeometryName","setGeometry","undefined","setId","setProperties","ARRAY_BUFFER","source","adaptOptions","setWorldExtent","extent","pbfLayers","readFields","layersPBFReader","features","name_1","indexOf","pbfLayer","setExtent","i","ii","readRawFeature","createFeature_","tag","keys","layerPBFReader","version","readString","value","readFloat","readDouble","readVarint64","readBoolean","featurePBFReader","key","numEnds"],"sourceRoot":"","sources":["../src/format/MVT.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}