{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/net\n */\n\n\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [opt_errback] Callback on error.\n * @param {string} [opt_callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\n\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  var script = document.createElement('script');\n  var key = 'olc_' + getUid(callback);\n\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') + (opt_callbackParam || 'callback') + '=' + key;\n  var timer = setTimeout(function () {\n    cleanup();\n\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\nvar ResponseError =\n/** @class */\nfunction (_super) {\n  __extends(ResponseError, _super);\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n\n\n  function ResponseError(response) {\n    var _this = this;\n\n    var message = 'Unexpected response status: ' + response.status;\n    _this = _super.call(this, message) || this;\n    /**\n     * @type {string}\n     */\n\n    _this.name = 'ResponseError';\n    /**\n     * @type {XMLHttpRequest}\n     */\n\n    _this.response = response;\n    return _this;\n  }\n\n  return ResponseError;\n}(Error);\n\nexport { ResponseError };\n\nvar ClientError =\n/** @class */\nfunction (_super) {\n  __extends(ClientError, _super);\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n\n\n  function ClientError(client) {\n    var _this = _super.call(this, 'Failed to issue request') || this;\n    /**\n     * @type {string}\n     */\n\n\n    _this.name = 'ClientError';\n    /**\n     * @type {XMLHttpRequest}\n     */\n\n    _this.client = client;\n    return _this;\n  }\n\n  return ClientError;\n}(Error);\n\nexport { ClientError };\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\n\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      var client = event.target; // status will be 0 for file:// urls\n\n      if (!client.status || client.status >= 200 && client.status < 300) {\n        var data = void 0;\n\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          var message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n\n\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    var client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\n\nexport function resolveUrl(base, url) {\n  if (url.indexOf('://') >= 0) {\n    return url;\n  }\n\n  return new URL(url, base).href;\n}\nvar originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n\n  global.XMLHttpRequest = xhr;\n}\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}","map":{"version":3,"mappings":"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","names":["getUid","jsonp","url","callback","opt_errback","opt_callbackParam","script","document","createElement","key","cleanup","window","parentNode","removeChild","async","src","indexOf","timer","setTimeout","data","clearTimeout","getElementsByTagName","appendChild","__extends","response","message","status","_super","_this","name","Error","client","getJSON","Promise","resolve","reject","onLoad","event","target","JSON","parse","responseText","err","ResponseError","onError","ClientError","XMLHttpRequest","addEventListener","open","setRequestHeader","send","resolveUrl","base","URL","href","originalXHR","overrideXHR","xhr","global","restoreXHR"],"sourceRoot":"","sources":["src/net.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}