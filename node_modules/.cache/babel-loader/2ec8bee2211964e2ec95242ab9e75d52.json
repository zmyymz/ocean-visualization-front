{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/ImageCanvas\n */\n\n\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nvar ImageCanvas =\n/** @class */\nfunction (_super) {\n  __extends(ImageCanvas, _super);\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [opt_loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n\n\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n    var _this = this;\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n    _this = _super.call(this, extent, resolution, pixelRatio, state) || this;\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n\n    _this.loader_ = opt_loader !== undefined ? opt_loader : null;\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n\n    _this.canvas_ = canvas;\n    /**\n     * @private\n     * @type {?Error}\n     */\n\n    _this.error_ = null;\n    return _this;\n  }\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n\n\n  ImageCanvas.prototype.getError = function () {\n    return this.error_;\n  };\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n\n\n  ImageCanvas.prototype.handleLoad_ = function (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n\n    this.changed();\n  };\n  /**\n   * Load not yet loaded URI.\n   */\n\n\n  ImageCanvas.prototype.load = function () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n\n\n  ImageCanvas.prototype.getImage = function () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase);\n\nexport default ImageCanvas;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA;;;;;;;;;AASA;AAAA;AAAA;AAA0BC;AACxB;;;;;;;;;;AAQA,uBAAYC,MAAZ,EAAoBC,UAApB,EAAgCC,UAAhC,EAA4CC,MAA5C,EAAoDC,UAApD,EAA8D;AAA9D;;AACE,QAAMC,KAAK,GACTD,UAAU,KAAKE,SAAf,GAA2BR,UAAU,CAACS,IAAtC,GAA6CT,UAAU,CAACU,MAD1D;YAGAC,kBAAMT,MAAN,EAAcC,UAAd,EAA0BC,UAA1B,EAAsCG,KAAtC,KAA4C;AAE5C;;;;;;AAKAK,SAAI,CAACC,OAAL,GAAeP,UAAU,KAAKE,SAAf,GAA2BF,UAA3B,GAAwC,IAAvD;AAEA;;;;;AAIAM,SAAI,CAACE,OAAL,GAAeT,MAAf;AAEA;;;;;AAIAO,SAAI,CAACG,MAAL,GAAc,IAAd;;AACD;AAED;;;;;;AAIAC;AACE,WAAO,KAAKD,MAAZ;AACD,GAFD;AAIA;;;;;;;AAKAC,gDAAYC,GAAZ,EAAe;AACb,QAAIA,GAAJ,EAAS;AACP,WAAKF,MAAL,GAAcE,GAAd;AACA,WAAKV,KAAL,GAAaP,UAAU,CAACkB,KAAxB;AACD,KAHD,MAGO;AACL,WAAKX,KAAL,GAAaP,UAAU,CAACU,MAAxB;AACD;;AACD,SAAKS,OAAL;AACD,GARD;AAUA;;;;;AAGAH;AACE,QAAI,KAAKT,KAAL,IAAcP,UAAU,CAACS,IAA7B,EAAmC;AACjC,WAAKF,KAAL,GAAaP,UAAU,CAACoB,OAAxB;AACA,WAAKD,OAAL;AACA,WAAKN,OAAL,CAAa,KAAKQ,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAb;AACD;AACF,GAND;AAQA;;;;;AAGAN;AACE,WAAO,KAAKF,OAAZ;AACD,GAFD;;AAGF;AA3EA,EAA0Bf,SAA1B;;AA6EA,eAAeiB,WAAf","names":["ImageBase","ImageState","__extends","extent","resolution","pixelRatio","canvas","opt_loader","state","undefined","IDLE","LOADED","_super","_this","loader_","canvas_","error_","ImageCanvas","err","ERROR","changed","LOADING","handleLoad_","bind"],"sourceRoot":"","sources":["src/ImageCanvas.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}