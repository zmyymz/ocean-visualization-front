{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/DragZoom\n */\n\n\nimport DragBox from './DragBox.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\n\nvar DragZoom =\n/** @class */\nfunction (_super) {\n  __extends(DragZoom, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function DragZoom(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n    _this = _super.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea\n    }) || this;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.duration_ = options.duration !== undefined ? options.duration : 200;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.out_ = options.out !== undefined ? options.out : false;\n    return _this;\n  }\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n\n\n  DragZoom.prototype.onBoxEnd = function (event) {\n    var map = this.getMap();\n    var view =\n    /** @type {!import(\"../View.js\").default} */\n    map.getView();\n    var geometry = this.getGeometry();\n\n    if (this.out_) {\n      var rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      var resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      var factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n\n  return DragZoom;\n}(DragBox);\n\nexport default DragZoom;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,OAAOA,OAAP,MAAoB,cAApB;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,SAAQC,YAAR,QAA2B,wBAA3B;AAEA;;;;;;;;;;;;;;AAcA;;;;;;;;;;;AAUA;AAAA;AAAA;AAAuBC;AACrB;;;;;AAGA,oBAAYC,WAAZ,EAAuB;AAAvB;;AACE,QAAMC,OAAO,GAAGD,WAAW,GAAGA,WAAH,GAAiB,EAA5C;AAEA,QAAME,SAAS,GAAGD,OAAO,CAACC,SAAR,GAAoBD,OAAO,CAACC,SAA5B,GAAwCJ,YAA1D;YAEAK,kBAAM;AACJD,eAAS,EAAEA,SADP;AAEJE,eAAS,EAAEH,OAAO,CAACG,SAAR,IAAqB,aAF5B;AAGJC,aAAO,EAAEJ,OAAO,CAACI;AAHb,KAAN,KAIE;AAEF;;;;;AAIAC,SAAI,CAACC,SAAL,GAAiBN,OAAO,CAACO,QAAR,KAAqBC,SAArB,GAAiCR,OAAO,CAACO,QAAzC,GAAoD,GAArE;AAEA;;;;;AAIAF,SAAI,CAACI,IAAL,GAAYT,OAAO,CAACU,GAAR,KAAgBF,SAAhB,GAA4BR,OAAO,CAACU,GAApC,GAA0C,KAAtD;;AACD;AAED;;;;;;AAIAC,0CAASC,KAAT,EAAc;AACZ,QAAMC,GAAG,GAAG,KAAKC,MAAL,EAAZ;AACA,QAAMC,IAAI;AAAG;AAA8CF,OAAG,CAACG,OAAJ,EAA3D;AACA,QAAIC,QAAQ,GAAG,KAAKC,WAAL,EAAf;;AAEA,QAAI,KAAKT,IAAT,EAAe;AACb,UAAMU,aAAa,GAAGJ,IAAI,CAACK,wBAAL,CAA8BH,QAA9B,CAAtB;AACA,UAAMI,UAAU,GAAGN,IAAI,CAACO,8BAAL,CAAoCH,aAApC,CAAnB;AACA,UAAMI,MAAM,GAAGR,IAAI,CAACS,aAAL,KAAuBH,UAAtC;AACAJ,cAAQ,GAAGA,QAAQ,CAACQ,KAAT,EAAX;AACAR,cAAQ,CAACS,KAAT,CAAeH,MAAM,GAAGA,MAAxB;AACD;;AAEDR,QAAI,CAACY,WAAL,CAAiBV,QAAjB,EAA2B;AACzBV,cAAQ,EAAE,KAAKD,SADU;AAEzBsB,YAAM,EAAEhC;AAFiB,KAA3B;AAID,GAjBD;;AAkBF;AAlDA,EAAuBD,OAAvB;;AAoDA,eAAegB,QAAf","names":["DragBox","easeOut","shiftKeyOnly","__extends","opt_options","options","condition","_super","className","minArea","_this","duration_","duration","undefined","out_","out","DragZoom","event","map","getMap","view","getView","geometry","getGeometry","rotatedExtent","rotatedExtentForGeometry","resolution","getResolutionForExtentInternal","factor","getResolution","clone","scale","fitInternal","easing"],"sourceRoot":"","sources":["../src/interaction/DragZoom.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}