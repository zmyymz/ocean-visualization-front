{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Snap\n */\n\n\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { boundingExtent, createEmpty } from '../extent.js';\nimport { closestOnCircle, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment } from '../coordinate.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport { fromUserCoordinate, getUserProjection, toUserCoordinate } from '../proj.js';\nimport { getUid } from '../util.js';\nimport { getValues } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped Snapped.\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\n\nfunction getFeatureFromEvent(evt) {\n  if (\n  /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */\n  evt.feature) {\n    return (\n      /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */\n      evt.feature\n    );\n  } else if (\n  /** @type {import(\"../Collection.js\").CollectionEvent} */\n  evt.element) {\n    return (\n      /** @type {import(\"../Feature.js\").default} */\n\n      /** @type {import(\"../Collection.js\").CollectionEvent} */\n      evt.element\n    );\n  }\n}\n\nvar tempSegment = [];\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\n\nvar Snap =\n/** @class */\nfunction (_super) {\n  __extends(Snap, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function Snap(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    var pointerOptions =\n    /** @type {import(\"./Pointer.js\").Options} */\n    options;\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    _this = _super.call(this, pointerOptions) || this;\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n\n    _this.source_ = options.source ? options.source : null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.edge_ = options.edge !== undefined ? options.edge : true;\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n\n    _this.features_ = options.features ? options.features : null;\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n\n    _this.featuresListenerKeys_ = [];\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n\n    _this.featureChangeListenerKeys_ = {};\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n\n    _this.indexedFeaturesExtents_ = {};\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n\n    _this.pendingFeatures_ = {};\n    /**\n     * @type {number}\n     * @private\n     */\n\n    _this.pixelTolerance_ = options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n\n    _this.rBush_ = new RBush();\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n     */\n\n    _this.SEGMENT_WRITERS_ = {\n      'Point': _this.writePointGeometry_.bind(_this),\n      'LineString': _this.writeLineStringGeometry_.bind(_this),\n      'LinearRing': _this.writeLineStringGeometry_.bind(_this),\n      'Polygon': _this.writePolygonGeometry_.bind(_this),\n      'MultiPoint': _this.writeMultiPointGeometry_.bind(_this),\n      'MultiLineString': _this.writeMultiLineStringGeometry_.bind(_this),\n      'MultiPolygon': _this.writeMultiPolygonGeometry_.bind(_this),\n      'GeometryCollection': _this.writeGeometryCollectionGeometry_.bind(_this),\n      'Circle': _this.writeCircleGeometry_.bind(_this)\n    };\n    return _this;\n  }\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [opt_listen] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n\n\n  Snap.prototype.addFeature = function (feature, opt_listen) {\n    var register = opt_listen !== undefined ? opt_listen : true;\n    var feature_uid = getUid(feature);\n    var geometry = feature.getGeometry();\n\n    if (geometry) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter(feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n    }\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n\n\n  Snap.prototype.forEachFeatureAdd_ = function (feature) {\n    this.addFeature(feature);\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n\n\n  Snap.prototype.forEachFeatureRemove_ = function (feature) {\n    this.removeFeature(feature);\n  };\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n\n\n  Snap.prototype.getFeatures_ = function () {\n    var features;\n\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n\n    return features;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n\n\n  Snap.prototype.handleEvent = function (evt) {\n    var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n\n    return _super.prototype.handleEvent.call(this, evt);\n  };\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n\n\n  Snap.prototype.handleFeatureAdd_ = function (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  };\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n\n\n  Snap.prototype.handleFeatureRemove_ = function (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  };\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n\n\n  Snap.prototype.handleFeatureChange_ = function (evt) {\n    var feature =\n    /** @type {import(\"../Feature.js\").default} */\n    evt.target;\n\n    if (this.handlingDownUpSequence) {\n      var uid = getUid(feature);\n\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  Snap.prototype.handleUpEvent = function (evt) {\n    var featuresToUpdate = getValues(this.pendingFeatures_);\n\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n\n    return false;\n  };\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [opt_unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n\n\n  Snap.prototype.removeFeature = function (feature, opt_unlisten) {\n    var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    var feature_uid = getUid(feature);\n    var extent = this.indexedFeaturesExtents_[feature_uid];\n\n    if (extent) {\n      var rBush = this.rBush_;\n      var nodesToRemove_1 = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove_1.push(node);\n        }\n      });\n\n      for (var i = nodesToRemove_1.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove_1[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n\n\n  Snap.prototype.setMap = function (map) {\n    var currentMap = this.getMap();\n    var keys = this.featuresListenerKeys_;\n    var features =\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    this.getFeatures_();\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n\n    _super.prototype.setMap.call(this, map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(listen(this.features_, CollectionEventType.ADD, this.handleFeatureAdd_, this), listen(this.features_, CollectionEventType.REMOVE, this.handleFeatureRemove_, this));\n      } else if (this.source_) {\n        keys.push(listen(this.source_, VectorEventType.ADDFEATURE, this.handleFeatureAdd_, this), listen(this.source_, VectorEventType.REMOVEFEATURE, this.handleFeatureRemove_, this));\n      }\n\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  };\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n\n\n  Snap.prototype.snapTo = function (pixel, pixelCoordinate, map) {\n    var lowerLeft = map.getCoordinateFromPixel([pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    var upperRight = map.getCoordinateFromPixel([pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    var box = boundingExtent([lowerLeft, upperRight]);\n    var segments = this.rBush_.getInExtent(box); // If snapping on vertices only, don't consider circles\n\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function (segment) {\n        return segment.feature.getGeometry().getType() !== GeometryType.CIRCLE;\n      });\n    }\n\n    var snapped = false;\n    var vertex = null;\n    var vertexPixel = null;\n\n    if (segments.length === 0) {\n      return {\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      };\n    }\n\n    var projection = map.getView().getProjection();\n    var projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n    var closestSegmentData;\n    var minSquaredDistance = Infinity;\n\n    for (var i = 0; i < segments.length; ++i) {\n      var segmentData = segments[i];\n      tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n      tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n      var delta = squaredDistanceToSegment(projectedCoordinate, tempSegment);\n\n      if (delta < minSquaredDistance) {\n        closestSegmentData = segmentData;\n        minSquaredDistance = delta;\n      }\n    }\n\n    var closestSegment = closestSegmentData.segment;\n\n    if (this.vertex_ && !this.edge_) {\n      var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      var squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      var squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n\n      if (dist <= this.pixelTolerance_) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      var isCircle = closestSegmentData.feature.getGeometry().getType() === GeometryType.CIRCLE;\n\n      if (isCircle) {\n        var circleGeometry = closestSegmentData.feature.getGeometry();\n        var userProjection = getUserProjection();\n\n        if (userProjection) {\n          circleGeometry = circleGeometry.clone().transform(userProjection, projection);\n        }\n\n        vertex = toUserCoordinate(closestOnCircle(projectedCoordinate,\n        /** @type {import(\"../geom/Circle.js\").default} */\n        circleGeometry), projection);\n      } else {\n        tempSegment[0] = fromUserCoordinate(closestSegment[0], projection);\n        tempSegment[1] = fromUserCoordinate(closestSegment[1], projection);\n        vertex = toUserCoordinate(closestOnSegment(projectedCoordinate, tempSegment), projection);\n      }\n\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n\n        if (this.vertex_ && !isCircle) {\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n\n          if (dist <= this.pixelTolerance_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n\n    return {\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel\n    };\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n\n\n  Snap.prototype.updateFeature_ = function (feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n\n\n  Snap.prototype.writeCircleGeometry_ = function (feature, geometry) {\n    var projection = this.getMap().getView().getProjection();\n    var circleGeometry = geometry;\n    var userProjection = getUserProjection();\n\n    if (userProjection) {\n      circleGeometry =\n      /** @type {import(\"../geom/Circle.js\").default} */\n      circleGeometry.clone().transform(userProjection, projection);\n    }\n\n    var polygon = fromCircle(circleGeometry);\n\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n\n    var coordinates = polygon.getCoordinates()[0];\n\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = {\n        feature: feature,\n        segment: segment\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n\n\n  Snap.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n    var geometries = geometry.getGeometriesArray();\n\n    for (var i = 0; i < geometries.length; ++i) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n\n      if (segmentWriter) {\n        segmentWriter(feature, geometries[i]);\n      }\n    }\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n\n\n  Snap.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = {\n        feature: feature,\n        segment: segment\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n\n\n  Snap.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n    var lines = geometry.getCoordinates();\n\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = {\n          feature: feature,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n\n\n  Snap.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n    var points = geometry.getCoordinates();\n\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = {\n        feature: feature,\n        segment: [coordinates, coordinates]\n      };\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n\n\n  Snap.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n    var polygons = geometry.getCoordinates();\n\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = {\n            feature: feature,\n            segment: segment\n          };\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n\n\n  Snap.prototype.writePointGeometry_ = function (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = {\n      feature: feature,\n      segment: [coordinates, coordinates]\n    };\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n\n\n  Snap.prototype.writePolygonGeometry_ = function (feature, geometry) {\n    var rings = geometry.getCoordinates();\n\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = {\n          feature: feature,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  return Snap;\n}(PointerInteraction);\n\nexport default Snap;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,OAAOA,mBAAP,MAAgC,2BAAhC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,kBAAP,MAA+B,cAA/B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,SAAQC,KAAR,EAAeC,IAAf,QAA0B,iBAA1B;AACA,SAAQC,cAAR,EAAwBC,WAAxB,QAA0C,cAA1C;AACA,SACEC,eADF,EAEEC,gBAFF,EAGEC,QAAQ,IAAIC,kBAHd,EAIEC,eAAe,IAAIC,yBAJrB,EAKEC,wBALF,QAMO,kBANP;AAOA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SACEC,kBADF,EAEEC,iBAFF,EAGEC,gBAHF,QAIO,YAJP;AAKA,SAAQC,MAAR,QAAqB,YAArB;AACA,SAAQC,SAAR,QAAwB,WAAxB;AACA,SAAQC,MAAR,EAAgBC,aAAhB,QAAoC,cAApC;AAEA;;;;;;;AAOA;;;;;;AAMA;;;;;;;;;;AAUA;;;;;AAIA,SAASC,mBAAT,CAA6BC,GAA7B,EAAgC;AAC9B;AACE;AAAgEA,KAAD,CAAMC,OADvE,EAEE;AACA;AAAO;AAAgED,SAAD,CACnEC;AADH;AAED,GALD,MAKO;AACL;AAA2DD,KAAD,CAAME,OAD3D,EAEL;AACA;AAAO;;AACL;AAA2DF,SAAD,CAAME;AADlE;AAGD;AACF;;AAED,IAAMC,WAAW,GAAG,EAApB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;AAAA;AAAA;AAAmBC;AACjB;;;;;AAGA,gBAAYC,WAAZ,EAAuB;AAAvB;;AACE,QAAMC,OAAO,GAAGD,WAAW,GAAGA,WAAH,GAAiB,EAA5C;AAEA,QAAME,cAAc;AAAG;AACrBD,WADF;;AAIA,QAAI,CAACC,cAAc,CAACC,eAApB,EAAqC;AACnCD,oBAAc,CAACC,eAAf,GAAiC3B,IAAjC;AACD;;AAED,QAAI,CAAC0B,cAAc,CAACE,QAApB,EAA8B;AAC5BF,oBAAc,CAACE,QAAf,GAA0B7B,KAA1B;AACD;;YAED8B,kBAAMH,cAAN,KAAqB;AAErB;;;;;AAIAI,SAAI,CAACC,OAAL,GAAeN,OAAO,CAACO,MAAR,GAAiBP,OAAO,CAACO,MAAzB,GAAkC,IAAjD;AAEA;;;;;AAIAF,SAAI,CAACG,OAAL,GAAeR,OAAO,CAACS,MAAR,KAAmBC,SAAnB,GAA+BV,OAAO,CAACS,MAAvC,GAAgD,IAA/D;AAEA;;;;;AAIAJ,SAAI,CAACM,KAAL,GAAaX,OAAO,CAACY,IAAR,KAAiBF,SAAjB,GAA6BV,OAAO,CAACY,IAArC,GAA4C,IAAzD;AAEA;;;;;AAIAP,SAAI,CAACQ,SAAL,GAAiBb,OAAO,CAACc,QAAR,GAAmBd,OAAO,CAACc,QAA3B,GAAsC,IAAvD;AAEA;;;;;AAIAT,SAAI,CAACU,qBAAL,GAA6B,EAA7B;AAEA;;;;;AAIAV,SAAI,CAACW,0BAAL,GAAkC,EAAlC;AAEA;;;;;;;AAMAX,SAAI,CAACY,uBAAL,GAA+B,EAA/B;AAEA;;;;;;;;AAOAZ,SAAI,CAACa,gBAAL,GAAwB,EAAxB;AAEA;;;;;AAIAb,SAAI,CAACc,eAAL,GACEnB,OAAO,CAACoB,cAAR,KAA2BV,SAA3B,GAAuCV,OAAO,CAACoB,cAA/C,GAAgE,EADlE;AAGA;;;;;;AAKAf,SAAI,CAACgB,MAAL,GAAc,IAAIjD,KAAJ,EAAd;AAEA;;;;;;AAKAiC,SAAI,CAACiB,gBAAL,GAAwB;AACtB,eAASjB,KAAI,CAACkB,mBAAL,CAAyBC,IAAzB,CAA8BnB,KAA9B,CADa;AAEtB,oBAAcA,KAAI,CAACoB,wBAAL,CAA8BD,IAA9B,CAAmCnB,KAAnC,CAFQ;AAGtB,oBAAcA,KAAI,CAACoB,wBAAL,CAA8BD,IAA9B,CAAmCnB,KAAnC,CAHQ;AAItB,iBAAWA,KAAI,CAACqB,qBAAL,CAA2BF,IAA3B,CAAgCnB,KAAhC,CAJW;AAKtB,oBAAcA,KAAI,CAACsB,wBAAL,CAA8BH,IAA9B,CAAmCnB,KAAnC,CALQ;AAMtB,yBAAmBA,KAAI,CAACuB,6BAAL,CAAmCJ,IAAnC,CAAwCnB,KAAxC,CANG;AAOtB,sBAAgBA,KAAI,CAACwB,0BAAL,CAAgCL,IAAhC,CAAqCnB,KAArC,CAPM;AAQtB,4BAAsBA,KAAI,CAACyB,gCAAL,CAAsCN,IAAtC,CAA2CnB,KAA3C,CARA;AAStB,gBAAUA,KAAI,CAAC0B,oBAAL,CAA0BP,IAA1B,CAA+BnB,KAA/B;AATY,KAAxB;;AAWD;AAED;;;;;;;;;AAOA2B,wCAAWrC,OAAX,EAAoBsC,UAApB,EAA8B;AAC5B,QAAMC,QAAQ,GAAGD,UAAU,KAAKvB,SAAf,GAA2BuB,UAA3B,GAAwC,IAAzD;AACA,QAAME,WAAW,GAAG9C,MAAM,CAACM,OAAD,CAA1B;AACA,QAAMyC,QAAQ,GAAGzC,OAAO,CAAC0C,WAAR,EAAjB;;AACA,QAAID,QAAJ,EAAc;AACZ,UAAME,aAAa,GAAG,KAAKhB,gBAAL,CAAsBc,QAAQ,CAACG,OAAT,EAAtB,CAAtB;;AACA,UAAID,aAAJ,EAAmB;AACjB,aAAKrB,uBAAL,CAA6BkB,WAA7B,IAA4CC,QAAQ,CAACI,SAAT,CAC1C/D,WAAW,EAD+B,CAA5C;AAGA6D,qBAAa,CAAC3C,OAAD,EAAUyC,QAAV,CAAb;AACD;AACF;;AAED,QAAIF,QAAJ,EAAc;AACZ,WAAKlB,0BAAL,CAAgCmB,WAAhC,IAA+C5C,MAAM,CACnDI,OADmD,EAEnD1B,SAAS,CAACwE,MAFyC,EAGnD,KAAKC,oBAH8C,EAInD,IAJmD,CAArD;AAMD;AACF,GAtBD;AAwBA;;;;;;AAIAV,gDAAmBrC,OAAnB,EAA0B;AACxB,SAAKgD,UAAL,CAAgBhD,OAAhB;AACD,GAFD;AAIA;;;;;;AAIAqC,mDAAsBrC,OAAtB,EAA6B;AAC3B,SAAKiD,aAAL,CAAmBjD,OAAnB;AACD,GAFD;AAIA;;;;;;AAIAqC;AACE,QAAIlB,QAAJ;;AACA,QAAI,KAAKD,SAAT,EAAoB;AAClBC,cAAQ,GAAG,KAAKD,SAAhB;AACD,KAFD,MAEO,IAAI,KAAKP,OAAT,EAAkB;AACvBQ,cAAQ,GAAG,KAAKR,OAAL,CAAauC,WAAb,EAAX;AACD;;AACD,WAAO/B,QAAP;AACD,GARD;AAUA;;;;;;AAIAkB,yCAAYtC,GAAZ,EAAe;AACb,QAAMoD,MAAM,GAAG,KAAKC,MAAL,CAAYrD,GAAG,CAACsD,KAAhB,EAAuBtD,GAAG,CAACuD,UAA3B,EAAuCvD,GAAG,CAACwD,GAA3C,CAAf;;AACA,QAAIJ,MAAM,CAACK,OAAX,EAAoB;AAClBzD,SAAG,CAACuD,UAAJ,GAAiBH,MAAM,CAACrC,MAAP,CAAc2C,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAjB;AACA1D,SAAG,CAACsD,KAAJ,GAAYF,MAAM,CAACO,WAAnB;AACD;;AACD,WAAOjD,iBAAMkD,WAAN,CAAiBC,IAAjB,CAAiB,IAAjB,EAAkB7D,GAAlB,CAAP;AACD,GAPD;AASA;;;;;;AAIAsC,+CAAkBtC,GAAlB,EAAqB;AACnB,QAAMC,OAAO,GAAGF,mBAAmB,CAACC,GAAD,CAAnC;AACA,SAAKiD,UAAL,CAAgBhD,OAAhB;AACD,GAHD;AAKA;;;;;;AAIAqC,kDAAqBtC,GAArB,EAAwB;AACtB,QAAMC,OAAO,GAAGF,mBAAmB,CAACC,GAAD,CAAnC;AACA,SAAKkD,aAAL,CAAmBjD,OAAnB;AACD,GAHD;AAKA;;;;;;AAIAqC,kDAAqBtC,GAArB,EAAwB;AACtB,QAAMC,OAAO;AAAG;AAAgDD,OAAG,CAAC8D,MAApE;;AACA,QAAI,KAAKC,sBAAT,EAAiC;AAC/B,UAAMC,GAAG,GAAGrE,MAAM,CAACM,OAAD,CAAlB;;AACA,UAAI,EAAE+D,GAAG,IAAI,KAAKxC,gBAAd,CAAJ,EAAqC;AACnC,aAAKA,gBAAL,CAAsBwC,GAAtB,IAA6B/D,OAA7B;AACD;AACF,KALD,MAKO;AACL,WAAKgE,cAAL,CAAoBhE,OAApB;AACD;AACF,GAVD;AAYA;;;;;;;AAKAqC,2CAActC,GAAd,EAAiB;AACf,QAAMkE,gBAAgB,GAAGtE,SAAS,CAAC,KAAK4B,gBAAN,CAAlC;;AACA,QAAI0C,gBAAgB,CAACC,MAArB,EAA6B;AAC3BD,sBAAgB,CAACE,OAAjB,CAAyB,KAAKH,cAAL,CAAoBnC,IAApB,CAAyB,IAAzB,CAAzB;AACA,WAAKN,gBAAL,GAAwB,EAAxB;AACD;;AACD,WAAO,KAAP;AACD,GAPD;AASA;;;;;;;;;AAOAc,2CAAcrC,OAAd,EAAuBoE,YAAvB,EAAmC;AACjC,QAAMC,UAAU,GAAGD,YAAY,KAAKrD,SAAjB,GAA6BqD,YAA7B,GAA4C,IAA/D;AACA,QAAM5B,WAAW,GAAG9C,MAAM,CAACM,OAAD,CAA1B;AACA,QAAMsE,MAAM,GAAG,KAAKhD,uBAAL,CAA6BkB,WAA7B,CAAf;;AACA,QAAI8B,MAAJ,EAAY;AACV,UAAMC,KAAK,GAAG,KAAK7C,MAAnB;AACA,UAAM8C,eAAa,GAAG,EAAtB;AACAD,WAAK,CAACE,eAAN,CAAsBH,MAAtB,EAA8B,UAAUI,IAAV,EAAc;AAC1C,YAAI1E,OAAO,KAAK0E,IAAI,CAAC1E,OAArB,EAA8B;AAC5BwE,yBAAa,CAACG,IAAd,CAAmBD,IAAnB;AACD;AACF,OAJD;;AAKA,WAAK,IAAIE,CAAC,GAAGJ,eAAa,CAACN,MAAd,GAAuB,CAApC,EAAuCU,CAAC,IAAI,CAA5C,EAA+C,EAAEA,CAAjD,EAAoD;AAClDL,aAAK,CAACM,MAAN,CAAaL,eAAa,CAACI,CAAD,CAA1B;AACD;AACF;;AAED,QAAIP,UAAJ,EAAgB;AACdxE,mBAAa,CAAC,KAAKwB,0BAAL,CAAgCmB,WAAhC,CAAD,CAAb;AACA,aAAO,KAAKnB,0BAAL,CAAgCmB,WAAhC,CAAP;AACD;AACF,GArBD;AAuBA;;;;;;;;AAMAH,oCAAOkB,GAAP,EAAU;AACR,QAAMuB,UAAU,GAAG,KAAKC,MAAL,EAAnB;AACA,QAAMC,IAAI,GAAG,KAAK5D,qBAAlB;AACA,QAAMD,QAAQ;AAAG;AACf,SAAK8D,YAAL,EADF;;AAIA,QAAIH,UAAJ,EAAgB;AACdE,UAAI,CAACb,OAAL,CAAatE,aAAb;AACAmF,UAAI,CAACd,MAAL,GAAc,CAAd;AACA/C,cAAQ,CAACgD,OAAT,CAAiB,KAAKe,qBAAL,CAA2BrD,IAA3B,CAAgC,IAAhC,CAAjB;AACD;;AACDpB,qBAAM0E,MAAN,CAAYvB,IAAZ,CAAY,IAAZ,EAAaL,GAAb;;AAEA,QAAIA,GAAJ,EAAS;AACP,UAAI,KAAKrC,SAAT,EAAoB;AAClB8D,YAAI,CAACL,IAAL,CACE/E,MAAM,CACJ,KAAKsB,SADD,EAEJ7C,mBAAmB,CAAC+G,GAFhB,EAGJ,KAAKC,iBAHD,EAIJ,IAJI,CADR,EAOEzF,MAAM,CACJ,KAAKsB,SADD,EAEJ7C,mBAAmB,CAACiH,MAFhB,EAGJ,KAAKC,oBAHD,EAIJ,IAJI,CAPR;AAcD,OAfD,MAeO,IAAI,KAAK5E,OAAT,EAAkB;AACvBqE,YAAI,CAACL,IAAL,CACE/E,MAAM,CACJ,KAAKe,OADD,EAEJjC,eAAe,CAAC8G,UAFZ,EAGJ,KAAKH,iBAHD,EAIJ,IAJI,CADR,EAOEzF,MAAM,CACJ,KAAKe,OADD,EAEJjC,eAAe,CAAC+G,aAFZ,EAGJ,KAAKF,oBAHD,EAIJ,IAJI,CAPR;AAcD;;AACDpE,cAAQ,CAACgD,OAAT,CAAiB,KAAKuB,kBAAL,CAAwB7D,IAAxB,CAA6B,IAA7B,CAAjB;AACD;AACF,GAhDD;AAkDA;;;;;;;;AAMAQ,oCAAOgB,KAAP,EAAcsC,eAAd,EAA+BpC,GAA/B,EAAkC;AAChC,QAAMqC,SAAS,GAAGrC,GAAG,CAACsC,sBAAJ,CAA2B,CAC3CxC,KAAK,CAAC,CAAD,CAAL,GAAW,KAAK7B,eAD2B,EAE3C6B,KAAK,CAAC,CAAD,CAAL,GAAW,KAAK7B,eAF2B,CAA3B,CAAlB;AAIA,QAAMsE,UAAU,GAAGvC,GAAG,CAACsC,sBAAJ,CAA2B,CAC5CxC,KAAK,CAAC,CAAD,CAAL,GAAW,KAAK7B,eAD4B,EAE5C6B,KAAK,CAAC,CAAD,CAAL,GAAW,KAAK7B,eAF4B,CAA3B,CAAnB;AAIA,QAAMuE,GAAG,GAAGlH,cAAc,CAAC,CAAC+G,SAAD,EAAYE,UAAZ,CAAD,CAA1B;AAEA,QAAIE,QAAQ,GAAG,KAAKtE,MAAL,CAAYuE,WAAZ,CAAwBF,GAAxB,CAAf,CAXgC,CAahC;;AACA,QAAI,KAAKlF,OAAL,IAAgB,CAAC,KAAKG,KAA1B,EAAiC;AAC/BgF,cAAQ,GAAGA,QAAQ,CAACE,MAAT,CAAgB,UAAUC,OAAV,EAAiB;AAC1C,eAAOA,OAAO,CAACnG,OAAR,CAAgB0C,WAAhB,GAA8BE,OAA9B,OAA4CrE,YAAY,CAAC6H,MAAhE;AACD,OAFU,CAAX;AAGD;;AAED,QAAI5C,OAAO,GAAG,KAAd;AACA,QAAI1C,MAAM,GAAG,IAAb;AACA,QAAI4C,WAAW,GAAG,IAAlB;;AAEA,QAAIsC,QAAQ,CAAC9B,MAAT,KAAoB,CAAxB,EAA2B;AACzB,aAAO;AACLV,eAAO,EAAEA,OADJ;AAEL1C,cAAM,EAAEA,MAFH;AAGL4C,mBAAW,EAAEA;AAHR,OAAP;AAKD;;AAED,QAAM2C,UAAU,GAAG9C,GAAG,CAAC+C,OAAJ,GAAcC,aAAd,EAAnB;AACA,QAAMC,mBAAmB,GAAGjH,kBAAkB,CAACoG,eAAD,EAAkBU,UAAlB,CAA9C;AAEA,QAAII,kBAAJ;AACA,QAAIC,kBAAkB,GAAGC,QAAzB;;AACA,SAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,QAAQ,CAAC9B,MAA7B,EAAqC,EAAEU,CAAvC,EAA0C;AACxC,UAAMgC,WAAW,GAAGZ,QAAQ,CAACpB,CAAD,CAA5B;AACA1E,iBAAW,CAAC,CAAD,CAAX,GAAiBX,kBAAkB,CAACqH,WAAW,CAACT,OAAZ,CAAoB,CAApB,CAAD,EAAyBE,UAAzB,CAAnC;AACAnG,iBAAW,CAAC,CAAD,CAAX,GAAiBX,kBAAkB,CAACqH,WAAW,CAACT,OAAZ,CAAoB,CAApB,CAAD,EAAyBE,UAAzB,CAAnC;AACA,UAAMQ,KAAK,GAAGxH,wBAAwB,CAACmH,mBAAD,EAAsBtG,WAAtB,CAAtC;;AACA,UAAI2G,KAAK,GAAGH,kBAAZ,EAAgC;AAC9BD,0BAAkB,GAAGG,WAArB;AACAF,0BAAkB,GAAGG,KAArB;AACD;AACF;;AACD,QAAMC,cAAc,GAAGL,kBAAkB,CAACN,OAA1C;;AAEA,QAAI,KAAKtF,OAAL,IAAgB,CAAC,KAAKG,KAA1B,EAAiC;AAC/B,UAAM+F,MAAM,GAAGxD,GAAG,CAACyD,sBAAJ,CAA2BF,cAAc,CAAC,CAAD,CAAzC,CAAf;AACA,UAAMG,MAAM,GAAG1D,GAAG,CAACyD,sBAAJ,CAA2BF,cAAc,CAAC,CAAD,CAAzC,CAAf;AACA,UAAMI,YAAY,GAAG9H,yBAAyB,CAACiE,KAAD,EAAQ0D,MAAR,CAA9C;AACA,UAAMI,YAAY,GAAG/H,yBAAyB,CAACiE,KAAD,EAAQ4D,MAAR,CAA9C;AACA,UAAMG,IAAI,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAASL,YAAT,EAAuBC,YAAvB,CAAV,CAAb;;AACA,UAAIC,IAAI,IAAI,KAAK5F,eAAjB,EAAkC;AAChCgC,eAAO,GAAG,IAAV;AACA1C,cAAM,GACJoG,YAAY,GAAGC,YAAf,GAA8BL,cAAc,CAAC,CAAD,CAA5C,GAAkDA,cAAc,CAAC,CAAD,CADlE;AAEApD,mBAAW,GAAGH,GAAG,CAACyD,sBAAJ,CAA2BlG,MAA3B,CAAd;AACD;AACF,KAZD,MAYO,IAAI,KAAKE,KAAT,EAAgB;AACrB,UAAMwG,QAAQ,GACZf,kBAAkB,CAACzG,OAAnB,CAA2B0C,WAA3B,GAAyCE,OAAzC,OACArE,YAAY,CAAC6H,MAFf;;AAGA,UAAIoB,QAAJ,EAAc;AACZ,YAAIC,cAAc,GAAGhB,kBAAkB,CAACzG,OAAnB,CAA2B0C,WAA3B,EAArB;AACA,YAAMgF,cAAc,GAAGlI,iBAAiB,EAAxC;;AACA,YAAIkI,cAAJ,EAAoB;AAClBD,wBAAc,GAAGA,cAAc,CAC5BE,KADc,GAEdC,SAFc,CAEJF,cAFI,EAEYrB,UAFZ,CAAjB;AAGD;;AACDvF,cAAM,GAAGrB,gBAAgB,CACvBV,eAAe,CACbyH,mBADa;AAEb;AAAoDiB,sBAFvC,CADQ,EAKvBpB,UALuB,CAAzB;AAOD,OAfD,MAeO;AACLnG,mBAAW,CAAC,CAAD,CAAX,GAAiBX,kBAAkB,CAACuH,cAAc,CAAC,CAAD,CAAf,EAAoBT,UAApB,CAAnC;AACAnG,mBAAW,CAAC,CAAD,CAAX,GAAiBX,kBAAkB,CAACuH,cAAc,CAAC,CAAD,CAAf,EAAoBT,UAApB,CAAnC;AACAvF,cAAM,GAAGrB,gBAAgB,CACvBT,gBAAgB,CAACwH,mBAAD,EAAsBtG,WAAtB,CADO,EAEvBmG,UAFuB,CAAzB;AAID;;AACD3C,iBAAW,GAAGH,GAAG,CAACyD,sBAAJ,CAA2BlG,MAA3B,CAAd;;AAEA,UAAI5B,kBAAkB,CAACmE,KAAD,EAAQK,WAAR,CAAlB,IAA0C,KAAKlC,eAAnD,EAAoE;AAClEgC,eAAO,GAAG,IAAV;;AACA,YAAI,KAAK3C,OAAL,IAAgB,CAAC2G,QAArB,EAA+B;AAC7B,cAAMT,MAAM,GAAGxD,GAAG,CAACyD,sBAAJ,CAA2BF,cAAc,CAAC,CAAD,CAAzC,CAAf;AACA,cAAMG,MAAM,GAAG1D,GAAG,CAACyD,sBAAJ,CAA2BF,cAAc,CAAC,CAAD,CAAzC,CAAf;AACA,cAAMI,YAAY,GAAG9H,yBAAyB,CAACsE,WAAD,EAAcqD,MAAd,CAA9C;AACA,cAAMI,YAAY,GAAG/H,yBAAyB,CAACsE,WAAD,EAAcuD,MAAd,CAA9C;AACA,cAAMG,IAAI,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAASL,YAAT,EAAuBC,YAAvB,CAAV,CAAb;;AACA,cAAIC,IAAI,IAAI,KAAK5F,eAAjB,EAAkC;AAChCV,kBAAM,GACJoG,YAAY,GAAGC,YAAf,GACIL,cAAc,CAAC,CAAD,CADlB,GAEIA,cAAc,CAAC,CAAD,CAHpB;AAIApD,uBAAW,GAAGH,GAAG,CAACyD,sBAAJ,CAA2BlG,MAA3B,CAAd;AACD;AACF;AACF;AACF;;AAED,QAAI0C,OAAJ,EAAa;AACXE,iBAAW,GAAG,CAAC2D,IAAI,CAACQ,KAAL,CAAWnE,WAAW,CAAC,CAAD,CAAtB,CAAD,EAA6B2D,IAAI,CAACQ,KAAL,CAAWnE,WAAW,CAAC,CAAD,CAAtB,CAA7B,CAAd;AACD;;AAED,WAAO;AACLF,aAAO,EAAEA,OADJ;AAEL1C,YAAM,EAAEA,MAFH;AAGL4C,iBAAW,EAAEA;AAHR,KAAP;AAKD,GAtHD;AAwHA;;;;;;AAIArB,4CAAerC,OAAf,EAAsB;AACpB,SAAKiD,aAAL,CAAmBjD,OAAnB,EAA4B,KAA5B;AACA,SAAKgD,UAAL,CAAgBhD,OAAhB,EAAyB,KAAzB;AACD,GAHD;AAKA;;;;;;;AAKAqC,kDAAqBrC,OAArB,EAA8ByC,QAA9B,EAAsC;AACpC,QAAM4D,UAAU,GAAG,KAAKtB,MAAL,GAAcuB,OAAd,GAAwBC,aAAxB,EAAnB;AACA,QAAIkB,cAAc,GAAGhF,QAArB;AACA,QAAMiF,cAAc,GAAGlI,iBAAiB,EAAxC;;AACA,QAAIkI,cAAJ,EAAoB;AAClBD,oBAAc;AAAG;AACfA,oBAAc,CAACE,KAAf,GAAuBC,SAAvB,CAAiCF,cAAjC,EAAiDrB,UAAjD,CADF;AAGD;;AACD,QAAMyB,OAAO,GAAGxI,UAAU,CAACmI,cAAD,CAA1B;;AACA,QAAIC,cAAJ,EAAoB;AAClBI,aAAO,CAACF,SAAR,CAAkBvB,UAAlB,EAA8BqB,cAA9B;AACD;;AACD,QAAMK,WAAW,GAAGD,OAAO,CAACE,cAAR,GAAyB,CAAzB,CAApB;;AACA,SAAK,IAAIpD,CAAC,GAAG,CAAR,EAAWqD,EAAE,GAAGF,WAAW,CAAC7D,MAAZ,GAAqB,CAA1C,EAA6CU,CAAC,GAAGqD,EAAjD,EAAqD,EAAErD,CAAvD,EAA0D;AACxD,UAAMuB,OAAO,GAAG4B,WAAW,CAACtE,KAAZ,CAAkBmB,CAAlB,EAAqBA,CAAC,GAAG,CAAzB,CAAhB;AACA,UAAMgC,WAAW,GAAG;AAClB5G,eAAO,EAAEA,OADS;AAElBmG,eAAO,EAAEA;AAFS,OAApB;AAIA,WAAKzE,MAAL,CAAYwG,MAAZ,CAAmBrJ,cAAc,CAACsH,OAAD,CAAjC,EAA4CS,WAA5C;AACD;AACF,GAtBD;AAwBA;;;;;;;AAKAvE,8DAAiCrC,OAAjC,EAA0CyC,QAA1C,EAAkD;AAChD,QAAM0F,UAAU,GAAG1F,QAAQ,CAAC2F,kBAAT,EAAnB;;AACA,SAAK,IAAIxD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuD,UAAU,CAACjE,MAA/B,EAAuC,EAAEU,CAAzC,EAA4C;AAC1C,UAAMjC,aAAa,GAAG,KAAKhB,gBAAL,CAAsBwG,UAAU,CAACvD,CAAD,CAAV,CAAchC,OAAd,EAAtB,CAAtB;;AACA,UAAID,aAAJ,EAAmB;AACjBA,qBAAa,CAAC3C,OAAD,EAAUmI,UAAU,CAACvD,CAAD,CAApB,CAAb;AACD;AACF;AACF,GARD;AAUA;;;;;;;AAKAvC,sDAAyBrC,OAAzB,EAAkCyC,QAAlC,EAA0C;AACxC,QAAMsF,WAAW,GAAGtF,QAAQ,CAACuF,cAAT,EAApB;;AACA,SAAK,IAAIpD,CAAC,GAAG,CAAR,EAAWqD,EAAE,GAAGF,WAAW,CAAC7D,MAAZ,GAAqB,CAA1C,EAA6CU,CAAC,GAAGqD,EAAjD,EAAqD,EAAErD,CAAvD,EAA0D;AACxD,UAAMuB,OAAO,GAAG4B,WAAW,CAACtE,KAAZ,CAAkBmB,CAAlB,EAAqBA,CAAC,GAAG,CAAzB,CAAhB;AACA,UAAMgC,WAAW,GAAG;AAClB5G,eAAO,EAAEA,OADS;AAElBmG,eAAO,EAAEA;AAFS,OAApB;AAIA,WAAKzE,MAAL,CAAYwG,MAAZ,CAAmBrJ,cAAc,CAACsH,OAAD,CAAjC,EAA4CS,WAA5C;AACD;AACF,GAVD;AAYA;;;;;;;AAKAvE,2DAA8BrC,OAA9B,EAAuCyC,QAAvC,EAA+C;AAC7C,QAAM4F,KAAK,GAAG5F,QAAQ,CAACuF,cAAT,EAAd;;AACA,SAAK,IAAIM,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGF,KAAK,CAACnE,MAA3B,EAAmCoE,CAAC,GAAGC,EAAvC,EAA2C,EAAED,CAA7C,EAAgD;AAC9C,UAAMP,WAAW,GAAGM,KAAK,CAACC,CAAD,CAAzB;;AACA,WAAK,IAAI1D,CAAC,GAAG,CAAR,EAAWqD,EAAE,GAAGF,WAAW,CAAC7D,MAAZ,GAAqB,CAA1C,EAA6CU,CAAC,GAAGqD,EAAjD,EAAqD,EAAErD,CAAvD,EAA0D;AACxD,YAAMuB,OAAO,GAAG4B,WAAW,CAACtE,KAAZ,CAAkBmB,CAAlB,EAAqBA,CAAC,GAAG,CAAzB,CAAhB;AACA,YAAMgC,WAAW,GAAG;AAClB5G,iBAAO,EAAEA,OADS;AAElBmG,iBAAO,EAAEA;AAFS,SAApB;AAIA,aAAKzE,MAAL,CAAYwG,MAAZ,CAAmBrJ,cAAc,CAACsH,OAAD,CAAjC,EAA4CS,WAA5C;AACD;AACF;AACF,GAbD;AAeA;;;;;;;AAKAvE,sDAAyBrC,OAAzB,EAAkCyC,QAAlC,EAA0C;AACxC,QAAM+F,MAAM,GAAG/F,QAAQ,CAACuF,cAAT,EAAf;;AACA,SAAK,IAAIpD,CAAC,GAAG,CAAR,EAAWqD,EAAE,GAAGO,MAAM,CAACtE,MAA5B,EAAoCU,CAAC,GAAGqD,EAAxC,EAA4C,EAAErD,CAA9C,EAAiD;AAC/C,UAAMmD,WAAW,GAAGS,MAAM,CAAC5D,CAAD,CAA1B;AACA,UAAMgC,WAAW,GAAG;AAClB5G,eAAO,EAAEA,OADS;AAElBmG,eAAO,EAAE,CAAC4B,WAAD,EAAcA,WAAd;AAFS,OAApB;AAIA,WAAKrG,MAAL,CAAYwG,MAAZ,CAAmBzF,QAAQ,CAACI,SAAT,EAAnB,EAAyC+D,WAAzC;AACD;AACF,GAVD;AAYA;;;;;;;AAKAvE,wDAA2BrC,OAA3B,EAAoCyC,QAApC,EAA4C;AAC1C,QAAMgG,QAAQ,GAAGhG,QAAQ,CAACuF,cAAT,EAAjB;;AACA,SAAK,IAAIU,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGF,QAAQ,CAACvE,MAA9B,EAAsCwE,CAAC,GAAGC,EAA1C,EAA8C,EAAED,CAAhD,EAAmD;AACjD,UAAME,KAAK,GAAGH,QAAQ,CAACC,CAAD,CAAtB;;AACA,WAAK,IAAIJ,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGK,KAAK,CAAC1E,MAA3B,EAAmCoE,CAAC,GAAGC,EAAvC,EAA2C,EAAED,CAA7C,EAAgD;AAC9C,YAAMP,WAAW,GAAGa,KAAK,CAACN,CAAD,CAAzB;;AACA,aAAK,IAAI1D,CAAC,GAAG,CAAR,EAAWqD,EAAE,GAAGF,WAAW,CAAC7D,MAAZ,GAAqB,CAA1C,EAA6CU,CAAC,GAAGqD,EAAjD,EAAqD,EAAErD,CAAvD,EAA0D;AACxD,cAAMuB,OAAO,GAAG4B,WAAW,CAACtE,KAAZ,CAAkBmB,CAAlB,EAAqBA,CAAC,GAAG,CAAzB,CAAhB;AACA,cAAMgC,WAAW,GAAG;AAClB5G,mBAAO,EAAEA,OADS;AAElBmG,mBAAO,EAAEA;AAFS,WAApB;AAIA,eAAKzE,MAAL,CAAYwG,MAAZ,CAAmBrJ,cAAc,CAACsH,OAAD,CAAjC,EAA4CS,WAA5C;AACD;AACF;AACF;AACF,GAhBD;AAkBA;;;;;;;AAKAvE,iDAAoBrC,OAApB,EAA6ByC,QAA7B,EAAqC;AACnC,QAAMsF,WAAW,GAAGtF,QAAQ,CAACuF,cAAT,EAApB;AACA,QAAMpB,WAAW,GAAG;AAClB5G,aAAO,EAAEA,OADS;AAElBmG,aAAO,EAAE,CAAC4B,WAAD,EAAcA,WAAd;AAFS,KAApB;AAIA,SAAKrG,MAAL,CAAYwG,MAAZ,CAAmBzF,QAAQ,CAACI,SAAT,EAAnB,EAAyC+D,WAAzC;AACD,GAPD;AASA;;;;;;;AAKAvE,mDAAsBrC,OAAtB,EAA+ByC,QAA/B,EAAuC;AACrC,QAAMmG,KAAK,GAAGnG,QAAQ,CAACuF,cAAT,EAAd;;AACA,SAAK,IAAIM,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGK,KAAK,CAAC1E,MAA3B,EAAmCoE,CAAC,GAAGC,EAAvC,EAA2C,EAAED,CAA7C,EAAgD;AAC9C,UAAMP,WAAW,GAAGa,KAAK,CAACN,CAAD,CAAzB;;AACA,WAAK,IAAI1D,CAAC,GAAG,CAAR,EAAWqD,EAAE,GAAGF,WAAW,CAAC7D,MAAZ,GAAqB,CAA1C,EAA6CU,CAAC,GAAGqD,EAAjD,EAAqD,EAAErD,CAAvD,EAA0D;AACxD,YAAMuB,OAAO,GAAG4B,WAAW,CAACtE,KAAZ,CAAkBmB,CAAlB,EAAqBA,CAAC,GAAG,CAAzB,CAAhB;AACA,YAAMgC,WAAW,GAAG;AAClB5G,iBAAO,EAAEA,OADS;AAElBmG,iBAAO,EAAEA;AAFS,SAApB;AAIA,aAAKzE,MAAL,CAAYwG,MAAZ,CAAmBrJ,cAAc,CAACsH,OAAD,CAAjC,EAA4CS,WAA5C;AACD;AACF;AACF,GAbD;;AAcF;AA3lBA,EAAmBpI,kBAAnB;;AA6lBA,eAAe6D,IAAf","names":["CollectionEventType","EventType","GeometryType","PointerInteraction","RBush","VectorEventType","FALSE","TRUE","boundingExtent","createEmpty","closestOnCircle","closestOnSegment","distance","coordinateDistance","squaredDistance","squaredCoordinateDistance","squaredDistanceToSegment","fromCircle","fromUserCoordinate","getUserProjection","toUserCoordinate","getUid","getValues","listen","unlistenByKey","getFeatureFromEvent","evt","feature","element","tempSegment","__extends","opt_options","options","pointerOptions","handleDownEvent","stopDown","_super","_this","source_","source","vertex_","vertex","undefined","edge_","edge","features_","features","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelTolerance_","pixelTolerance","rBush_","SEGMENT_WRITERS_","writePointGeometry_","bind","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeGeometryCollectionGeometry_","writeCircleGeometry_","Snap","opt_listen","register","feature_uid","geometry","getGeometry","segmentWriter","getType","getExtent","CHANGE","handleFeatureChange_","addFeature","removeFeature","getFeatures","result","snapTo","pixel","coordinate","map","snapped","slice","vertexPixel","handleEvent","call","target","handlingDownUpSequence","uid","updateFeature_","featuresToUpdate","length","forEach","opt_unlisten","unregister","extent","rBush","nodesToRemove_1","forEachInExtent","node","push","i","remove","currentMap","getMap","keys","getFeatures_","forEachFeatureRemove_","setMap","ADD","handleFeatureAdd_","REMOVE","handleFeatureRemove_","ADDFEATURE","REMOVEFEATURE","forEachFeatureAdd_","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","CIRCLE","projection","getView","getProjection","projectedCoordinate","closestSegmentData","minSquaredDistance","Infinity","segmentData","delta","closestSegment","pixel1","getPixelFromCoordinate","pixel2","squaredDist1","squaredDist2","dist","Math","sqrt","min","isCircle","circleGeometry","userProjection","clone","transform","round","polygon","coordinates","getCoordinates","ii","insert","geometries","getGeometriesArray","lines","j","jj","points","polygons","k","kk","rings"],"sourceRoot":"","sources":["../src/interaction/Snap.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}