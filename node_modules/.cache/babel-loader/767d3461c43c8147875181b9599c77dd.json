{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/**\n * @module ol/source/XYZ\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\n\nvar XYZ =\n/** @class */\nfunction (_super) {\n  __extends(XYZ, _super);\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n\n\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid : createXYZ({\n      extent: extentFromProjection(projection),\n      maxResolution: options.maxResolution,\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n    return _super.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection\n    }) || this;\n  }\n\n  return XYZ;\n}(TileImage);\n\nexport default XYZ;","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,SAAQC,SAAR,EAAmBC,oBAAnB,QAA8C,gBAA9C;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;;;;;;;;;;;;;;;;;;AAiBA;AAAA;AAAA;AAAkBC;AAChB;;;;;AAGA,eAAYC,WAAZ,EAAuB;AACrB,QAAMC,OAAO,GAAGD,WAAW,IAAI,EAA/B;AAEA,QAAIE,WAAW,GACbD,OAAO,CAACE,cAAR,KAA2BC,SAA3B,GAAuCH,OAAO,CAACE,cAA/C,GAAgE,IADlE;;AAEA,QAAIF,OAAO,CAACC,WAAR,KAAwBE,SAA5B,EAAuC;AACrCF,iBAAW,GAAGD,OAAO,CAACC,WAAtB;AACD;;AAED,QAAMG,UAAU,GACdJ,OAAO,CAACI,UAAR,KAAuBD,SAAvB,GAAmCH,OAAO,CAACI,UAA3C,GAAwD,WAD1D;AAGA,QAAMC,QAAQ,GACZL,OAAO,CAACK,QAAR,KAAqBF,SAArB,GACIH,OAAO,CAACK,QADZ,GAEIT,SAAS,CAAC;AACRU,YAAM,EAAET,oBAAoB,CAACO,UAAD,CADpB;AAERG,mBAAa,EAAEP,OAAO,CAACO,aAFf;AAGRC,aAAO,EAAER,OAAO,CAACQ,OAHT;AAIRC,aAAO,EAAET,OAAO,CAACS,OAJT;AAKRC,cAAQ,EAAEV,OAAO,CAACU;AALV,KAAD,CAHf;WAWAC,kBAAM;AACJC,kBAAY,EAAEZ,OAAO,CAACY,YADlB;AAEJC,eAAS,EAAEb,OAAO,CAACa,SAFf;AAGJC,iBAAW,EAAEd,OAAO,CAACc,WAHjB;AAIJb,iBAAW,EAAEA,WAJT;AAKJc,YAAM,EAAEf,OAAO,CAACe,MALZ;AAMJX,gBAAU,EAAEA,UANR;AAOJY,gCAA0B,EAAEhB,OAAO,CAACgB,0BAPhC;AAQJX,cAAQ,EAAEA,QARN;AASJY,sBAAgB,EAAEjB,OAAO,CAACiB,gBATtB;AAUJC,oBAAc,EAAElB,OAAO,CAACkB,cAVpB;AAWJC,qBAAe,EAAEnB,OAAO,CAACmB,eAXrB;AAYJC,SAAG,EAAEpB,OAAO,CAACoB,GAZT;AAaJC,UAAI,EAAErB,OAAO,CAACqB,IAbV;AAcJC,WAAK,EAAEtB,OAAO,CAACsB,KAAR,KAAkBnB,SAAlB,GAA8BH,OAAO,CAACsB,KAAtC,GAA8C,IAdjD;AAeJC,gBAAU,EAAEvB,OAAO,CAACuB,UAfhB;AAgBJC,6BAAuB,EAAExB,OAAO,CAACwB,uBAhB7B;AAiBJC,gBAAU,EAAEzB,OAAO,CAACyB;AAjBhB,KAAN,KAkBE;AACH;;AACH;AA/CA,EAAkB9B,SAAlB;;AAiDA,eAAe+B,GAAf","names":["TileImage","createXYZ","extentFromProjection","__extends","opt_options","options","interpolate","imageSmoothing","undefined","projection","tileGrid","extent","maxResolution","maxZoom","minZoom","tileSize","_super","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","wrapX","transition","attributionsCollapsible","zDirection","XYZ"],"sourceRoot":"","sources":["../src/source/XYZ.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}