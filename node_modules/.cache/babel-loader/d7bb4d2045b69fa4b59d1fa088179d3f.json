{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/**\n * @module ol/source/ImageStatic\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport { IMAGE_SMOOTHING_DISABLED } from '../renderer/canvas/common.js';\nimport { assign } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getHeight, getWidth, intersects } from '../extent.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\n\nvar Static =\n/** @class */\nfunction (_super) {\n  __extends(Static, _super);\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n\n\n  function Static(options) {\n    var _this = this;\n\n    var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : null;\n    var\n    /** @type {import(\"../Image.js\").LoadFunction} */\n    imageLoadFunction = options.imageLoadFunction !== undefined ? options.imageLoadFunction : defaultImageLoadFunction;\n    var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    _this = _super.call(this, {\n      attributions: options.attributions,\n      interpolate: interpolate,\n      projection: getProjection(options.projection)\n    }) || this;\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.url_ = options.url;\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n\n    _this.imageExtent_ = options.imageExtent;\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n\n    _this.image_ = new ImageWrapper(_this.imageExtent_, undefined, 1, _this.url_, crossOrigin, imageLoadFunction);\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n\n    _this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    _this.image_.addEventListener(EventType.CHANGE, _this.handleImageChange.bind(_this));\n\n    return _this;\n  }\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n\n\n  Static.prototype.getImageExtent = function () {\n    return this.imageExtent_;\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n\n\n  Static.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n\n    return null;\n  };\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n\n\n  Static.prototype.getUrl = function () {\n    return this.url_;\n  };\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n\n\n  Static.prototype.handleImageChange = function (evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      var imageExtent = this.image_.getExtent();\n      var image = this.image_.getImage();\n      var imageWidth = void 0,\n          imageHeight = void 0;\n\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n\n      var extentWidth = getWidth(imageExtent);\n      var extentHeight = getHeight(imageExtent);\n      var xResolution = extentWidth / imageWidth;\n      var yResolution = extentHeight / imageHeight;\n      var targetWidth = imageWidth;\n      var targetHeight = imageHeight;\n\n      if (xResolution > yResolution) {\n        targetWidth = Math.round(extentWidth / yResolution);\n      } else {\n        targetHeight = Math.round(extentHeight / xResolution);\n      }\n\n      if (targetWidth !== imageWidth || targetHeight !== imageHeight) {\n        var context = createCanvasContext2D(targetWidth, targetHeight);\n\n        if (!this.getInterpolate()) {\n          assign(context, IMAGE_SMOOTHING_DISABLED);\n        }\n\n        var canvas = context.canvas;\n        context.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);\n        this.image_.setImage(canvas);\n      }\n    }\n\n    _super.prototype.handleImageChange.call(this, evt);\n  };\n\n  return Static;\n}(ImageSource);\n\nexport default Static;","map":{"version":3,"mappings":"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","names":["EventType","ImageSource","defaultImageLoadFunction","ImageState","ImageWrapper","IMAGE_SMOOTHING_DISABLED","assign","createCanvasContext2D","getHeight","getWidth","intersects","get","getProjection","__extends","options","crossOrigin","undefined","imageLoadFunction","interpolate","imageSmoothing","_super","attributions","projection","_this","url_","url","imageExtent_","imageExtent","image_","imageSize_","imageSize","addEventListener","CHANGE","handleImageChange","bind","Static","extent","resolution","pixelRatio","getExtent","evt","getState","LOADED","image","getImage","imageWidth","imageHeight","width","height","extentWidth","extentHeight","xResolution","yResolution","targetWidth","targetHeight","Math","round","context","getInterpolate","canvas","drawImage","setImage","call"],"sourceRoot":"","sources":["../src/source/ImageStatic.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}