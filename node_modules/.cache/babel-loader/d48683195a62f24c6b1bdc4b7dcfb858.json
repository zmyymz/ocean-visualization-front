{"ast":null,"code":"/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\n\nvar IconImageCache =\n/** @class */\nfunction () {\n  function IconImageCache() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n    /**\n     * @type {number}\n     * @private\n     */\n\n    this.cacheSize_ = 0;\n    /**\n     * @type {number}\n     * @private\n     */\n\n    this.maxCacheSize_ = 32;\n  }\n  /**\n   * FIXME empty description for jsdoc\n   */\n\n\n  IconImageCache.prototype.clear = function () {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  };\n  /**\n   * @return {boolean} Can expire cache.\n   */\n\n\n  IconImageCache.prototype.canExpireCache = function () {\n    return this.cacheSize_ > this.maxCacheSize_;\n  };\n  /**\n   * FIXME empty description for jsdoc\n   */\n\n\n  IconImageCache.prototype.expire = function () {\n    if (this.canExpireCache()) {\n      var i = 0;\n\n      for (var key in this.cache_) {\n        var iconImage = this.cache_[key];\n\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  };\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n\n\n  IconImageCache.prototype.get = function (src, crossOrigin, color) {\n    var key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  };\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n\n\n  IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n    var key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  };\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n\n\n  IconImageCache.prototype.setSize = function (maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  };\n\n  return IconImageCache;\n}();\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\n\n\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\n\nexport var shared = new IconImageCache();","map":{"version":3,"mappings":"AAAA;;;AAGA,SAAQA,QAAR,QAAuB,aAAvB;AAEA;;;;;AAIA;AAAA;AAAA;AACE;AACE;;;;AAIA,SAAKC,MAAL,GAAc,EAAd;AAEA;;;;;AAIA,SAAKC,UAAL,GAAkB,CAAlB;AAEA;;;;;AAIA,SAAKC,aAAL,GAAqB,EAArB;AACD;AAED;;;;;AAGAC;AACE,SAAKH,MAAL,GAAc,EAAd;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACD,GAHD;AAKA;;;;;AAGAE;AACE,WAAO,KAAKF,UAAL,GAAkB,KAAKC,aAA9B;AACD,GAFD;AAIA;;;;;AAGAC;AACE,QAAI,KAAKC,cAAL,EAAJ,EAA2B;AACzB,UAAIC,CAAC,GAAG,CAAR;;AACA,WAAK,IAAMC,GAAX,IAAkB,KAAKN,MAAvB,EAA+B;AAC7B,YAAMO,SAAS,GAAG,KAAKP,MAAL,CAAYM,GAAZ,CAAlB;;AACA,YAAI,CAACD,CAAC,KAAK,CAAP,MAAc,CAAd,IAAmB,CAACE,SAAS,CAACC,WAAV,EAAxB,EAAiD;AAC/C,iBAAO,KAAKR,MAAL,CAAYM,GAAZ,CAAP;AACA,YAAE,KAAKL,UAAP;AACD;AACF;AACF;AACF,GAXD;AAaA;;;;;;;;AAMAE,2CAAIM,GAAJ,EAASC,WAAT,EAAsBC,KAAtB,EAA2B;AACzB,QAAML,GAAG,GAAGM,MAAM,CAACH,GAAD,EAAMC,WAAN,EAAmBC,KAAnB,CAAlB;AACA,WAAOL,GAAG,IAAI,KAAKN,MAAZ,GAAqB,KAAKA,MAAL,CAAYM,GAAZ,CAArB,GAAwC,IAA/C;AACD,GAHD;AAKA;;;;;;;;AAMAH,2CAAIM,GAAJ,EAASC,WAAT,EAAsBC,KAAtB,EAA6BJ,SAA7B,EAAsC;AACpC,QAAMD,GAAG,GAAGM,MAAM,CAACH,GAAD,EAAMC,WAAN,EAAmBC,KAAnB,CAAlB;AACA,SAAKX,MAAL,CAAYM,GAAZ,IAAmBC,SAAnB;AACA,MAAE,KAAKN,UAAP;AACD,GAJD;AAMA;;;;;;;;;AAOAE,+CAAQU,YAAR,EAAoB;AAClB,SAAKX,aAAL,GAAqBW,YAArB;AACA,SAAKC,MAAL;AACD,GAHD;;AAIF;AAAC,CAtFD;AAwFA;;;;;;;;AAMA,SAASF,MAAT,CAAgBH,GAAhB,EAAqBC,WAArB,EAAkCC,KAAlC,EAAuC;AACrC,MAAMI,WAAW,GAAGJ,KAAK,GAAGZ,QAAQ,CAACY,KAAD,CAAX,GAAqB,MAA9C;AACA,SAAOD,WAAW,GAAG,GAAd,GAAoBD,GAApB,GAA0B,GAA1B,GAAgCM,WAAvC;AACD;;AAED,eAAeZ,cAAf;AAEA;;;;;;AAKA,OAAO,IAAMa,MAAM,GAAG,IAAIb,cAAJ,EAAf","names":["asString","cache_","cacheSize_","maxCacheSize_","IconImageCache","canExpireCache","i","key","iconImage","hasListener","src","crossOrigin","color","getKey","maxCacheSize","expire","colorString","shared"],"sourceRoot":"","sources":["../src/style/IconImageCache.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}