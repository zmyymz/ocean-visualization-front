{"ast":null,"code":"import _asyncToGenerator from \"D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport fs from 'fs';\nimport { BaseSource } from './basesource.js';\n\nfunction closeAsync(fd) {\n  return new Promise(function (resolve, reject) {\n    fs.close(fd, function (err) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nfunction openAsync(path, flags) {\n  var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return new Promise(function (resolve, reject) {\n    fs.open(path, flags, mode, function (err, fd) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(fd);\n      }\n    });\n  });\n}\n\nfunction readAsync() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return new Promise(function (resolve, reject) {\n    fs.read.apply(fs, args.concat([function (err, bytesRead, buffer) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve({\n          bytesRead: bytesRead,\n          buffer: buffer\n        });\n      }\n    }]));\n  });\n}\n\nvar FileSource = /*#__PURE__*/function (_BaseSource) {\n  _inherits(FileSource, _BaseSource);\n\n  var _super = _createSuper(FileSource);\n\n  function FileSource(path) {\n    var _this;\n\n    _classCallCheck(this, FileSource);\n\n    _this = _super.call(this);\n    _this.path = path;\n    _this.openRequest = openAsync(path, 'r');\n    return _this;\n  }\n\n  _createClass(FileSource, [{\n    key: \"fetchSlice\",\n    value: function () {\n      var _fetchSlice = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(slice) {\n        var fd, _yield$readAsync, buffer;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.openRequest;\n\n              case 2:\n                fd = _context.sent;\n                _context.next = 5;\n                return readAsync(fd, Buffer.alloc(slice.length), 0, slice.length, slice.offset);\n\n              case 5:\n                _yield$readAsync = _context.sent;\n                buffer = _yield$readAsync.buffer;\n                return _context.abrupt(\"return\", buffer.buffer);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchSlice(_x) {\n        return _fetchSlice.apply(this, arguments);\n      }\n\n      return fetchSlice;\n    }()\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var fd;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.openRequest;\n\n              case 2:\n                fd = _context2.sent;\n                _context2.next = 5;\n                return closeAsync(fd);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }]);\n\n  return FileSource;\n}(BaseSource);\n\nexport function makeFileSource(path) {\n  return new FileSource(path);\n}","map":{"version":3,"sources":["D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/geotiff/dist-module/source/file.js"],"names":["fs","BaseSource","closeAsync","fd","Promise","resolve","reject","close","err","openAsync","path","flags","mode","undefined","open","readAsync","args","read","bytesRead","buffer","FileSource","openRequest","slice","Buffer","alloc","length","offset","makeFileSource"],"mappings":";;;;;;;;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,SAASC,UAAT,CAAoBC,EAApB,EAAwB;AACtB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCN,IAAAA,EAAE,CAACO,KAAH,CAASJ,EAAT,EAAa,UAACK,GAAD,EAAS;AACpB,UAAIA,GAAJ,EAAS;AACPF,QAAAA,MAAM,CAACE,GAAD,CAAN;AACD,OAFD,MAEO;AACLH,QAAAA,OAAO;AACR;AACF,KAND;AAOD,GARM,CAAP;AASD;;AAED,SAASI,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAkD;AAAA,MAAlBC,IAAkB,uEAAXC,SAAW;AAChD,SAAO,IAAIT,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCN,IAAAA,EAAE,CAACc,IAAH,CAAQJ,IAAR,EAAcC,KAAd,EAAqBC,IAArB,EAA2B,UAACJ,GAAD,EAAML,EAAN,EAAa;AACtC,UAAIK,GAAJ,EAAS;AACPF,QAAAA,MAAM,CAACE,GAAD,CAAN;AACD,OAFD,MAEO;AACLH,QAAAA,OAAO,CAACF,EAAD,CAAP;AACD;AACF,KAND;AAOD,GARM,CAAP;AASD;;AAED,SAASY,SAAT,GAA4B;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAC1B,SAAO,IAAIZ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCN,IAAAA,EAAE,CAACiB,IAAH,OAAAjB,EAAE,EAASgB,IAAT,SAAe,UAACR,GAAD,EAAMU,SAAN,EAAiBC,MAAjB,EAA4B;AAC3C,UAAIX,GAAJ,EAAS;AACPF,QAAAA,MAAM,CAACE,GAAD,CAAN;AACD,OAFD,MAEO;AACLH,QAAAA,OAAO,CAAC;AAAEa,UAAAA,SAAS,EAATA,SAAF;AAAaC,UAAAA,MAAM,EAANA;AAAb,SAAD,CAAP;AACD;AACF,KANC,GAAF;AAOD,GARM,CAAP;AASD;;IAEKC,U;;;;;AACJ,sBAAYV,IAAZ,EAAkB;AAAA;;AAAA;;AAChB;AACA,UAAKA,IAAL,GAAYA,IAAZ;AACA,UAAKW,WAAL,GAAmBZ,SAAS,CAACC,IAAD,EAAO,GAAP,CAA5B;AAHgB;AAIjB;;;;;gFAED,iBAAiBY,KAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEmB,KAAKD,WAFxB;;AAAA;AAEQlB,gBAAAA,EAFR;AAAA;AAAA,uBAG2BY,SAAS,CAChCZ,EADgC,EAEhCoB,MAAM,CAACC,KAAP,CAAaF,KAAK,CAACG,MAAnB,CAFgC,EAGhC,CAHgC,EAIhCH,KAAK,CAACG,MAJ0B,EAKhCH,KAAK,CAACI,MAL0B,CAHpC;;AAAA;AAAA;AAGUP,gBAAAA,MAHV,oBAGUA,MAHV;AAAA,iDAUSA,MAAM,CAACA,MAVhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;2EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACmB,KAAKE,WADxB;;AAAA;AACQlB,gBAAAA,EADR;AAAA;AAAA,uBAEQD,UAAU,CAACC,EAAD,CAFlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;EApBuBF,U;;AA0BzB,OAAO,SAAS0B,cAAT,CAAwBjB,IAAxB,EAA8B;AACnC,SAAO,IAAIU,UAAJ,CAAeV,IAAf,CAAP;AACD","sourcesContent":["import fs from 'fs';\nimport { BaseSource } from './basesource.js';\n\nfunction closeAsync(fd) {\n  return new Promise((resolve, reject) => {\n    fs.close(fd, (err) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nfunction openAsync(path, flags, mode = undefined) {\n  return new Promise((resolve, reject) => {\n    fs.open(path, flags, mode, (err, fd) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(fd);\n      }\n    });\n  });\n}\n\nfunction readAsync(...args) {\n  return new Promise((resolve, reject) => {\n    fs.read(...args, (err, bytesRead, buffer) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve({ bytesRead, buffer });\n      }\n    });\n  });\n}\n\nclass FileSource extends BaseSource {\n  constructor(path) {\n    super();\n    this.path = path;\n    this.openRequest = openAsync(path, 'r');\n  }\n\n  async fetchSlice(slice) {\n    // TODO: use `signal`\n    const fd = await this.openRequest;\n    const { buffer } = await readAsync(\n      fd,\n      Buffer.alloc(slice.length),\n      0,\n      slice.length,\n      slice.offset,\n    );\n    return buffer.buffer;\n  }\n\n  async close() {\n    const fd = await this.openRequest;\n    await closeAsync(fd);\n  }\n}\n\nexport function makeFileSource(path) {\n  return new FileSource(path);\n}\n"]},"metadata":{},"sourceType":"module"}