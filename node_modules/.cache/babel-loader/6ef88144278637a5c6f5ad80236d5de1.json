{"ast":null,"code":"import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\n\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool, opt_Context2DSettings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  var canvas;\n\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n\n  if (opt_height) {\n    canvas.height = opt_height;\n  } //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n\n\n  return (\n    /** @type {CanvasRenderingContext2D} */\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\n\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n  return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\n\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n  return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\n\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\n\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\n\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\n\nexport function replaceChildren(node, children) {\n  var oldChildren = node.childNodes;\n\n  for (var i = 0; true; ++i) {\n    var oldChild = oldChildren[i];\n    var newChild = children[i]; // check if our work is done\n\n    if (!oldChild && !newChild) {\n      break;\n    } // check if children match\n\n\n    if (oldChild === newChild) {\n      continue;\n    } // check if a new child needs to be added\n\n\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    } // check if an old child needs to be removed\n\n\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    } // reorder\n\n\n    node.insertBefore(newChild, oldChild);\n  }\n}","map":{"version":3,"mappings":"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","names":["WORKER_OFFSCREEN_CANVAS","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","length","shift","OffscreenCanvas","document","createElement","width","height","getContext","outerWidth","element","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","i","oldChild","newChild","appendChild","insertBefore"],"sourceRoot":"","sources":["src/dom.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}