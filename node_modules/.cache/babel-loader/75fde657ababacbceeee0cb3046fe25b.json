{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/control/Attribution\n */\n\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='â€º'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\n\nvar Attribution =\n/** @class */\nfunction (_super) {\n  __extends(Attribution, _super);\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n\n\n  function Attribution(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target\n    }) || this;\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n\n    _this.ulElement_ = document.createElement('ul');\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.userCollapsed_ = _this.collapsed_;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.overrideCollapsible_ = options.collapsible !== undefined;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.collapsible_ = options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!_this.collapsible_) {\n      _this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n    var expandClassName = options.expandClassName !== undefined ? options.expandClassName : className + '-expand';\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n    var collapseClassName = options.collapseClassName !== undefined ? options.collapseClassName : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      _this.collapseLabel_ = document.createElement('span');\n      _this.collapseLabel_.textContent = collapseLabel;\n      _this.collapseLabel_.className = collapseClassName;\n    } else {\n      _this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      _this.label_ = document.createElement('span');\n      _this.label_.textContent = label;\n      _this.label_.className = expandClassName;\n    } else {\n      _this.label_ = label;\n    }\n\n    var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n\n    _this.toggleButton_ = document.createElement('button');\n\n    _this.toggleButton_.setAttribute('type', 'button');\n\n    _this.toggleButton_.setAttribute('aria-expanded', String(!_this.collapsed_));\n\n    _this.toggleButton_.title = tipLabel;\n\n    _this.toggleButton_.appendChild(activeLabel);\n\n    _this.toggleButton_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL + (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') + (_this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = _this.element;\n    element.className = cssClasses;\n    element.appendChild(_this.toggleButton_);\n    element.appendChild(_this.ulElement_);\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n\n    _this.renderedAttributions_ = [];\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.renderedVisible_ = true;\n    return _this;\n  }\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n\n\n  Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n\n    var visibleAttributions = [];\n    var collapsible = true;\n    var layerStatesArray = frameState.layerStatesArray;\n\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      var source =\n      /** @type {import(\"../layer/Layer.js\").default} */\n      layerState.layer.getSource();\n\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible = collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n\n    return visibleAttributions;\n  };\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n\n\n  Attribution.prototype.updateElement_ = function (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n    var visible = attributions.length > 0;\n\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_); // append the attributions\n\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n\n\n  Attribution.prototype.handleClick_ = function (event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  };\n  /**\n   * @private\n   */\n\n\n  Attribution.prototype.handleToggle_ = function () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  };\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n\n\n  Attribution.prototype.getCollapsible = function () {\n    return this.collapsible_;\n  };\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n\n\n  Attribution.prototype.setCollapsible = function (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  };\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n\n\n  Attribution.prototype.setCollapsed = function (collapsed) {\n    this.userCollapsed_ = collapsed;\n\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n\n    this.handleToggle_();\n  };\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n\n\n  Attribution.prototype.getCollapsed = function () {\n    return this.collapsed_;\n  };\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n\n\n  Attribution.prototype.render = function (mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  };\n\n  return Attribution;\n}(Control);\n\nexport default Attribution;","map":{"version":3,"mappings":"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","names":["Control","EventType","CLASS_COLLAPSED","CLASS_CONTROL","CLASS_UNSELECTABLE","equals","inView","removeChildren","replaceNode","__extends","opt_options","options","_super","element","document","createElement","render","target","_this","ulElement_","collapsed_","collapsed","undefined","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","className","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","String","title","appendChild","addEventListener","CLICK","handleClick_","bind","cssClasses","renderedAttributions_","renderedVisible_","Attribution","frameState","lookup","visibleAttributions","layerStatesArray","i","ii","length","layerState","viewState","source","layer","getSource","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","Array","isArray","j","jj","push","setCollapsible","style","display","collectSourceAttributions_","visible","innerHTML","event","preventDefault","handleToggle_","classList","toggle","mapEvent","updateElement_"],"sourceRoot":"","sources":["../src/control/Attribution.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}