{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n\n/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\n\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString()).replace(xRegEx, tileCoord[1].toString()).replace(yRegEx, tileCoord[2].toString()).replace(dashYRegEx, function () {\n          var z = tileCoord[0];\n          var range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n\n          var y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n      }\n    }\n  );\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\n\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\n\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\n\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\n\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode = void 0;\n\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n\n    return urls;\n  }\n\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n\n  if (match) {\n    // number range\n    var stop_1 = parseInt(match[2], 10);\n\n    for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n\n    return urls;\n  }\n\n  urls.push(url);\n  return urls;\n}","map":{"version":3,"mappings":"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","names":["assert","modulo","hash","tileCoordHash","createFromTemplate","template","tileGrid","zRegEx","xRegEx","yRegEx","dashYRegEx","tileCoord","pixelRatio","projection","undefined","replace","toString","z","range","getFullTileRange","y","getHeight","createFromTemplates","templates","len","length","tileUrlFunctions","Array","i","createFromTileUrlFunctions","h","index","nullTileUrlFunction","expandUrl","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","push","String","fromCharCode","stop_1","parseInt"],"sourceRoot":"","sources":["src/tileurlfunction.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}