{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/filter/IsBetween\n */\n\n\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\n\nvar IsBetween =\n/** @class */\nfunction (_super) {\n  __extends(IsBetween, _super);\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} lowerBoundary The lower bound of the range.\n   * @param {!number} upperBoundary The upper bound of the range.\n   */\n\n\n  function IsBetween(propertyName, lowerBoundary, upperBoundary) {\n    var _this = _super.call(this, 'PropertyIsBetween', propertyName) || this;\n    /**\n     * @type {!number}\n     */\n\n\n    _this.lowerBoundary = lowerBoundary;\n    /**\n     * @type {!number}\n     */\n\n    _this.upperBoundary = upperBoundary;\n    return _this;\n  }\n\n  return IsBetween;\n}(Comparison);\n\nexport default IsBetween;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,OAAOA,UAAP,MAAuB,iBAAvB;AAEA;;;;;;AAKA;AAAA;AAAA;AAAwBC;AACtB;;;;;;;AAKA,qBAAYC,YAAZ,EAA0BC,aAA1B,EAAyCC,aAAzC,EAAsD;AAAtD,gBACEC,kBAAM,mBAAN,EAA2BH,YAA3B,KAAwC,IAD1C;AAGE;;;;;AAGAI,SAAI,CAACH,aAAL,GAAqBA,aAArB;AAEA;;;;AAGAG,SAAI,CAACF,aAAL,GAAqBA,aAArB;;AACD;;AACH;AAnBA,EAAwBJ,UAAxB;;AAqBA,eAAeO,SAAf","names":["Comparison","__extends","propertyName","lowerBoundary","upperBoundary","_super","_this","IsBetween"],"sourceRoot":"","sources":["../../src/format/filter/IsBetween.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}