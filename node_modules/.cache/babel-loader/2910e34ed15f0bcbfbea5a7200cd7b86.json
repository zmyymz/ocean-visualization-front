{"ast":null,"code":"/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @return {boolean} true.\n */\n\nexport function TRUE() {\n  return true;\n}\n/**\n * Always returns false.\n * @return {boolean} false.\n */\n\nexport function FALSE() {\n  return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\n\nexport function VOID() {}\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\n\nexport function memoizeOne(fn) {\n  var called = false;\n  /** @type {ReturnType} */\n\n  var lastResult;\n  /** @type {Array<any>} */\n\n  var lastArgs;\n  var lastThis;\n  return function () {\n    var nextArgs = Array.prototype.slice.call(arguments);\n\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n\n    return lastResult;\n  };\n}\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\n\nexport function toPromise(getter) {\n  function promiseGetter() {\n    var value;\n\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    if (value instanceof Promise) {\n      return value;\n    }\n\n    return Promise.resolve(value);\n  }\n\n  return promiseGetter();\n}","map":{"version":3,"mappings":"AAAA;;;AAIA,SAAQA,MAAM,IAAIC,WAAlB,QAAoC,YAApC;AAEA;;;;;AAIA,OAAM,SAAUC,IAAV,GAAc;AAClB,SAAO,IAAP;AACD;AAED;;;;;AAIA,OAAM,SAAUC,KAAV,GAAe;AACnB,SAAO,KAAP;AACD;AAED;;;;;;AAKA,OAAM,SAAUC,IAAV,GAAc,CAAK;AAEzB;;;;;;;;;;AASA,OAAM,SAAUC,UAAV,CAAqBC,EAArB,EAAuB;AAC3B,MAAIC,MAAM,GAAG,KAAb;AAEA;;AACA,MAAIC,UAAJ;AAEA;;AACA,MAAIC,QAAJ;AAEA,MAAIC,QAAJ;AAEA,SAAO;AACL,QAAMC,QAAQ,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAjB;;AACA,QAAI,CAACT,MAAD,IAAW,SAASG,QAApB,IAAgC,CAACT,WAAW,CAACU,QAAD,EAAWF,QAAX,CAAhD,EAAsE;AACpEF,YAAM,GAAG,IAAT;AACAG,cAAQ,GAAG,IAAX;AACAD,cAAQ,GAAGE,QAAX;AACAH,gBAAU,GAAGF,EAAE,CAACW,KAAH,CAAS,IAAT,EAAeD,SAAf,CAAb;AACD;;AACD,WAAOR,UAAP;AACD,GATD;AAUD;AAED;;;;;;AAKA,OAAM,SAAUU,SAAV,CAAoBC,MAApB,EAA0B;AAC9B,WAASC,aAAT,GAAsB;AACpB,QAAIC,KAAJ;;AACA,QAAI;AACFA,WAAK,GAAGF,MAAM,EAAd;AACD,KAFD,CAEE,OAAOG,GAAP,EAAY;AACZ,aAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD;;AACD,QAAID,KAAK,YAAYE,OAArB,EAA8B;AAC5B,aAAOF,KAAP;AACD;;AACD,WAAOE,OAAO,CAACE,OAAR,CAAgBJ,KAAhB,CAAP;AACD;;AACD,SAAOD,aAAa,EAApB;AACD","names":["equals","arrayEquals","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","Array","prototype","slice","call","arguments","apply","toPromise","getter","promiseGetter","value","err","Promise","reject","resolve"],"sourceRoot":"","sources":["src/functions.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}