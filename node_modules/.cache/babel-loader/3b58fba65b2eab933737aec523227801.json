{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\n\n/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\n\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n\n  return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\n\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\n\n\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [extent[0] - value, extent[1] - value, extent[2] + value, extent[3] + value];\n  }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\n\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\n\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n\n  return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\n\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\n\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] && extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\n\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\n\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n\n  return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\n\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\n\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\n\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\n\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\n\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\n\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\n\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\n\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] && extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\n\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return Math.abs(extent1[0] - extent2[0]) < tolerance && Math.abs(extent1[2] - extent2[2]) < tolerance && Math.abs(extent1[1] - extent2[1]) < tolerance && Math.abs(extent1[3] - extent2[3]) < tolerance;\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\n\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n\n  return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\n\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\n\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n\n  return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\n\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n\n  return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\n\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n\n  return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\n\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\n\nexport function forEachCorner(extent, callback) {\n  var val;\n  val = callback(getBottomLeft(extent));\n\n  if (val) {\n    return val;\n  }\n\n  val = callback(getBottomRight(extent));\n\n  if (val) {\n    return val;\n  }\n\n  val = callback(getTopRight(extent));\n\n  if (val) {\n    return val;\n  }\n\n  val = callback(getTopLeft(extent));\n\n  if (val) {\n    return val;\n  }\n\n  return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\n\nexport function getArea(extent) {\n  var area = 0;\n\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n\n  return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\n\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\n\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\n\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\n\nexport function getCorner(extent, corner) {\n  var coordinate;\n\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n\n  return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\n\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\n\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\n\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\n\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\n\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n\n  return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\n\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\n\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\n\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\n\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\n\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\n\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] && extent1[2] >= extent2[0] && extent1[1] <= extent2[3] && extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\n\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\n\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\n\nexport function scaleFromCenter(extent, value) {\n  var deltaX = (extent[2] - extent[0]) / 2 * (value - 1);\n  var deltaY = (extent[3] - extent[1]) / 2 * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\n\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n\n  if (startRel === Relationship.INTERSECTING || endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x = void 0,\n        y = void 0;\n\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n\n    if (!intersects && !!(endRel & Relationship.RIGHT) && !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n\n    if (!intersects && !!(endRel & Relationship.BELOW) && !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n\n    if (!intersects && !!(endRel & Relationship.LEFT) && !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n\n  return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\n\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  var coordinates = [];\n\n  if (opt_stops > 1) {\n    var width = extent[2] - extent[0];\n    var height = extent[3] - extent[1];\n\n    for (var i = 0; i < opt_stops; ++i) {\n      coordinates.push(extent[0] + width * i / opt_stops, extent[1], extent[2], extent[1] + height * i / opt_stops, extent[2] - width * i / opt_stops, extent[3], extent[0], extent[3] - height * i / opt_stops);\n    }\n  } else {\n    coordinates = [extent[0], extent[1], extent[2], extent[1], extent[2], extent[3], extent[0], extent[3]];\n  }\n\n  transformFn(coordinates, coordinates, 2);\n  var xs = [];\n  var ys = [];\n\n  for (var i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\n\nexport function wrapX(extent, projection) {\n  var projectionExtent = projection.getExtent();\n  var center = getCenter(extent);\n\n  if (projection.canWrapX() && (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n    var offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n\n  return extent;\n}","map":{"version":3,"mappings":"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","names":["Corner","Relationship","assert","boundingExtent","coordinates","extent","createEmpty","i","ii","length","extendCoordinate","_boundingExtentXYs","xs","ys","opt_extent","minX","Math","min","apply","minY","maxX","max","maxY","createOrUpdate","buffer","value","clone","slice","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","equals","approximatelyEquals","tolerance","abs","extend","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCenter","getCorner","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","getEnlargedArea","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersectionArea","intersection","getIntersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","opt_stops","width","height","push","l","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","worldsAway","floor"],"sourceRoot":"","sources":["src/extent.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}