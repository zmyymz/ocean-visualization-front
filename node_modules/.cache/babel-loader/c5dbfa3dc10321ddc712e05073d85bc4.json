{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/ImageTile\n */\n\n\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\n\nvar ImageTile =\n/** @class */\nfunction (_super) {\n  __extends(ImageTile, _super);\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n\n\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n    var _this = _super.call(this, tileCoord, state, opt_options) || this;\n    /**\n     * @private\n     * @type {?string}\n     */\n\n\n    _this.crossOrigin_ = crossOrigin;\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n\n    _this.src_ = src;\n    _this.key = src;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n\n    _this.image_ = new Image();\n\n    if (crossOrigin !== null) {\n      _this.image_.crossOrigin = crossOrigin;\n    }\n    /**\n     * @private\n     * @type {?function():void}\n     */\n\n\n    _this.unlisten_ = null;\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n\n    _this.tileLoadFunction_ = tileLoadFunction;\n    return _this;\n  }\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n\n\n  ImageTile.prototype.getImage = function () {\n    return this.image_;\n  };\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n\n\n  ImageTile.prototype.setImage = function (element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n\n\n  ImageTile.prototype.handleImageError_ = function () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n\n\n  ImageTile.prototype.handleImageLoad_ = function () {\n    var image =\n    /** @type {HTMLImageElement} */\n    this.image_;\n\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n\n\n  ImageTile.prototype.load = function () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n    }\n  };\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n\n\n  ImageTile.prototype.unlistenImage_ = function () {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  };\n\n  return ImageTile;\n}(Tile);\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\n\n\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;","map":{"version":3,"mappings":"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","names":["Tile","TileState","createCanvasContext2D","listenImage","__extends","tileCoord","state","src","crossOrigin","tileLoadFunction","opt_options","_super","_this","crossOrigin_","src_","key","image_","Image","unlisten_","tileLoadFunction_","ImageTile","element","LOADED","unlistenImage_","changed","ERROR","getBlankImage","image","naturalWidth","naturalHeight","EMPTY","IDLE","LOADING","handleImageLoad_","bind","handleImageError_","ctx","fillStyle","fillRect","canvas"],"sourceRoot":"","sources":["src/ImageTile.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}