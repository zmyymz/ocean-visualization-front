{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/reproj/Tile\n */\n\n\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\n\nvar ReprojTile =\n/** @class */\nfunction (_super) {\n  __extends(ReprojTile, _super);\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n   */\n\n\n  function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_interpolate) {\n    var _this = _super.call(this, tileCoord, TileState.IDLE, {\n      interpolate: !!opt_interpolate\n    }) || this;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n\n    _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.pixelRatio_ = pixelRatio;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.gutter_ = gutter;\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n\n    _this.canvas_ = null;\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n\n    _this.sourceTileGrid_ = sourceTileGrid;\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n\n    _this.targetTileGrid_ = targetTileGrid;\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n\n    _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n\n    _this.sourceTiles_ = [];\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n\n    _this.sourcesListenerKeys_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.sourceZ_ = 0;\n    var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n\n    var maxTargetExtent = _this.targetTileGrid_.getExtent();\n\n    var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ? getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      _this.state = TileState.EMPTY;\n      return _this;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n    var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      _this.state = TileState.EMPTY;\n      return _this;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n\n    _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n\n    if (_this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      _this.state = TileState.EMPTY;\n      return _this;\n    }\n\n    _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n\n    var sourceExtent = _this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      _this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n\n          if (tile) {\n            _this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (_this.sourceTiles_.length === 0) {\n        _this.state = TileState.EMPTY;\n      }\n    }\n\n    return _this;\n  }\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n\n\n  ReprojTile.prototype.getImage = function () {\n    return this.canvas_;\n  };\n  /**\n   * @private\n   */\n\n\n  ReprojTile.prototype.reproject_ = function () {\n    var sources = [];\n    this.sourceTiles_.forEach(function (tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.interpolate);\n      this.state = TileState.LOADED;\n    }\n\n    this.changed();\n  };\n  /**\n   * Load not yet loaded URI.\n   */\n\n\n  ReprojTile.prototype.load = function () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      var leftToLoad_1 = 0;\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        var state = tile.getState();\n\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad_1++;\n          var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n            var state = tile.getState();\n\n            if (state == TileState.LOADED || state == TileState.ERROR || state == TileState.EMPTY) {\n              unlistenByKey(sourceListenKey_1);\n              leftToLoad_1--;\n\n              if (leftToLoad_1 === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey_1);\n        }\n      }.bind(this));\n\n      if (leftToLoad_1 === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          var state = tile.getState();\n\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  ReprojTile.prototype.unlistenSources_ = function () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile);\n\nexport default ReprojTile;","map":{"version":3,"mappings":"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","names":["ERROR_THRESHOLD","EventType","Tile","TileState","Triangulation","calculateSourceExtentResolution","render","renderReprojected","clamp","getArea","getIntersection","listen","unlistenByKey","__extends","sourceProj","sourceTileGrid","targetProj","targetTileGrid","tileCoord","wrappedTileCoord","pixelRatio","gutter","getTileFunction","opt_errorThreshold","opt_renderEdges","opt_interpolate","_super","IDLE","interpolate","_this","renderEdges_","undefined","pixelRatio_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","targetExtent","getTileCoordExtent","maxTargetExtent","getExtent","maxSourceExtent","limitedTargetExtent","state","EMPTY","sourceProjExtent","targetResolution","getResolution","sourceResolution","isFinite","errorThresholdInPixels","triangulation_","getTriangles","length","getZForResolution","sourceExtent","calculateSourceExtent","canWrapX","sourceRange","getTileRangeForExtentAndZ","srcX","minX","maxX","srcY","minY","maxY","tile","push","ReprojTile","sources","forEach","i","arr","getState","LOADED","extent","image","getImage","bind","ERROR","z","size","getTileSize","width","height","changed","LOADING","leftToLoad_1","sourceListenKey_1","CHANGE","e","unlistenSources_","reproject_","setTimeout","load"],"sourceRoot":"","sources":["../src/reproj/Tile.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}