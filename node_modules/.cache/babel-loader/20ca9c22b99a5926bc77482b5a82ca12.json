{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.typed-array.float32-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.array.slice.js\";\n\n/**\n * @module ol/webgl/TileTexture\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport DataTile from '../DataTile.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileState from '../TileState.js';\nimport WebGLArrayBuffer from './Buffer.js';\nimport { ARRAY_BUFFER, STATIC_DRAW } from '../webgl.js';\nimport { IMAGE_SMOOTHING_DISABLED } from '../renderer/canvas/common.js';\nimport { assign } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { toSize } from '../size.js';\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {boolean} interpolate Interpolate when resampling.\n */\n\nfunction bindAndConfigure(gl, texture, interpolate) {\n  var resampleFilter = interpolate ? gl.LINEAR : gl.NEAREST;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, resampleFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, resampleFilter);\n}\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image The image.\n * @param {boolean} interpolate Interpolate when resampling.\n */\n\n\nfunction uploadImageTexture(gl, texture, image, interpolate) {\n  bindAndConfigure(gl, texture, interpolate);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n}\n/**\n * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").Data} data The pixel data.\n * @param {import(\"../size.js\").Size} size The pixel size.\n * @param {number} bandCount The band count.\n * @param {boolean} interpolate Interpolate when resampling.\n */\n\n\nfunction uploadDataTexture(helper, texture, data, size, bandCount, interpolate) {\n  var gl = helper.getGL();\n  bindAndConfigure(gl, texture, interpolate);\n  var bytesPerRow = data.byteLength / size[1];\n  var unpackAlignment = 1;\n\n  if (bytesPerRow % 8 === 0) {\n    unpackAlignment = 8;\n  } else if (bytesPerRow % 4 === 0) {\n    unpackAlignment = 4;\n  } else if (bytesPerRow % 2 === 0) {\n    unpackAlignment = 2;\n  }\n\n  var format;\n\n  switch (bandCount) {\n    case 1:\n      {\n        format = gl.LUMINANCE;\n        break;\n      }\n\n    case 2:\n      {\n        format = gl.LUMINANCE_ALPHA;\n        break;\n      }\n\n    case 3:\n      {\n        format = gl.RGB;\n        break;\n      }\n\n    case 4:\n      {\n        format = gl.RGBA;\n        break;\n      }\n\n    default:\n      {\n        throw new Error(\"Unsupported number of bands: \".concat(bandCount));\n      }\n  }\n\n  var textureType;\n\n  if (data instanceof Float32Array) {\n    textureType = gl.FLOAT;\n    helper.getExtension('OES_texture_float');\n    helper.getExtension('OES_texture_float_linear');\n  } else {\n    textureType = gl.UNSIGNED_BYTE;\n  }\n\n  var oldUnpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, size[0], size[1], 0, format, textureType, data);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, oldUnpackAlignment);\n}\n/**\n * @type {CanvasRenderingContext2D}\n */\n\n\nvar pixelContext = null;\n\nfunction createPixelContext() {\n  var canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n/**\n * @typedef {import(\"../DataTile.js\").default|ImageTile|ReprojTile} TileType\n */\n\n/**\n * @typedef {Object} Options\n * @property {TileType} tile The tile.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid Tile grid.\n * @property {import(\"../webgl/Helper.js\").default} helper WebGL helper.\n * @property {number} [tilePixelRatio=1] Tile pixel ratio.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n */\n\n\nvar TileTexture =\n/** @class */\nfunction (_super) {\n  __extends(TileTexture, _super);\n  /**\n   * @param {Options} options The tile texture options.\n   */\n\n\n  function TileTexture(options) {\n    var _this = _super.call(this) || this;\n    /**\n     * @type {TileType}\n     */\n\n\n    _this.tile;\n    /**\n     * @type {Array<WebGLTexture>}\n     */\n\n    _this.textures = [];\n    _this.handleTileChange_ = _this.handleTileChange_.bind(_this);\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n\n    _this.size = toSize(options.grid.getTileSize(options.tile.tileCoord[0]));\n    /**\n     * @type {number}\n     * @private\n     */\n\n    _this.tilePixelRatio_ = options.tilePixelRatio || 1;\n    /**\n     * @type {number}\n     * @private\n     */\n\n    _this.gutter_ = options.gutter || 0;\n    /**\n     * @type {number}\n     */\n\n    _this.bandCount = NaN;\n    /**\n     * @type {import(\"../webgl/Helper.js\").default}\n     * @private\n     */\n\n    _this.helper_ = options.helper;\n    var coords = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n    coords.fromArray([0, 1, 1, 1, 1, 0, 0, 0]);\n\n    _this.helper_.flushBufferData(coords);\n    /**\n     * @type {WebGLArrayBuffer}\n     */\n\n\n    _this.coords = coords;\n\n    _this.setTile(options.tile);\n\n    return _this;\n  }\n  /**\n   * @param {TileType} tile Tile.\n   */\n\n\n  TileTexture.prototype.setTile = function (tile) {\n    if (tile !== this.tile) {\n      if (this.tile) {\n        this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n\n      this.tile = tile;\n      this.textures.length = 0;\n      this.loaded = tile.getState() === TileState.LOADED;\n\n      if (this.loaded) {\n        this.uploadTile_();\n      } else {\n        if (tile instanceof ImageTile) {\n          var image = tile.getImage();\n\n          if (image instanceof Image && !image.crossOrigin) {\n            image.crossOrigin = 'anonymous';\n          }\n        }\n\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n    }\n  };\n\n  TileTexture.prototype.uploadTile_ = function () {\n    var helper = this.helper_;\n    var gl = helper.getGL();\n    var tile = this.tile;\n\n    if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n      var image = tile.getImage();\n\n      if (this.gutter_ !== 0) {\n        var gutter = this.tilePixelRatio_ * this.gutter_;\n        var width = Math.round(image.width - 2 * gutter);\n        var height = Math.round(image.height - 2 * gutter);\n        var context = createCanvasContext2D(width, height);\n\n        if (!tile.interpolate) {\n          assign(context, IMAGE_SMOOTHING_DISABLED);\n        }\n\n        context.drawImage(image, gutter, gutter, width, height, 0, 0, width, height);\n        image = context.canvas;\n      }\n\n      var texture = gl.createTexture();\n      this.textures.push(texture);\n      this.bandCount = 4;\n      uploadImageTexture(gl, texture, image, tile.interpolate);\n      return;\n    }\n\n    var pixelSize = [this.size[0] * this.tilePixelRatio_, this.size[1] * this.tilePixelRatio_];\n    var data = tile.getData();\n    var isFloat = data instanceof Float32Array;\n    var pixelCount = pixelSize[0] * pixelSize[1];\n    var DataType = isFloat ? Float32Array : Uint8Array;\n    var bytesPerElement = DataType.BYTES_PER_ELEMENT;\n    var bytesPerRow = data.byteLength / pixelSize[1];\n    this.bandCount = Math.floor(bytesPerRow / bytesPerElement / pixelSize[0]);\n    var textureCount = Math.ceil(this.bandCount / 4);\n\n    if (textureCount === 1) {\n      var texture = gl.createTexture();\n      this.textures.push(texture);\n      uploadDataTexture(helper, texture, data, pixelSize, this.bandCount, tile.interpolate);\n      return;\n    }\n\n    var textureDataArrays = new Array(textureCount);\n\n    for (var textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      var texture = gl.createTexture();\n      this.textures.push(texture);\n      var bandCount = textureIndex < textureCount - 1 ? 4 : this.bandCount % 4;\n      textureDataArrays[textureIndex] = new DataType(pixelCount * bandCount);\n    }\n\n    var dataIndex = 0;\n    var rowOffset = 0;\n    var colCount = pixelSize[0] * this.bandCount;\n\n    for (var rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n      for (var colIndex = 0; colIndex < colCount; ++colIndex) {\n        var dataValue = data[rowOffset + colIndex];\n        var pixelIndex = Math.floor(dataIndex / this.bandCount);\n        var bandIndex = colIndex % this.bandCount;\n        var textureIndex = Math.floor(bandIndex / 4);\n        var textureData = textureDataArrays[textureIndex];\n        var bandCount = textureData.length / pixelCount;\n        var textureBandIndex = bandIndex % 4;\n        textureData[pixelIndex * bandCount + textureBandIndex] = dataValue;\n        ++dataIndex;\n      }\n\n      rowOffset += bytesPerRow / bytesPerElement;\n    }\n\n    for (var textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      var texture = this.textures[textureIndex];\n      var textureData = textureDataArrays[textureIndex];\n      var bandCount = textureData.length / pixelCount;\n      uploadDataTexture(helper, texture, textureData, pixelSize, bandCount, tile.interpolate);\n    }\n  };\n\n  TileTexture.prototype.handleTileChange_ = function () {\n    if (this.tile.getState() === TileState.LOADED) {\n      this.loaded = true;\n      this.uploadTile_();\n      this.dispatchEvent(EventType.CHANGE);\n    }\n  };\n\n  TileTexture.prototype.disposeInternal = function () {\n    var gl = this.helper_.getGL();\n    this.helper_.deleteBuffer(this.coords);\n\n    for (var i = 0; i < this.textures.length; ++i) {\n      gl.deleteTexture(this.textures[i]);\n    }\n\n    this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n  };\n  /**\n   * Get data for a pixel.  If the tile is not loaded, null is returned.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {import(\"../DataTile.js\").Data|null} The data.\n   */\n\n\n  TileTexture.prototype.getPixelData = function (col, row) {\n    if (!this.loaded) {\n      return null;\n    }\n\n    col = Math.floor(this.tilePixelRatio_ * col);\n    row = Math.floor(this.tilePixelRatio_ * row);\n\n    if (this.tile instanceof DataTile) {\n      var data_1 = this.tile.getData();\n      var pixelsPerRow = Math.floor(this.tilePixelRatio_ * this.size[0]);\n\n      if (data_1 instanceof DataView) {\n        var bytesPerPixel = data_1.byteLength / (this.size[0] * this.size[1]);\n        var offset_1 = row * pixelsPerRow * bytesPerPixel + col * bytesPerPixel;\n        var buffer = data_1.buffer.slice(offset_1, offset_1 + bytesPerPixel);\n        return new DataView(buffer);\n      }\n\n      var offset = row * pixelsPerRow * this.bandCount + col * this.bandCount;\n      return data_1.slice(offset, offset + this.bandCount);\n    }\n\n    if (!pixelContext) {\n      createPixelContext();\n    }\n\n    pixelContext.clearRect(0, 0, 1, 1);\n    var data;\n    var image = this.tile.getImage();\n\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      return null;\n    }\n\n    return data;\n  };\n\n  return TileTexture;\n}(EventTarget);\n\nexport default TileTexture;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,OAAOA,QAAP,MAAqB,gBAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,gBAAP,MAA6B,aAA7B;AACA,SAAQC,YAAR,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAAQC,wBAAR,QAAuC,8BAAvC;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,SAAQC,qBAAR,QAAoC,WAApC;AACA,SAAQC,MAAR,QAAqB,YAArB;AAEA;;;;;;AAKA,SAASC,gBAAT,CAA0BC,EAA1B,EAA8BC,OAA9B,EAAuCC,WAAvC,EAAkD;AAChD,MAAMC,cAAc,GAAGD,WAAW,GAAGF,EAAE,CAACI,MAAN,GAAeJ,EAAE,CAACK,OAApD;AACAL,IAAE,CAACM,WAAH,CAAeN,EAAE,CAACO,UAAlB,EAA8BN,OAA9B;AACAD,IAAE,CAACQ,aAAH,CAAiBR,EAAE,CAACO,UAApB,EAAgCP,EAAE,CAACS,cAAnC,EAAmDT,EAAE,CAACU,aAAtD;AACAV,IAAE,CAACQ,aAAH,CAAiBR,EAAE,CAACO,UAApB,EAAgCP,EAAE,CAACW,cAAnC,EAAmDX,EAAE,CAACU,aAAtD;AACAV,IAAE,CAACQ,aAAH,CAAiBR,EAAE,CAACO,UAApB,EAAgCP,EAAE,CAACY,kBAAnC,EAAuDT,cAAvD;AACAH,IAAE,CAACQ,aAAH,CAAiBR,EAAE,CAACO,UAApB,EAAgCP,EAAE,CAACa,kBAAnC,EAAuDV,cAAvD;AACD;AAED;;;;;;;;AAMA,SAASW,kBAAT,CAA4Bd,EAA5B,EAAgCC,OAAhC,EAAyCc,KAAzC,EAAgDb,WAAhD,EAA2D;AACzDH,kBAAgB,CAACC,EAAD,EAAKC,OAAL,EAAcC,WAAd,CAAhB;AAEAF,IAAE,CAACgB,UAAH,CAAchB,EAAE,CAACO,UAAjB,EAA6B,CAA7B,EAAgCP,EAAE,CAACiB,IAAnC,EAAyCjB,EAAE,CAACiB,IAA5C,EAAkDjB,EAAE,CAACkB,aAArD,EAAoEH,KAApE;AACD;AAED;;;;;;;;;;AAQA,SAASI,iBAAT,CACEC,MADF,EAEEnB,OAFF,EAGEoB,IAHF,EAIEC,IAJF,EAKEC,SALF,EAMErB,WANF,EAMa;AAEX,MAAMF,EAAE,GAAGoB,MAAM,CAACI,KAAP,EAAX;AACAzB,kBAAgB,CAACC,EAAD,EAAKC,OAAL,EAAcC,WAAd,CAAhB;AAEA,MAAMuB,WAAW,GAAGJ,IAAI,CAACK,UAAL,GAAkBJ,IAAI,CAAC,CAAD,CAA1C;AACA,MAAIK,eAAe,GAAG,CAAtB;;AACA,MAAIF,WAAW,GAAG,CAAd,KAAoB,CAAxB,EAA2B;AACzBE,mBAAe,GAAG,CAAlB;AACD,GAFD,MAEO,IAAIF,WAAW,GAAG,CAAd,KAAoB,CAAxB,EAA2B;AAChCE,mBAAe,GAAG,CAAlB;AACD,GAFM,MAEA,IAAIF,WAAW,GAAG,CAAd,KAAoB,CAAxB,EAA2B;AAChCE,mBAAe,GAAG,CAAlB;AACD;;AAED,MAAIC,MAAJ;;AACA,UAAQL,SAAR;AACE,SAAK,CAAL;AAAQ;AACNK,cAAM,GAAG5B,EAAE,CAAC6B,SAAZ;AACA;AACD;;AACD,SAAK,CAAL;AAAQ;AACND,cAAM,GAAG5B,EAAE,CAAC8B,eAAZ;AACA;AACD;;AACD,SAAK,CAAL;AAAQ;AACNF,cAAM,GAAG5B,EAAE,CAAC+B,GAAZ;AACA;AACD;;AACD,SAAK,CAAL;AAAQ;AACNH,cAAM,GAAG5B,EAAE,CAACiB,IAAZ;AACA;AACD;;AACD;AAAS;AACP,cAAM,IAAIe,KAAJ,CAAU,uCAAgCT,SAAhC,CAAV,CAAN;AACD;AAnBH;;AAsBA,MAAIU,WAAJ;;AACA,MAAIZ,IAAI,YAAYa,YAApB,EAAkC;AAChCD,eAAW,GAAGjC,EAAE,CAACmC,KAAjB;AACAf,UAAM,CAACgB,YAAP,CAAoB,mBAApB;AACAhB,UAAM,CAACgB,YAAP,CAAoB,0BAApB;AACD,GAJD,MAIO;AACLH,eAAW,GAAGjC,EAAE,CAACkB,aAAjB;AACD;;AAED,MAAMmB,kBAAkB,GAAGrC,EAAE,CAACsC,YAAH,CAAgBtC,EAAE,CAACuC,gBAAnB,CAA3B;AACAvC,IAAE,CAACwC,WAAH,CAAexC,EAAE,CAACuC,gBAAlB,EAAoCZ,eAApC;AACA3B,IAAE,CAACgB,UAAH,CACEhB,EAAE,CAACO,UADL,EAEE,CAFF,EAGEqB,MAHF,EAIEN,IAAI,CAAC,CAAD,CAJN,EAKEA,IAAI,CAAC,CAAD,CALN,EAME,CANF,EAOEM,MAPF,EAQEK,WARF,EASEZ,IATF;AAWArB,IAAE,CAACwC,WAAH,CAAexC,EAAE,CAACuC,gBAAlB,EAAoCF,kBAApC;AACD;AAED;;;;;AAGA,IAAII,YAAY,GAAG,IAAnB;;AAEA,SAASC,kBAAT,GAA2B;AACzB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,QAAM,CAACG,KAAP,GAAe,CAAf;AACAH,QAAM,CAACI,MAAP,GAAgB,CAAhB;AACAN,cAAY,GAAGE,MAAM,CAACK,UAAP,CAAkB,IAAlB,CAAf;AACD;AAED;;;;AAIA;;;;;;;;;;AASA;AAAA;AAAA;AAA0BC;AACxB;;;;;AAGA,uBAAYC,OAAZ,EAAmB;AAAnB,gBACEC,qBAAO,IADT;AAGE;;;;;AAGAC,SAAI,CAACC,IAAL;AAEA;;;;AAGAD,SAAI,CAACE,QAAL,GAAgB,EAAhB;AACAF,SAAI,CAACG,iBAAL,GAAyBH,KAAI,CAACG,iBAAL,CAAuBC,IAAvB,CAA4BJ,KAA5B,CAAzB;AAEA;;;;AAGAA,SAAI,CAAC9B,IAAL,GAAYxB,MAAM,CAACoD,OAAO,CAACO,IAAR,CAAaC,WAAb,CAAyBR,OAAO,CAACG,IAAR,CAAaM,SAAb,CAAuB,CAAvB,CAAzB,CAAD,CAAlB;AAEA;;;;;AAIAP,SAAI,CAACQ,eAAL,GAAuBV,OAAO,CAACW,cAAR,IAA0B,CAAjD;AAEA;;;;;AAIAT,SAAI,CAACU,OAAL,GAAeZ,OAAO,CAACa,MAAR,IAAkB,CAAjC;AAEA;;;;AAGAX,SAAI,CAAC7B,SAAL,GAAiByC,GAAjB;AAEA;;;;;AAIAZ,SAAI,CAACa,OAAL,GAAef,OAAO,CAAC9B,MAAvB;AAEA,QAAM8C,MAAM,GAAG,IAAI1E,gBAAJ,CAAqBC,YAArB,EAAmCC,WAAnC,CAAf;AACAwE,UAAM,CAACC,SAAP,CAAiB,CACf,CADe,EAEf,CAFe,EAGf,CAHe,EAIf,CAJe,EAKf,CALe,EAMf,CANe,EAOf,CAPe,EAQf,CARe,CAAjB;;AAUAf,SAAI,CAACa,OAAL,CAAaG,eAAb,CAA6BF,MAA7B;AAEA;;;;;AAGAd,SAAI,CAACc,MAAL,GAAcA,MAAd;;AAEAd,SAAI,CAACiB,OAAL,CAAanB,OAAO,CAACG,IAArB;;;AACD;AAED;;;;;AAGAiB,4CAAQjB,IAAR,EAAY;AACV,QAAIA,IAAI,KAAK,KAAKA,IAAlB,EAAwB;AACtB,UAAI,KAAKA,IAAT,EAAe;AACb,aAAKA,IAAL,CAAUkB,mBAAV,CAA8BnF,SAAS,CAACoF,MAAxC,EAAgD,KAAKjB,iBAArD;AACD;;AACD,WAAKF,IAAL,GAAYA,IAAZ;AACA,WAAKC,QAAL,CAAcmB,MAAd,GAAuB,CAAvB;AACA,WAAKC,MAAL,GAAcrB,IAAI,CAACsB,QAAL,OAAoBpF,SAAS,CAACqF,MAA5C;;AACA,UAAI,KAAKF,MAAT,EAAiB;AACf,aAAKG,WAAL;AACD,OAFD,MAEO;AACL,YAAIxB,IAAI,YAAYhE,SAApB,EAA+B;AAC7B,cAAM0B,KAAK,GAAGsC,IAAI,CAACyB,QAAL,EAAd;;AACA,cAAI/D,KAAK,YAAYgE,KAAjB,IAA0B,CAAChE,KAAK,CAACiE,WAArC,EAAkD;AAChDjE,iBAAK,CAACiE,WAAN,GAAoB,WAApB;AACD;AACF;;AACD3B,YAAI,CAAC4B,gBAAL,CAAsB7F,SAAS,CAACoF,MAAhC,EAAwC,KAAKjB,iBAA7C;AACD;AACF;AACF,GApBD;;AAsBAe;AACE,QAAMlD,MAAM,GAAG,KAAK6C,OAApB;AACA,QAAMjE,EAAE,GAAGoB,MAAM,CAACI,KAAP,EAAX;AACA,QAAM6B,IAAI,GAAG,KAAKA,IAAlB;;AAEA,QAAIA,IAAI,YAAYhE,SAAhB,IAA6BgE,IAAI,YAAY/D,UAAjD,EAA6D;AAC3D,UAAIyB,KAAK,GAAGsC,IAAI,CAACyB,QAAL,EAAZ;;AACA,UAAI,KAAKhB,OAAL,KAAiB,CAArB,EAAwB;AACtB,YAAMC,MAAM,GAAG,KAAKH,eAAL,GAAuB,KAAKE,OAA3C;AACA,YAAMhB,KAAK,GAAGoC,IAAI,CAACC,KAAL,CAAWpE,KAAK,CAAC+B,KAAN,GAAc,IAAIiB,MAA7B,CAAd;AACA,YAAMhB,MAAM,GAAGmC,IAAI,CAACC,KAAL,CAAWpE,KAAK,CAACgC,MAAN,GAAe,IAAIgB,MAA9B,CAAf;AACA,YAAMqB,OAAO,GAAGvF,qBAAqB,CAACiD,KAAD,EAAQC,MAAR,CAArC;;AACA,YAAI,CAACM,IAAI,CAACnD,WAAV,EAAuB;AACrBN,gBAAM,CAACwF,OAAD,EAAUzF,wBAAV,CAAN;AACD;;AACDyF,eAAO,CAACC,SAAR,CACEtE,KADF,EAEEgD,MAFF,EAGEA,MAHF,EAIEjB,KAJF,EAKEC,MALF,EAME,CANF,EAOE,CAPF,EAQED,KARF,EASEC,MATF;AAWAhC,aAAK,GAAGqE,OAAO,CAACzC,MAAhB;AACD;;AACD,UAAM1C,OAAO,GAAGD,EAAE,CAACsF,aAAH,EAAhB;AACA,WAAKhC,QAAL,CAAciC,IAAd,CAAmBtF,OAAnB;AACA,WAAKsB,SAAL,GAAiB,CAAjB;AACAT,wBAAkB,CAACd,EAAD,EAAKC,OAAL,EAAcc,KAAd,EAAqBsC,IAAI,CAACnD,WAA1B,CAAlB;AACA;AACD;;AAED,QAAMsF,SAAS,GAAG,CAChB,KAAKlE,IAAL,CAAU,CAAV,IAAe,KAAKsC,eADJ,EAEhB,KAAKtC,IAAL,CAAU,CAAV,IAAe,KAAKsC,eAFJ,CAAlB;AAIA,QAAMvC,IAAI,GAAGgC,IAAI,CAACoC,OAAL,EAAb;AACA,QAAMC,OAAO,GAAGrE,IAAI,YAAYa,YAAhC;AACA,QAAMyD,UAAU,GAAGH,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAA3C;AACA,QAAMI,QAAQ,GAAGF,OAAO,GAAGxD,YAAH,GAAkB2D,UAA1C;AACA,QAAMC,eAAe,GAAGF,QAAQ,CAACG,iBAAjC;AACA,QAAMtE,WAAW,GAAGJ,IAAI,CAACK,UAAL,GAAkB8D,SAAS,CAAC,CAAD,CAA/C;AAEA,SAAKjE,SAAL,GAAiB2D,IAAI,CAACc,KAAL,CAAWvE,WAAW,GAAGqE,eAAd,GAAgCN,SAAS,CAAC,CAAD,CAApD,CAAjB;AACA,QAAMS,YAAY,GAAGf,IAAI,CAACgB,IAAL,CAAU,KAAK3E,SAAL,GAAiB,CAA3B,CAArB;;AAEA,QAAI0E,YAAY,KAAK,CAArB,EAAwB;AACtB,UAAMhG,OAAO,GAAGD,EAAE,CAACsF,aAAH,EAAhB;AACA,WAAKhC,QAAL,CAAciC,IAAd,CAAmBtF,OAAnB;AACAkB,uBAAiB,CACfC,MADe,EAEfnB,OAFe,EAGfoB,IAHe,EAIfmE,SAJe,EAKf,KAAKjE,SALU,EAMf8B,IAAI,CAACnD,WANU,CAAjB;AAQA;AACD;;AAED,QAAMiG,iBAAiB,GAAG,IAAIC,KAAJ,CAAUH,YAAV,CAA1B;;AACA,SAAK,IAAII,YAAY,GAAG,CAAxB,EAA2BA,YAAY,GAAGJ,YAA1C,EAAwD,EAAEI,YAA1D,EAAwE;AACtE,UAAMpG,OAAO,GAAGD,EAAE,CAACsF,aAAH,EAAhB;AACA,WAAKhC,QAAL,CAAciC,IAAd,CAAmBtF,OAAnB;AAEA,UAAMsB,SAAS,GACb8E,YAAY,GAAGJ,YAAY,GAAG,CAA9B,GAAkC,CAAlC,GAAsC,KAAK1E,SAAL,GAAiB,CADzD;AAEA4E,uBAAiB,CAACE,YAAD,CAAjB,GAAkC,IAAIT,QAAJ,CAAaD,UAAU,GAAGpE,SAA1B,CAAlC;AACD;;AAED,QAAI+E,SAAS,GAAG,CAAhB;AACA,QAAIC,SAAS,GAAG,CAAhB;AACA,QAAMC,QAAQ,GAAGhB,SAAS,CAAC,CAAD,CAAT,GAAe,KAAKjE,SAArC;;AACA,SAAK,IAAIkF,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAGjB,SAAS,CAAC,CAAD,CAA3C,EAAgD,EAAEiB,QAAlD,EAA4D;AAC1D,WAAK,IAAIC,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAGF,QAAlC,EAA4C,EAAEE,QAA9C,EAAwD;AACtD,YAAMC,SAAS,GAAGtF,IAAI,CAACkF,SAAS,GAAGG,QAAb,CAAtB;AAEA,YAAME,UAAU,GAAG1B,IAAI,CAACc,KAAL,CAAWM,SAAS,GAAG,KAAK/E,SAA5B,CAAnB;AACA,YAAMsF,SAAS,GAAGH,QAAQ,GAAG,KAAKnF,SAAlC;AACA,YAAM8E,YAAY,GAAGnB,IAAI,CAACc,KAAL,CAAWa,SAAS,GAAG,CAAvB,CAArB;AACA,YAAMC,WAAW,GAAGX,iBAAiB,CAACE,YAAD,CAArC;AACA,YAAM9E,SAAS,GAAGuF,WAAW,CAACrC,MAAZ,GAAqBkB,UAAvC;AACA,YAAMoB,gBAAgB,GAAGF,SAAS,GAAG,CAArC;AACAC,mBAAW,CAACF,UAAU,GAAGrF,SAAb,GAAyBwF,gBAA1B,CAAX,GAAyDJ,SAAzD;AAEA,UAAEL,SAAF;AACD;;AACDC,eAAS,IAAI9E,WAAW,GAAGqE,eAA3B;AACD;;AAED,SAAK,IAAIO,YAAY,GAAG,CAAxB,EAA2BA,YAAY,GAAGJ,YAA1C,EAAwD,EAAEI,YAA1D,EAAwE;AACtE,UAAMpG,OAAO,GAAG,KAAKqD,QAAL,CAAc+C,YAAd,CAAhB;AACA,UAAMS,WAAW,GAAGX,iBAAiB,CAACE,YAAD,CAArC;AACA,UAAM9E,SAAS,GAAGuF,WAAW,CAACrC,MAAZ,GAAqBkB,UAAvC;AACAxE,uBAAiB,CACfC,MADe,EAEfnB,OAFe,EAGf6G,WAHe,EAIftB,SAJe,EAKfjE,SALe,EAMf8B,IAAI,CAACnD,WANU,CAAjB;AAQD;AACF,GA1GD;;AA4GAoE;AACE,QAAI,KAAKjB,IAAL,CAAUsB,QAAV,OAAyBpF,SAAS,CAACqF,MAAvC,EAA+C;AAC7C,WAAKF,MAAL,GAAc,IAAd;AACA,WAAKG,WAAL;AACA,WAAKmC,aAAL,CAAmB5H,SAAS,CAACoF,MAA7B;AACD;AACF,GAND;;AAQAF;AACE,QAAMtE,EAAE,GAAG,KAAKiE,OAAL,CAAazC,KAAb,EAAX;AACA,SAAKyC,OAAL,CAAagD,YAAb,CAA0B,KAAK/C,MAA/B;;AACA,SAAK,IAAIgD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK5D,QAAL,CAAcmB,MAAlC,EAA0C,EAAEyC,CAA5C,EAA+C;AAC7ClH,QAAE,CAACmH,aAAH,CAAiB,KAAK7D,QAAL,CAAc4D,CAAd,CAAjB;AACD;;AACD,SAAK7D,IAAL,CAAUkB,mBAAV,CAA8BnF,SAAS,CAACoF,MAAxC,EAAgD,KAAKjB,iBAArD;AACD,GAPD;AASA;;;;;;;;AAMAe,iDAAa8C,GAAb,EAAkBC,GAAlB,EAAqB;AACnB,QAAI,CAAC,KAAK3C,MAAV,EAAkB;AAChB,aAAO,IAAP;AACD;;AAED0C,OAAG,GAAGlC,IAAI,CAACc,KAAL,CAAW,KAAKpC,eAAL,GAAuBwD,GAAlC,CAAN;AACAC,OAAG,GAAGnC,IAAI,CAACc,KAAL,CAAW,KAAKpC,eAAL,GAAuByD,GAAlC,CAAN;;AAEA,QAAI,KAAKhE,IAAL,YAAqBnE,QAAzB,EAAmC;AACjC,UAAMoI,MAAI,GAAG,KAAKjE,IAAL,CAAUoC,OAAV,EAAb;AACA,UAAM8B,YAAY,GAAGrC,IAAI,CAACc,KAAL,CAAW,KAAKpC,eAAL,GAAuB,KAAKtC,IAAL,CAAU,CAAV,CAAlC,CAArB;;AACA,UAAIgG,MAAI,YAAYE,QAApB,EAA8B;AAC5B,YAAMC,aAAa,GAAGH,MAAI,CAAC5F,UAAL,IAAmB,KAAKJ,IAAL,CAAU,CAAV,IAAe,KAAKA,IAAL,CAAU,CAAV,CAAlC,CAAtB;AACA,YAAMoG,QAAM,GAAGL,GAAG,GAAGE,YAAN,GAAqBE,aAArB,GAAqCL,GAAG,GAAGK,aAA1D;AACA,YAAME,MAAM,GAAGL,MAAI,CAACK,MAAL,CAAYC,KAAZ,CAAkBF,QAAlB,EAA0BA,QAAM,GAAGD,aAAnC,CAAf;AACA,eAAO,IAAID,QAAJ,CAAaG,MAAb,CAAP;AACD;;AAED,UAAME,MAAM,GAAGR,GAAG,GAAGE,YAAN,GAAqB,KAAKhG,SAA1B,GAAsC6F,GAAG,GAAG,KAAK7F,SAAhE;AACA,aAAO+F,MAAI,CAACM,KAAL,CAAWC,MAAX,EAAmBA,MAAM,GAAG,KAAKtG,SAAjC,CAAP;AACD;;AAED,QAAI,CAACkB,YAAL,EAAmB;AACjBC,wBAAkB;AACnB;;AACDD,gBAAY,CAACqF,SAAb,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC;AAEA,QAAIzG,IAAJ;AACA,QAAMN,KAAK,GAAG,KAAKsC,IAAL,CAAUyB,QAAV,EAAd;;AACA,QAAI;AACFrC,kBAAY,CAAC4C,SAAb,CAAuBtE,KAAvB,EAA8BqG,GAA9B,EAAmCC,GAAnC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD;AACAhG,UAAI,GAAGoB,YAAY,CAACsF,YAAb,CAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC1G,IAA7C;AACD,KAHD,CAGE,OAAO2G,GAAP,EAAY;AACZ,aAAO,IAAP;AACD;;AACD,WAAO3G,IAAP;AACD,GApCD;;AAqCF;AApQA,EAA0BlC,WAA1B;;AAsQA,eAAemF,WAAf","names":["DataTile","EventTarget","EventType","ImageTile","ReprojTile","TileState","WebGLArrayBuffer","ARRAY_BUFFER","STATIC_DRAW","IMAGE_SMOOTHING_DISABLED","assign","createCanvasContext2D","toSize","bindAndConfigure","gl","texture","interpolate","resampleFilter","LINEAR","NEAREST","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","uploadImageTexture","image","texImage2D","RGBA","UNSIGNED_BYTE","uploadDataTexture","helper","data","size","bandCount","getGL","bytesPerRow","byteLength","unpackAlignment","format","LUMINANCE","LUMINANCE_ALPHA","RGB","Error","textureType","Float32Array","FLOAT","getExtension","oldUnpackAlignment","getParameter","UNPACK_ALIGNMENT","pixelStorei","pixelContext","createPixelContext","canvas","document","createElement","width","height","getContext","__extends","options","_super","_this","tile","textures","handleTileChange_","bind","grid","getTileSize","tileCoord","tilePixelRatio_","tilePixelRatio","gutter_","gutter","NaN","helper_","coords","fromArray","flushBufferData","setTile","TileTexture","removeEventListener","CHANGE","length","loaded","getState","LOADED","uploadTile_","getImage","Image","crossOrigin","addEventListener","Math","round","context","drawImage","createTexture","push","pixelSize","getData","isFloat","pixelCount","DataType","Uint8Array","bytesPerElement","BYTES_PER_ELEMENT","floor","textureCount","ceil","textureDataArrays","Array","textureIndex","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataValue","pixelIndex","bandIndex","textureData","textureBandIndex","dispatchEvent","deleteBuffer","i","deleteTexture","col","row","data_1","pixelsPerRow","DataView","bytesPerPixel","offset_1","buffer","slice","offset","clearRect","getImageData","err"],"sourceRoot":"","sources":["../src/webgl/TileTexture.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}