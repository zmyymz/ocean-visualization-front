{"ast":null,"code":"/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\n\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\n\nvar PriorityQueue =\n/** @class */\nfunction () {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  function PriorityQueue(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n\n    this.keyFunction_ = keyFunction;\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n\n    this.elements_ = [];\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n\n    this.priorities_ = [];\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n\n    this.queuedElements_ = {};\n  }\n  /**\n   * FIXME empty description for jsdoc\n   */\n\n\n  PriorityQueue.prototype.clear = function () {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  };\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n\n\n  PriorityQueue.prototype.dequeue = function () {\n    var elements = this.elements_;\n    var priorities = this.priorities_;\n    var element = elements[0];\n\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n\n    var elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  };\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n\n\n  PriorityQueue.prototype.enqueue = function (element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n\n    var priority = this.priorityFunction_(element);\n\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * @return {number} Count.\n   */\n\n\n  PriorityQueue.prototype.getCount = function () {\n    return this.elements_.length;\n  };\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n\n\n  PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n    return index * 2 + 1;\n  };\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n\n\n  PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n    return index * 2 + 2;\n  };\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n\n\n  PriorityQueue.prototype.getParentIndex_ = function (index) {\n    return index - 1 >> 1;\n  };\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n\n\n  PriorityQueue.prototype.heapify_ = function () {\n    var i;\n\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  };\n  /**\n   * @return {boolean} Is empty.\n   */\n\n\n  PriorityQueue.prototype.isEmpty = function () {\n    return this.elements_.length === 0;\n  };\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n\n\n  PriorityQueue.prototype.isKeyQueued = function (key) {\n    return key in this.queuedElements_;\n  };\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n\n\n  PriorityQueue.prototype.isQueued = function (element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  };\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n\n\n  PriorityQueue.prototype.siftUp_ = function (index) {\n    var elements = this.elements_;\n    var priorities = this.priorities_;\n    var count = elements.length;\n    var element = elements[index];\n    var priority = priorities[index];\n    var startIndex = index;\n\n    while (index < count >> 1) {\n      var lIndex = this.getLeftChildIndex_(index);\n      var rIndex = this.getRightChildIndex_(index);\n      var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex] ? rIndex : lIndex;\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  };\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n\n\n  PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n    var elements = this.elements_;\n    var priorities = this.priorities_;\n    var element = elements[index];\n    var priority = priorities[index];\n\n    while (index > startIndex) {\n      var parentIndex = this.getParentIndex_(index);\n\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n  };\n  /**\n   * FIXME empty description for jsdoc\n   */\n\n\n  PriorityQueue.prototype.reprioritize = function () {\n    var priorityFunction = this.priorityFunction_;\n    var elements = this.elements_;\n    var priorities = this.priorities_;\n    var index = 0;\n    var n = elements.length;\n    var element, i, priority;\n\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  };\n\n  return PriorityQueue;\n}();\n\nexport default PriorityQueue;","map":{"version":3,"mappings":"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","names":["assert","clear","DROP","Infinity","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","PriorityQueue","length","elements","priorities","element","pop","siftUp_","elementKey","priority","push","siftDown_","index","i","key","isKeyQueued","count","startIndex","lIndex","getLeftChildIndex_","rIndex","getRightChildIndex_","smallerChildIndex","parentIndex","getParentIndex_","n","heapify_"],"sourceRoot":"","sources":["../src/structs/PriorityQueue.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}