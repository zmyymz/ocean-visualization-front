{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nexport default class DataSlice {\n  constructor(arrayBuffer, sliceOffset, littleEndian, bigTiff) {\n    this._dataView = new DataView(arrayBuffer);\n    this._sliceOffset = sliceOffset;\n    this._littleEndian = littleEndian;\n    this._bigTiff = bigTiff;\n  }\n\n  get sliceOffset() {\n    return this._sliceOffset;\n  }\n\n  get sliceTop() {\n    return this._sliceOffset + this.buffer.byteLength;\n  }\n\n  get littleEndian() {\n    return this._littleEndian;\n  }\n\n  get bigTiff() {\n    return this._bigTiff;\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  covers(offset, length) {\n    return this.sliceOffset <= offset && this.sliceTop >= offset + length;\n  }\n\n  readUint8(offset) {\n    return this._dataView.getUint8(offset - this._sliceOffset, this._littleEndian);\n  }\n\n  readInt8(offset) {\n    return this._dataView.getInt8(offset - this._sliceOffset, this._littleEndian);\n  }\n\n  readUint16(offset) {\n    return this._dataView.getUint16(offset - this._sliceOffset, this._littleEndian);\n  }\n\n  readInt16(offset) {\n    return this._dataView.getInt16(offset - this._sliceOffset, this._littleEndian);\n  }\n\n  readUint32(offset) {\n    return this._dataView.getUint32(offset - this._sliceOffset, this._littleEndian);\n  }\n\n  readInt32(offset) {\n    return this._dataView.getInt32(offset - this._sliceOffset, this._littleEndian);\n  }\n\n  readFloat32(offset) {\n    return this._dataView.getFloat32(offset - this._sliceOffset, this._littleEndian);\n  }\n\n  readFloat64(offset) {\n    return this._dataView.getFloat64(offset - this._sliceOffset, this._littleEndian);\n  }\n\n  readUint64(offset) {\n    const left = this.readUint32(offset);\n    const right = this.readUint32(offset + 4);\n    let combined;\n\n    if (this._littleEndian) {\n      combined = left + 2 ** 32 * right;\n\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(`${combined} exceeds MAX_SAFE_INTEGER. ` + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues');\n      }\n\n      return combined;\n    }\n\n    combined = 2 ** 32 * left + right;\n\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(`${combined} exceeds MAX_SAFE_INTEGER. ` + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues');\n    }\n\n    return combined;\n  } // adapted from https://stackoverflow.com/a/55338384/8060591\n\n\n  readInt64(offset) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (this._littleEndian ? 7 : 0)) & 0x80) > 0;\n    let carrying = true;\n\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(offset + (this._littleEndian ? i : 7 - i));\n\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n\n      value += byte * 256 ** i;\n    }\n\n    if (isNegative) {\n      value = -value;\n    }\n\n    return value;\n  }\n\n  readOffset(offset) {\n    if (this._bigTiff) {\n      return this.readUint64(offset);\n    }\n\n    return this.readUint32(offset);\n  }\n\n}","map":{"version":3,"sources":["D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/geotiff/dist-module/dataslice.js"],"names":["DataSlice","constructor","arrayBuffer","sliceOffset","littleEndian","bigTiff","_dataView","DataView","_sliceOffset","_littleEndian","_bigTiff","sliceTop","buffer","byteLength","covers","offset","length","readUint8","getUint8","readInt8","getInt8","readUint16","getUint16","readInt16","getInt16","readUint32","getUint32","readInt32","getInt32","readFloat32","getFloat32","readFloat64","getFloat64","readUint64","left","right","combined","Number","isSafeInteger","Error","readInt64","value","isNegative","carrying","i","byte","readOffset"],"mappings":"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","sourcesContent":["export default class DataSlice {\n  constructor(arrayBuffer, sliceOffset, littleEndian, bigTiff) {\n    this._dataView = new DataView(arrayBuffer);\n    this._sliceOffset = sliceOffset;\n    this._littleEndian = littleEndian;\n    this._bigTiff = bigTiff;\n  }\n\n  get sliceOffset() {\n    return this._sliceOffset;\n  }\n\n  get sliceTop() {\n    return this._sliceOffset + this.buffer.byteLength;\n  }\n\n  get littleEndian() {\n    return this._littleEndian;\n  }\n\n  get bigTiff() {\n    return this._bigTiff;\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  covers(offset, length) {\n    return this.sliceOffset <= offset && this.sliceTop >= offset + length;\n  }\n\n  readUint8(offset) {\n    return this._dataView.getUint8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt8(offset) {\n    return this._dataView.getInt8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint16(offset) {\n    return this._dataView.getUint16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt16(offset) {\n    return this._dataView.getInt16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint32(offset) {\n    return this._dataView.getUint32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt32(offset) {\n    return this._dataView.getInt32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat32(offset) {\n    return this._dataView.getFloat32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat64(offset) {\n    return this._dataView.getFloat64(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint64(offset) {\n    const left = this.readUint32(offset);\n    const right = this.readUint32(offset + 4);\n    let combined;\n    if (this._littleEndian) {\n      combined = left + ((2 ** 32) * right);\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\n          `${combined} exceeds MAX_SAFE_INTEGER. `\n          + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n        );\n      }\n      return combined;\n    }\n    combined = ((2 ** 32) * left) + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(\n        `${combined} exceeds MAX_SAFE_INTEGER. `\n        + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n      );\n    }\n\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  readInt64(offset) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (this._littleEndian ? 7 : 0)) & 0x80)\n      > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(\n        offset + (this._littleEndian ? i : 7 - i),\n      );\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * (256 ** i);\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n\n  readOffset(offset) {\n    if (this._bigTiff) {\n      return this.readUint64(offset);\n    }\n    return this.readUint32(offset);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}