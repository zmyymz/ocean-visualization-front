{"ast":null,"code":"/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\n\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n  var o, t;\n  var n = (end - offset) / stride;\n\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length_1 = 0;\n    var cumulativeLengths = [0];\n\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length_1);\n      x1 = x2;\n      y1 = y2;\n    }\n\n    var target = fraction * length_1;\n    var index = binarySearch(cumulativeLengths, target);\n\n    if (index < 0) {\n      t = (target - cumulativeLengths[-index - 2]) / (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var dest = opt_dest ? opt_dest : new Array(dimension);\n\n  for (var i = 0; i < dimension; ++i) {\n    dest[i] = o === undefined ? NaN : t === undefined ? flatCoordinates[o + i] : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n\n  return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\n\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n\n  var coordinate;\n\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } // FIXME use O(1) search\n\n\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n\n  var lo = offset / stride;\n  var hi = end / stride;\n\n  while (lo < hi) {\n    var mid = lo + hi >> 1;\n\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n\n  var m0 = flatCoordinates[lo * stride - 1];\n\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n  }\n\n  coordinate.push(m);\n  return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\n\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n\n  var coordinate;\n\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n\n    if (offset == end) {\n      continue;\n    }\n\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n    }\n\n    offset = end;\n  }\n\n  return null;\n}","map":{"version":3,"mappings":"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","names":["binarySearch","lerp","interpolatePoint","flatCoordinates","offset","end","stride","fraction","opt_dest","opt_dimension","o","t","n","x1","y1","length_1","cumulativeLengths","i","x2","y2","Math","sqrt","push","target","index","dimension","dest","Array","undefined","NaN","lineStringCoordinateAtM","m","extrapolate","coordinate","slice","lo","hi","mid","m0","m1","lineStringsCoordinateAtM","ends","interpolate","length","ii"],"sourceRoot":"","sources":["../../src/geom/flat/interpolate.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}