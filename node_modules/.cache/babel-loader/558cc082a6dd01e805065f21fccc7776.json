{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n\n/**\n * @module ol/source/CartoDB\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport SourceState from './State.js';\nimport XYZ from './XYZ.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * https://carto.com/developers/maps-api/guides/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See https://carto.com/developers/maps-api/guides/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See https://carto.com/developers/maps-api/guides/named-maps/\n * for more detail.\n * @property {string} [account] Username as used to access public Carto dashboard at https://{username}.carto.com/.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\n\nvar CartoDB =\n/** @class */\nfunction (_super) {\n  __extends(CartoDB, _super);\n  /**\n   * @param {Options} options CartoDB options.\n   */\n\n\n  function CartoDB(options) {\n    var _this = _super.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      transition: options.transition,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection\n    }) || this;\n    /**\n     * @type {string}\n     * @private\n     */\n\n\n    _this.account_ = options.account;\n    /**\n     * @type {string}\n     * @private\n     */\n\n    _this.mapId_ = options.map || '';\n    /**\n     * @type {!Object}\n     * @private\n     */\n\n    _this.config_ = options.config || {};\n    /**\n     * @type {!Object<string, CartoDBLayerInfo>}\n     * @private\n     */\n\n    _this.templateCache_ = {};\n\n    _this.initializeMap_();\n\n    return _this;\n  }\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n\n\n  CartoDB.prototype.getConfig = function () {\n    return this.config_;\n  };\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n\n\n  CartoDB.prototype.updateConfig = function (config) {\n    assign(this.config_, config);\n    this.initializeMap_();\n  };\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n\n\n  CartoDB.prototype.setConfig = function (config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  };\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n\n\n  CartoDB.prototype.initializeMap_ = function () {\n    var paramHash = JSON.stringify(this.config_);\n\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n\n    var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    var client = new XMLHttpRequest();\n    client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  };\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n\n\n  CartoDB.prototype.handleInitResponse_ = function (paramHash, event) {\n    var client =\n    /** @type {XMLHttpRequest} */\n    event.target; // status will be 0 for file:// urls\n\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response = void 0;\n\n      try {\n        response =\n        /** @type {CartoDBLayerInfo} */\n        JSON.parse(client.responseText);\n      } catch (err) {\n        this.setState(SourceState.ERROR);\n        return;\n      }\n\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState(SourceState.READY);\n    } else {\n      this.setState(SourceState.ERROR);\n    }\n  };\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n\n\n  CartoDB.prototype.handleInitError_ = function (event) {\n    this.setState(SourceState.ERROR);\n  };\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n\n\n  CartoDB.prototype.applyTemplate_ = function (data) {\n    var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ + '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  };\n\n  return CartoDB;\n}(XYZ);\n\nexport default CartoDB;","map":{"version":3,"mappings":"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","names":["SourceState","XYZ","assign","__extends","options","_super","attributions","cacheSize","crossOrigin","maxZoom","undefined","minZoom","projection","transition","wrapX","zDirection","_this","account_","account","mapId_","map","config_","config","templateCache_","initializeMap_","CartoDB","paramHash","JSON","stringify","applyTemplate_","mapUrl","client","XMLHttpRequest","addEventListener","handleInitResponse_","bind","handleInitError_","open","setRequestHeader","send","event","target","status","response","parse","responseText","err","setState","ERROR","READY","data","tilesUrl","cdn_url","https","layergroupid","setUrl"],"sourceRoot":"","sources":["../src/source/CartoDB.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}