{"ast":null,"code":"var _typeof = require(\"D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/@babel/runtime/helpers/typeof.js\").default;\n\nrequire(\"core-js/modules/es.regexp.constructor.js\");\n\nrequire(\"core-js/modules/es.regexp.dot-all.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.sticky.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nfunction getAttribute(tag, attributeName, options) {\n  var debug = options && options.debug || false;\n  if (debug) console.log(\"getting \" + attributeName + \" in \" + tag);\n  var xml = _typeof(tag) === \"object\" ? tag.outer : tag;\n  var pattern = \"\".concat(attributeName, \"\\\\=\\\"([^\\\"]*)\\\"\");\n  if (debug) console.log(\"pattern:\", pattern);\n  var re = new RegExp(pattern);\n  var match = re.exec(xml);\n  if (debug) console.log(\"match:\", match);\n  if (match) return match[1];\n}\n\nmodule.exports = getAttribute;","map":{"version":3,"sources":["D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/xml-utils/get-attribute.js"],"names":["getAttribute","tag","attributeName","options","debug","console","log","xml","outer","pattern","re","RegExp","match","exec","module","exports"],"mappings":";;;;;;;;;;;;AAAA,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,aAA3B,EAA0CC,OAA1C,EAAmD;AACjD,MAAMC,KAAK,GAAID,OAAO,IAAIA,OAAO,CAACC,KAApB,IAA8B,KAA5C;AACA,MAAIA,KAAJ,EAAWC,OAAO,CAACC,GAAR,CAAY,aAAaJ,aAAb,GAA6B,MAA7B,GAAsCD,GAAlD;AAEX,MAAMM,GAAG,GAAG,QAAON,GAAP,MAAe,QAAf,GAA0BA,GAAG,CAACO,KAA9B,GAAsCP,GAAlD;AAEA,MAAMQ,OAAO,aAAMP,aAAN,oBAAb;AACA,MAAIE,KAAJ,EAAWC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,OAAxB;AAEX,MAAMC,EAAE,GAAG,IAAIC,MAAJ,CAAWF,OAAX,CAAX;AACA,MAAMG,KAAK,GAAGF,EAAE,CAACG,IAAH,CAAQN,GAAR,CAAd;AACA,MAAIH,KAAJ,EAAWC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBM,KAAtB;AACX,MAAIA,KAAJ,EAAW,OAAOA,KAAK,CAAC,CAAD,CAAZ;AACZ;;AAEDE,MAAM,CAACC,OAAP,GAAiBf,YAAjB","sourcesContent":["function getAttribute(tag, attributeName, options) {\n  const debug = (options && options.debug) || false;\n  if (debug) console.log(\"getting \" + attributeName + \" in \" + tag);\n\n  const xml = typeof tag === \"object\" ? tag.outer : tag;\n\n  const pattern = `${attributeName}\\\\=\"\\([^\"]*\\)\"`;\n  if (debug) console.log(\"pattern:\", pattern);\n\n  const re = new RegExp(pattern);\n  const match = re.exec(xml);\n  if (debug) console.log(\"match:\", match);\n  if (match) return match[1];\n}\n\nmodule.exports = getAttribute;\n"]},"metadata":{},"sourceType":"script"}