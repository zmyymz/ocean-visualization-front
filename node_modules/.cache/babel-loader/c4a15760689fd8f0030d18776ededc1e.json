{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/Base\n */\n\n\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\n\nvar BaseLayer =\n/** @class */\nfunction (_super) {\n  __extends(BaseLayer, _super);\n  /**\n   * @param {Options} options Layer options.\n   */\n\n\n  function BaseLayer(options) {\n    var _this = _super.call(this) || this;\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n\n\n    _this.on;\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n\n    _this.un;\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n\n    _this.background_ = options.background;\n    /**\n     * @type {Object<string, *>}\n     */\n\n    var properties = assign({}, options);\n\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] = options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] = options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] = options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] = options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] = options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] = options.maxZoom !== undefined ? options.maxZoom : Infinity;\n    /**\n     * @type {string}\n     * @private\n     */\n\n    _this.className_ = properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    _this.setProperties(properties);\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n\n\n    _this.state_ = null;\n    return _this;\n  }\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n\n\n  BaseLayer.prototype.getBackground = function () {\n    return this.background_;\n  };\n  /**\n   * @return {string} CSS class name.\n   */\n\n\n  BaseLayer.prototype.getClassName = function () {\n    return this.className_;\n  };\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n\n\n  BaseLayer.prototype.getLayerState = function (opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ ||\n    /** @type {?} */\n    {\n      layer: this,\n      managed: opt_managed === undefined ? true : opt_managed\n    };\n    var zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n    return state;\n  };\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n\n\n  BaseLayer.prototype.getLayersArray = function (opt_array) {\n    return abstract();\n  };\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n\n\n  BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n    return abstract();\n  };\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getExtent = function () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */\n      this.get(LayerProperty.EXTENT)\n    );\n  };\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getMaxResolution = function () {\n    return (\n      /** @type {number} */\n      this.get(LayerProperty.MAX_RESOLUTION)\n    );\n  };\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getMinResolution = function () {\n    return (\n      /** @type {number} */\n      this.get(LayerProperty.MIN_RESOLUTION)\n    );\n  };\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getMinZoom = function () {\n    return (\n      /** @type {number} */\n      this.get(LayerProperty.MIN_ZOOM)\n    );\n  };\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getMaxZoom = function () {\n    return (\n      /** @type {number} */\n      this.get(LayerProperty.MAX_ZOOM)\n    );\n  };\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getOpacity = function () {\n    return (\n      /** @type {number} */\n      this.get(LayerProperty.OPACITY)\n    );\n  };\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n\n\n  BaseLayer.prototype.getSourceState = function () {\n    return abstract();\n  };\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getVisible = function () {\n    return (\n      /** @type {boolean} */\n      this.get(LayerProperty.VISIBLE)\n    );\n  };\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.getZIndex = function () {\n    return (\n      /** @type {number} */\n      this.get(LayerProperty.Z_INDEX)\n    );\n  };\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n\n\n  BaseLayer.prototype.setBackground = function (opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  };\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setExtent = function (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setMinResolution = function (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  };\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setMinZoom = function (minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  };\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setOpacity = function (opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setVisible = function (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n\n\n  BaseLayer.prototype.setZIndex = function (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n  /**\n   * Clean up.\n   */\n\n\n  BaseLayer.prototype.disposeInternal = function () {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n\n    _super.prototype.disposeInternal.call(this);\n  };\n\n  return BaseLayer;\n}(BaseObject);\n\nexport default BaseLayer;","map":{"version":3,"mappings":"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","names":["BaseObject","LayerProperty","abstract","assert","assign","clamp","__extends","options","_super","_this","on","once","un","background_","background","properties","OPACITY","opacity","undefined","VISIBLE","visible","Z_INDEX","zIndex","MAX_RESOLUTION","maxResolution","Infinity","MIN_RESOLUTION","minResolution","MIN_ZOOM","minZoom","MAX_ZOOM","maxZoom","className_","className","setProperties","state_","BaseLayer","opt_managed","state","layer","managed","getZIndex","Math","round","getOpacity","getVisible","extent","getExtent","getMaxResolution","max","getMinResolution","getMinZoom","getMaxZoom","opt_array","opt_states","get","EXTENT","opt_background","changed","set","zindex","disposeInternal","call"],"sourceRoot":"","sources":["../src/layer/Base.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}