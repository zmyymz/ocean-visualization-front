{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/control/ZoomToExtent\n */\n\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\n\nvar ZoomToExtent =\n/** @class */\nfunction (_super) {\n  __extends(ZoomToExtent, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function ZoomToExtent(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    }) || this;\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n\n    _this.extent = options.extent ? options.extent : null;\n    var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n    var label = options.label !== undefined ? options.label : 'E';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(typeof label === 'string' ? document.createTextNode(label) : label);\n    button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = _this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n    return _this;\n  }\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n\n\n  ZoomToExtent.prototype.handleClick_ = function (event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  };\n  /**\n   * @protected\n   */\n\n\n  ZoomToExtent.prototype.handleZoomToExtent = function () {\n    var map = this.getMap();\n    var view = map.getView();\n    var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  };\n\n  return ZoomToExtent;\n}(Control);\n\nexport default ZoomToExtent;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAAQC,aAAR,EAAuBC,kBAAvB,QAAgD,WAAhD;AACA,SAAQC,UAAU,IAAIC,iBAAtB,QAA8C,oBAA9C;AAEA;;;;;;;;;;;;AAYA;;;;;;;;AAOA;AAAA;AAAA;AAA2BC;AACzB;;;;;AAGA,wBAAYC,WAAZ,EAAuB;AAAvB;;AACE,QAAMC,OAAO,GAAGD,WAAW,GAAGA,WAAH,GAAiB,EAA5C;YAEAE,kBAAM;AACJC,aAAO,EAAEC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CADL;AAEJC,YAAM,EAAEL,OAAO,CAACK;AAFZ,KAAN,KAGE;AAEF;;;;;AAIAC,SAAI,CAACC,MAAL,GAAcP,OAAO,CAACO,MAAR,GAAiBP,OAAO,CAACO,MAAzB,GAAkC,IAAhD;AAEA,QAAMC,SAAS,GACbR,OAAO,CAACQ,SAAR,KAAsBC,SAAtB,GAAkCT,OAAO,CAACQ,SAA1C,GAAsD,gBADxD;AAGA,QAAME,KAAK,GAAGV,OAAO,CAACU,KAAR,KAAkBD,SAAlB,GAA8BT,OAAO,CAACU,KAAtC,GAA8C,GAA5D;AACA,QAAMC,QAAQ,GACZX,OAAO,CAACW,QAAR,KAAqBF,SAArB,GAAiCT,OAAO,CAACW,QAAzC,GAAoD,eADtD;AAEA,QAAMC,MAAM,GAAGT,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAQ,UAAM,CAACC,YAAP,CAAoB,MAApB,EAA4B,QAA5B;AACAD,UAAM,CAACE,KAAP,GAAeH,QAAf;AACAC,UAAM,CAACG,WAAP,CACE,OAAOL,KAAP,KAAiB,QAAjB,GAA4BP,QAAQ,CAACa,cAAT,CAAwBN,KAAxB,CAA5B,GAA6DA,KAD/D;AAIAE,UAAM,CAACK,gBAAP,CACExB,SAAS,CAACyB,KADZ,EAEEZ,KAAI,CAACa,YAAL,CAAkBC,IAAlB,CAAuBd,KAAvB,CAFF,EAGE,KAHF;AAMA,QAAMe,UAAU,GACdb,SAAS,GAAG,GAAZ,GAAkBb,kBAAlB,GAAuC,GAAvC,GAA6CD,aAD/C;AAEA,QAAMQ,OAAO,GAAGI,KAAI,CAACJ,OAArB;AACAA,WAAO,CAACM,SAAR,GAAoBa,UAApB;AACAnB,WAAO,CAACa,WAAR,CAAoBH,MAApB;;AACD;AAED;;;;;;AAIAU,kDAAaC,KAAb,EAAkB;AAChBA,SAAK,CAACC,cAAN;AACA,SAAKC,kBAAL;AACD,GAHD;AAKA;;;;;AAGAH;AACE,QAAMI,GAAG,GAAG,KAAKC,MAAL,EAAZ;AACA,QAAMC,IAAI,GAAGF,GAAG,CAACG,OAAJ,EAAb;AACA,QAAMtB,MAAM,GAAG,CAAC,KAAKA,MAAN,GACXqB,IAAI,CAACE,aAAL,GAAqBC,SAArB,EADW,GAEX,KAAKxB,MAFT;AAGAqB,QAAI,CAACI,WAAL,CAAiBnC,iBAAiB,CAACU,MAAD,CAAlC;AACD,GAPD;;AAQF;AAhEA,EAA2Bf,OAA3B;;AAkEA,eAAe8B,YAAf","names":["Control","EventType","CLASS_CONTROL","CLASS_UNSELECTABLE","fromExtent","polygonFromExtent","__extends","opt_options","options","_super","element","document","createElement","target","_this","extent","className","undefined","label","tipLabel","button","setAttribute","title","appendChild","createTextNode","addEventListener","CLICK","handleClick_","bind","cssClasses","ZoomToExtent","event","preventDefault","handleZoomToExtent","map","getMap","view","getView","getProjection","getExtent","fitInternal"],"sourceRoot":"","sources":["../src/control/ZoomToExtent.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}