{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n\n/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\n\nvar ORDER = [BuilderType.POLYGON, BuilderType.CIRCLE, BuilderType.LINE_STRING, BuilderType.IMAGE, BuilderType.TEXT, BuilderType.DEFAULT];\n\nvar ExecutorGroup =\n/** @class */\nfunction () {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.overlaps_ = overlaps;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.pixelRatio_ = pixelRatio;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.resolution_ = resolution;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.renderBuffer_ = opt_renderBuffer;\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n\n    this.executorsByZIndex_ = {};\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n\n    this.hitDetectionContext_ = null;\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    this.hitDetectionTransform_ = createTransform();\n    this.createExecutors_(allInstructions);\n  }\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n\n\n  ExecutorGroup.prototype.clip = function (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n\n\n  ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n    for (var zIndex in allInstructions) {\n      var executors = this.executorsByZIndex_[zIndex];\n\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n\n      var instructionByZindex = allInstructions[zIndex];\n\n      for (var builderType in instructionByZindex) {\n        var instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n      }\n    }\n  };\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n\n\n  ExecutorGroup.prototype.hasExecutors = function (executors) {\n    for (var zIndex in this.executorsByZIndex_) {\n      var candidates = this.executorsByZIndex_[zIndex];\n\n      for (var i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n\n\n  ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n    var newContext = !this.hitDetectionContext_;\n\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n    }\n\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n\n    var hitExtent;\n\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var indexes = getPixelIndexArray(hitTolerance);\n    var builderType;\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n\n    function featureCallback(feature, geometry) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n\n      for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n        if (imageData[indexes[i_1]] > 0) {\n          if (!declutteredFeatures || builderType !== BuilderType.IMAGE && builderType !== BuilderType.TEXT || declutteredFeatures.indexOf(feature) !== -1) {\n            var idx = (indexes[i_1] - 3) / 4;\n            var x = hitTolerance - idx % contextSize;\n            var y = hitTolerance - (idx / contextSize | 0);\n            var result_1 = callback(feature, geometry, x * x + y * y);\n\n            if (result_1) {\n              return result_1;\n            }\n          }\n\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n\n      return undefined;\n    }\n    /** @type {Array<number>} */\n\n\n    var zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n    var i, j, executors, executor, result;\n\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n\n\n  ExecutorGroup.prototype.getClipCoords = function (transform) {\n    var maxExtent = this.maxExtent_;\n\n    if (!maxExtent) {\n      return null;\n    }\n\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n  /**\n   * @return {boolean} Is empty.\n   */\n\n\n  ExecutorGroup.prototype.isEmpty = function () {\n    return isEmpty(this.executorsByZIndex_);\n  };\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n\n\n  ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction); // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        var builderType = builderTypes[j];\n        replay = replays[builderType];\n\n        if (replay !== undefined) {\n          replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  };\n\n  return ExecutorGroup;\n}();\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\n\n\nvar circlePixelIndexArrayCache = {};\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\n\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  var size = radius * 2 + 1;\n  var maxDistanceSq = radius * radius;\n  var distances = new Array(maxDistanceSq + 1);\n\n  for (var i = 0; i <= radius; ++i) {\n    for (var j = 0; j <= radius; ++j) {\n      var distanceSq = i * i + j * j;\n\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n\n      var distance = distances[distanceSq];\n\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  var pixelIndex = [];\n\n  for (var i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push.apply(pixelIndex, distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\nexport default ExecutorGroup;","map":{"version":3,"mappings":"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","names":["BuilderType","Executor","buffer","createEmpty","extendCoordinate","compose","composeTransform","create","createTransform","createCanvasContext2D","isEmpty","numberSafeCompareFunction","transform2D","ORDER","POLYGON","CIRCLE","LINE_STRING","IMAGE","TEXT","DEFAULT","maxExtent","resolution","pixelRatio","overlaps","allInstructions","opt_renderBuffer","maxExtent_","overlaps_","pixelRatio_","resolution_","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","ExecutorGroup","context","transform","flatClipCoords","getClipCoords","beginPath","moveTo","lineTo","clip","zIndex","executors","undefined","instructionByZindex","builderType","instructions","candidates","i","ii","length","coordinate","rotation","hitTolerance","callback","declutteredFeatures","Math","round","contextSize","newContext","canvas","width","height","clearRect","hitExtent","indexes","getPixelIndexArray","featureCallback","feature","geometry","imageData","getImageData","data","i_1","indexOf","idx","x","y","result_1","zs","Object","keys","map","Number","sort","j","executor","result","zIndexKey","toString","executeHitDetection","minX","minY","maxX","maxY","contextScale","viewRotation","snapToPixel","opt_builderTypes","opt_declutterTree","save","builderTypes","jj","replays","replay","reverse","execute","restore","circlePixelIndexArrayCache","radius","size","maxDistanceSq","distances","Array","distanceSq","distance","push","pixelIndex","apply"],"sourceRoot":"","sources":["../../src/render/canvas/ExecutorGroup.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}