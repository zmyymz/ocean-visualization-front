{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/PinchZoom\n */\n\n\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\n\nvar PinchZoom =\n/** @class */\nfunction (_super) {\n  __extends(PinchZoom, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function PinchZoom(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    var pointerOptions =\n    /** @type {import(\"./Pointer.js\").Options} */\n    options;\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    _this = _super.call(this, pointerOptions) || this;\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n\n    _this.anchor_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.duration_ = options.duration !== undefined ? options.duration : 400;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    _this.lastDistance_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.lastScaleDelta_ = 1;\n    return _this;\n  }\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n\n\n  PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY; // distance between touches\n\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n\n    this.lastDistance_ = distance;\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    } // scale anchor point.\n\n\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid); // scale, bypass the resolution constraint\n\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction);\n\nexport default PinchZoom;","map":{"version":3,"mappings":"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","names":["PointerInteraction","centroid","centroidFromPointers","FALSE","__extends","opt_options","options","pointerOptions","stopDown","_super","_this","anchor_","duration_","duration","undefined","lastDistance_","lastScaleDelta_","PinchZoom","mapBrowserEvent","scaleDelta","touch0","targetPointers","touch1","dx","clientX","dy","clientY","distance","Math","sqrt","map","view","getView","viewportPosition","getViewport","getBoundingClientRect","left","top","getCoordinateFromPixelInternal","render","adjustResolutionInternal","length","direction","endInteraction","handlingDownUpSequence","beginInteraction"],"sourceRoot":"","sources":["../src/interaction/PinchZoom.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}