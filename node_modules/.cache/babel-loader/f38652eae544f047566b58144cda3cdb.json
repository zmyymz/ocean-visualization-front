{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.uint16-array.js\";\nimport \"core-js/modules/es.typed-array.uint32-array.js\";\nimport \"core-js/modules/es.typed-array.float32-array.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/webgl/Helper\n */\n\n\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport { FLOAT, UNSIGNED_BYTE, UNSIGNED_INT, UNSIGNED_SHORT, getContext } from '../webgl.js';\nimport { clear } from '../obj.js';\nimport { compose as composeTransform, create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform } from '../transform.js';\nimport { create, fromTransform } from '../vec/mat4.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\n\nexport var ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31\n};\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\n\nexport var DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution'\n};\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\n\nexport var AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT\n};\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {HTMLCanvasElement} canvas Canvas element.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\n\nvar canvasCache = {};\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\n\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nvar uniqueCanvasCacheKeyCount = 0;\n/**\n * @return {string} The unique cache key.\n */\n\nfunction getUniqueCanvasCacheKey() {\n  var key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n/**\n * @param {string} key The cache key for the canvas.\n * @return {HTMLCanvasElement} The canvas.\n */\n\n\nfunction getCanvas(key) {\n  var cacheItem = canvasCache[key];\n\n  if (!cacheItem) {\n    var canvas = document.createElement('canvas');\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    cacheItem = {\n      users: 0,\n      canvas: canvas\n    };\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.canvas;\n}\n/**\n * @param {string} key The cache key for the canvas.\n */\n\n\nfunction releaseCanvas(key) {\n  var cacheItem = canvasCache[key];\n\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  var canvas = cacheItem.canvas;\n  var gl = getContext(canvas);\n  var extension = gl.getExtension('WEBGL_lose_context');\n\n  if (extension) {\n    extension.loseContext();\n  }\n\n  delete canvasCache[key];\n}\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes enableAttributes()} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @api\n */\n\n\nvar WebGLHelper =\n/** @class */\nfunction (_super) {\n  __extends(WebGLHelper, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function WebGLHelper(opt_options) {\n    var _this = _super.call(this) || this;\n\n    var options = opt_options || {};\n    /** @private */\n\n    _this.boundHandleWebGLContextLost_ = _this.handleWebGLContextLost.bind(_this);\n    /** @private */\n\n    _this.boundHandleWebGLContextRestored_ = _this.handleWebGLContextRestored.bind(_this);\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.canvasCacheKey_ = options.canvasCacheKey ? getSharedCanvasCacheKey(options.canvasCacheKey) : getUniqueCanvasCacheKey();\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n\n    _this.canvas_ = getCanvas(_this.canvasCacheKey_);\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n\n    _this.gl_ = getContext(_this.canvas_);\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n\n    _this.bufferCache_ = {};\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n\n    _this.extensionCache_ = {};\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n\n    _this.currentProgram_ = null;\n\n    _this.canvas_.addEventListener(ContextEventType.LOST, _this.boundHandleWebGLContextLost_);\n\n    _this.canvas_.addEventListener(ContextEventType.RESTORED, _this.boundHandleWebGLContextRestored_);\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n\n\n    _this.offsetRotateMatrix_ = createTransform();\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n\n    _this.offsetScaleMatrix_ = createTransform();\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    _this.tmpMat4_ = create();\n    /**\n     * @private\n     * @type {Object<string, WebGLUniformLocation>}\n     */\n\n    _this.uniformLocations_ = {};\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n\n    _this.attribLocations_ = {};\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n\n    _this.uniforms_ = [];\n\n    if (options.uniforms) {\n      _this.setUniforms(options.uniforms);\n    }\n\n    var gl = _this.getGL();\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n\n\n    _this.postProcessPasses_ = options.postProcesses ? options.postProcesses.map(function (options) {\n      return new WebGLPostProcessingPass({\n        webGlContext: gl,\n        scaleRatio: options.scaleRatio,\n        vertexShader: options.vertexShader,\n        fragmentShader: options.fragmentShader,\n        uniforms: options.uniforms\n      });\n    }) : [new WebGLPostProcessingPass({\n      webGlContext: gl\n    })];\n    /**\n     * @type {string|null}\n     * @private\n     */\n\n    _this.shaderCompileErrors_ = null;\n    /**\n     * @type {number}\n     * @private\n     */\n\n    _this.startTime_ = Date.now();\n    return _this;\n  }\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n\n\n  WebGLHelper.prototype.setUniforms = function (uniforms) {\n    this.uniforms_ = [];\n\n    for (var name_1 in uniforms) {\n      this.uniforms_.push({\n        name: name_1,\n        value: uniforms[name_1]\n      });\n    }\n\n    this.uniformLocations_ = {};\n  };\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n\n\n  WebGLHelper.prototype.canvasCacheKeyMatches = function (canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  };\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n\n\n  WebGLHelper.prototype.getExtension = function (name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n\n    var extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  };\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n\n\n  WebGLHelper.prototype.bindBuffer = function (buffer) {\n    var gl = this.getGL();\n    var bufferKey = getUid(buffer);\n    var bufferCache = this.bufferCache_[bufferKey];\n\n    if (!bufferCache) {\n      var webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  };\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n\n\n  WebGLHelper.prototype.flushBufferData = function (buffer) {\n    var gl = this.getGL();\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  };\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n\n\n  WebGLHelper.prototype.deleteBuffer = function (buf) {\n    var gl = this.getGL();\n    var bufferKey = getUid(buf);\n    var bufferCacheEntry = this.bufferCache_[bufferKey];\n\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n\n    delete this.bufferCache_[bufferKey];\n  };\n  /**\n   * Clean up.\n   */\n\n\n  WebGLHelper.prototype.disposeInternal = function () {\n    this.canvas_.removeEventListener(ContextEventType.LOST, this.boundHandleWebGLContextLost_);\n    this.canvas_.removeEventListener(ContextEventType.RESTORED, this.boundHandleWebGLContextRestored_);\n    releaseCanvas(this.canvasCacheKey_);\n    delete this.gl_;\n    delete this.canvas_;\n  };\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n   * @api\n   */\n\n\n  WebGLHelper.prototype.prepareDraw = function (frameState, opt_disableAlphaBlend) {\n    var gl = this.getGL();\n    var canvas = this.getCanvas();\n    var size = frameState.size;\n    var pixelRatio = frameState.pixelRatio;\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n    gl.useProgram(this.currentProgram_); // loop backwards in post processes list\n\n    for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  };\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n   */\n\n\n  WebGLHelper.prototype.prepareDrawToRenderTarget = function (frameState, renderTarget, opt_disableAlphaBlend) {\n    var gl = this.getGL();\n    var size = renderTarget.getSize();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  };\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   * @api\n   */\n\n\n  WebGLHelper.prototype.drawElements = function (start, end) {\n    var gl = this.getGL();\n    this.getExtension('OES_element_index_uint');\n    var elementType = gl.UNSIGNED_INT;\n    var elementSize = 4;\n    var numItems = end - start;\n    var offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  };\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../PluggableMap.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../PluggableMap.js\").FrameState):void} [postCompose] Called before composing.\n   */\n\n\n  WebGLHelper.prototype.finalizeDraw = function (frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (var i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(frameState, null, preCompose, postCompose);\n      } else {\n        this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1]);\n      }\n    }\n  };\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   * @api\n   */\n\n\n  WebGLHelper.prototype.getCanvas = function () {\n    return this.canvas_;\n  };\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n\n\n  WebGLHelper.prototype.getGL = function () {\n    return this.gl_;\n  };\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n\n\n  WebGLHelper.prototype.applyFrameState = function (frameState) {\n    var size = frameState.size;\n    var rotation = frameState.viewState.rotation;\n    var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n    var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\n    this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\n    this.setUniformFloatValue(DefaultUniform.TIME, (Date.now() - this.startTime_) * 0.001);\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(DefaultUniform.RESOLUTION, frameState.viewState.resolution);\n  };\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n\n\n  WebGLHelper.prototype.applyUniforms = function (frameState) {\n    var gl = this.getGL();\n    var value;\n    var textureSlot = 0;\n    this.uniforms_.forEach(function (uniform) {\n      value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value; // apply value based on type\n\n      if (value instanceof HTMLCanvasElement || value instanceof HTMLImageElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n\n        gl.activeTexture(gl[\"TEXTURE\".concat(textureSlot)]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        var imageReady = !(value instanceof HTMLImageElement) ||\n        /** @type {HTMLImageElement} */\n        value.complete;\n\n        if (imageReady && uniform.prevValue !== value) {\n          uniform.prevValue = value;\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n        } // fill texture slots by increasing index\n\n\n        gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(uniform.name, fromTransform(this.tmpMat4_, value));\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\n            return;\n\n          case 3:\n            gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\n            return;\n\n          case 4:\n            gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\n            return;\n\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    }.bind(this));\n  };\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n\n\n  WebGLHelper.prototype.useProgram = function (program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      var gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      this.uniformLocations_ = {};\n      this.attribLocations_ = {};\n      return true;\n    }\n  };\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n\n\n  WebGLHelper.prototype.compileShader = function (source, type) {\n    var gl = this.getGL();\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  };\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   * @api\n   */\n\n\n  WebGLHelper.prototype.getProgram = function (fragmentShaderSource, vertexShaderSource) {\n    var gl = this.getGL();\n    var fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n    var vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\n    var program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      var message = \"Fragment shader compliation failed: \".concat(gl.getShaderInfoLog(fragmentShader));\n      throw new Error(message);\n    }\n\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      var message = \"Vertex shader compilation failed: \".concat(gl.getShaderInfoLog(vertexShader));\n      throw new Error(message);\n    }\n\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      var message = \"GL program linking failed: \".concat(gl.getShaderInfoLog(vertexShader));\n      throw new Error(message);\n    }\n\n    return program;\n  };\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   * @api\n   */\n\n\n  WebGLHelper.prototype.getUniformLocation = function (name) {\n    if (this.uniformLocations_[name] === undefined) {\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\n    }\n\n    return this.uniformLocations_[name];\n  };\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   * @api\n   */\n\n\n  WebGLHelper.prototype.getAttributeLocation = function (name) {\n    if (this.attribLocations_[name] === undefined) {\n      this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\n    }\n\n    return this.attribLocations_[name];\n  };\n  /**\n   * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   * @api\n   */\n\n\n  WebGLHelper.prototype.makeProjectionTransform = function (frameState, transform) {\n    var size = frameState.size;\n    var rotation = frameState.viewState.rotation;\n    var resolution = frameState.viewState.resolution;\n    var center = frameState.viewState.center;\n    resetTransform(transform);\n    composeTransform(transform, 0, 0, 2 / (resolution * size[0]), 2 / (resolution * size[1]), -rotation, -center[0], -center[1]);\n    return transform;\n  };\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   * @api\n   */\n\n\n  WebGLHelper.prototype.setUniformFloatValue = function (uniform, value) {\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n  };\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n\n\n  WebGLHelper.prototype.setUniformFloatVec4 = function (uniform, value) {\n    this.getGL().uniform4fv(this.getUniformLocation(uniform), value);\n  };\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   * @api\n   */\n\n\n  WebGLHelper.prototype.setUniformMatrixValue = function (uniform, value) {\n    this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  };\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n\n\n  WebGLHelper.prototype.enableAttributeArray_ = function (attribName, size, type, stride, offset) {\n    var location = this.getAttributeLocation(attribName); // the attribute has not been found in the shaders; do not enable it\n\n    if (location < 0) {\n      return;\n    }\n\n    this.getGL().enableVertexAttribArray(location);\n    this.getGL().vertexAttribPointer(location, size, type, false, stride, offset);\n  };\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   * @api\n   */\n\n\n  WebGLHelper.prototype.enableAttributes = function (attributes) {\n    var stride = computeAttributesStride(attributes);\n    var offset = 0;\n\n    for (var i = 0; i < attributes.length; i++) {\n      var attr = attributes[i];\n      this.enableAttributeArray_(attr.name, attr.size, attr.type || FLOAT, stride, offset);\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  };\n  /**\n   * WebGL context was lost\n   * @private\n   */\n\n\n  WebGLHelper.prototype.handleWebGLContextLost = function () {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  };\n  /**\n   * WebGL context was restored\n   * @private\n   */\n\n\n  WebGLHelper.prototype.handleWebGLContextRestored = function () {};\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [opt_data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [opt_texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   * @api\n   */\n\n\n  WebGLHelper.prototype.createTexture = function (size, opt_data, opt_texture) {\n    var gl = this.getGL();\n    var texture = opt_texture || gl.createTexture(); // set params & size\n\n    var level = 0;\n    var internalFormat = gl.RGBA;\n    var border = 0;\n    var format = gl.RGBA;\n    var type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    if (opt_data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, opt_data);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, size[0], size[1], border, format, type, null);\n    }\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    return texture;\n  };\n\n  return WebGLHelper;\n}(Disposable);\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n * @api\n */\n\n\nexport function computeAttributesStride(attributes) {\n  var stride = 0;\n\n  for (var i = 0; i < attributes.length; i++) {\n    var attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n\n  return stride;\n}\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\n\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;","map":{"version":3,"mappings":"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","names":["ContextEventType","Disposable","WebGLPostProcessingPass","FLOAT","UNSIGNED_BYTE","UNSIGNED_INT","UNSIGNED_SHORT","getContext","clear","compose","composeTransform","create","createTransform","reset","resetTransform","rotate","rotateTransform","scale","scaleTransform","fromTransform","getUid","ShaderType","FRAGMENT_SHADER","VERTEX_SHADER","DefaultUniform","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","TIME","ZOOM","RESOLUTION","AttributeType","canvasCache","getSharedCanvasCacheKey","key","uniqueCanvasCacheKeyCount","getUniqueCanvasCacheKey","getCanvas","cacheItem","canvas","document","createElement","style","position","left","users","releaseCanvas","gl","extension","getExtension","loseContext","__extends","opt_options","_super","options","_this","boundHandleWebGLContextLost_","handleWebGLContextLost","bind","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","canvas_","gl_","bufferCache_","extensionCache_","currentProgram_","addEventListener","LOST","RESTORED","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","uniforms_","uniforms","setUniforms","getGL","postProcessPasses_","postProcesses","map","webGlContext","scaleRatio","vertexShader","fragmentShader","shaderCompileErrors_","startTime_","Date","now","WebGLHelper","name_1","push","name","value","buffer","bufferKey","bufferCache","webGlBuffer","createBuffer","bindBuffer","getType","bufferData","getArray","getUsage","buf","bufferCacheEntry","isContextLost","deleteBuffer","removeEventListener","frameState","opt_disableAlphaBlend","size","pixelRatio","width","height","useProgram","i","length","init","bindTexture","TEXTURE_2D","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ZERO","ONE_MINUS_SRC_ALPHA","applyFrameState","applyUniforms","renderTarget","getSize","bindFramebuffer","FRAMEBUFFER","getFramebuffer","viewport","getTexture","start","end","elementType","elementSize","numItems","offsetInBytes","drawElements","TRIANGLES","preCompose","postCompose","ii","apply","rotation","viewState","offsetScaleMatrix","offsetRotateMatrix","setUniformMatrixValue","setUniformFloatValue","zoom","resolution","textureSlot","forEach","uniform","HTMLCanvasElement","HTMLImageElement","ImageData","texture","prevValue","undefined","createTexture","activeTexture","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","imageReady","complete","texImage2D","RGBA","uniform1i","getUniformLocation","Array","isArray","uniform2f","uniform3f","uniform4f","uniform1f","program","source","type","shader","createShader","shaderSource","compileShader","fragmentShaderSource","vertexShaderSource","createProgram","attachShader","linkProgram","getShaderParameter","COMPILE_STATUS","message","getShaderInfoLog","Error","deleteShader","getProgramParameter","LINK_STATUS","getAttribLocation","transform","center","uniform4fv","uniformMatrix4fv","attribName","stride","offset","location","getAttributeLocation","enableVertexAttribArray","vertexAttribPointer","attributes","computeAttributesStride","attr","enableAttributeArray_","getByteSizeFromType","opt_data","opt_texture","level","internalFormat","border","format","Uint8Array","BYTES_PER_ELEMENT","Uint16Array","Uint32Array","Float32Array"],"sourceRoot":"","sources":["../src/webgl/Helper.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}