{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.slice.js\";\n\n/**\n * @module ol/source/Vector\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\nvar VectorSourceEvent =\n/** @class */\nfunction (_super) {\n  __extends(VectorSourceEvent, _super);\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n\n\n  function VectorSourceEvent(type, opt_feature, opt_features) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n\n\n    _this.feature = opt_feature;\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n\n    _this.features = opt_features;\n    return _this;\n  }\n\n  return VectorSourceEvent;\n}(Event);\n\nexport { VectorSourceEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\nvar VectorSource =\n/** @class */\nfunction (_super) {\n  __extends(VectorSource, _super);\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n\n\n  function VectorSource(opt_options) {\n    var _this = this;\n\n    var options = opt_options || {};\n    _this = _super.call(this, {\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    }) || this;\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.on;\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n\n    _this.un;\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n\n    _this.loader_ = VOID;\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n\n    _this.format_ = options.format;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n\n    _this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      _this.loader_ = options.loader;\n    } else if (_this.url_ !== undefined) {\n      assert(_this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n\n      _this.loader_ = xhr(_this.url_,\n      /** @type {import(\"../format/Feature.js\").default} */\n      _this.format_);\n    }\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n\n\n    _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n    var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n\n    _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n\n    _this.loadedExtentsRtree_ = new RBush();\n    /**\n     * @type {number}\n     * @private\n     */\n\n    _this.loadingExtentsCount_ = 0;\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n\n    _this.nullGeometryFeatures_ = {};\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n\n    _this.idIndex_ = {};\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n\n    _this.uidIndex_ = {};\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n\n    _this.featureChangeKeys_ = {};\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n\n    _this.featuresCollection_ = null;\n    var collection, features;\n\n    if (Array.isArray(options.features)) {\n      features =\n      /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n      options.features;\n    } else if (options.features) {\n      collection =\n      /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n      options.features;\n      features = collection.getArray();\n    }\n\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n\n    if (features !== undefined) {\n      _this.addFeaturesInternal(features);\n    }\n\n    if (collection !== undefined) {\n      _this.bindFeaturesCollection_(collection);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n\n\n  VectorSource.prototype.addFeature = function (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n\n\n  VectorSource.prototype.addFeatureInternal = function (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n    var geometry = feature.getGeometry();\n\n    if (geometry) {\n      var extent = geometry.getExtent();\n\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n\n\n  VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [listen(feature, EventType.CHANGE, this.handleFeatureChange_, this), listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)];\n  };\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n\n\n  VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n\n      this.uidIndex_[featureKey] = feature;\n    }\n\n    return valid;\n  };\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n\n\n  VectorSource.prototype.addFeatures = function (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n\n\n  VectorSource.prototype.addFeaturesInternal = function (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length_1 = features.length; i < length_1; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n      var feature = newFeatures[i];\n      var featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n      var geometry = feature.getGeometry();\n\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n      }\n    }\n  };\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n\n\n  VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n    var modifyingCollection = false;\n    this.addEventListener(VectorEventType.ADDFEATURE,\n    /**\n     * @param {VectorSourceEvent<Geometry>} evt The vector source event\n     */\n    function (evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n    this.addEventListener(VectorEventType.REMOVEFEATURE,\n    /**\n     * @param {VectorSourceEvent<Geometry>} evt The vector source event\n     */\n    function (evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n    collection.addEventListener(CollectionEventType.ADD,\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n     */\n    function (evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(\n        /** @type {import(\"../Feature.js\").default<Geometry>} */\n        evt.element);\n        modifyingCollection = false;\n      }\n    }.bind(this));\n    collection.addEventListener(CollectionEventType.REMOVE,\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n     */\n    function (evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(\n        /** @type {import(\"../Feature.js\").default<Geometry>} */\n        evt.element);\n        modifyingCollection = false;\n      }\n    }.bind(this));\n    this.featuresCollection_ = collection;\n  };\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n\n\n  VectorSource.prototype.clear = function (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        var removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n\n    this.nullGeometryFeatures_ = {};\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n\n\n  VectorSource.prototype.forEachFeature = function (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n\n\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      var geometry = feature.getGeometry();\n\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n\n\n  VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n\n\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     */\n    function (feature) {\n      var geometry = feature.getGeometry();\n\n      if (geometry.intersectsExtent(extent)) {\n        var result = callback(feature);\n\n        if (result) {\n          return result;\n        }\n      }\n    });\n  };\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n\n\n  VectorSource.prototype.getFeaturesCollection = function () {\n    return this.featuresCollection_;\n  };\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n\n\n  VectorSource.prototype.getFeatures = function () {\n    var features;\n\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n\n    return (\n      /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n      features\n    );\n  };\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n\n\n  VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n\n\n  VectorSource.prototype.getFeaturesInExtent = function (extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  };\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n\n\n  VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     */\n    function (feature) {\n      if (filter(feature)) {\n        var geometry = feature.getGeometry();\n        var previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature; // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n\n          var minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n    return closestFeature;\n  };\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n\n\n  VectorSource.prototype.getExtent = function (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n\n\n  VectorSource.prototype.getFeatureById = function (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n\n\n  VectorSource.prototype.getFeatureByUid = function (uid) {\n    var feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  };\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n\n\n  VectorSource.prototype.getFormat = function () {\n    return this.format_;\n  };\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n\n\n  VectorSource.prototype.getOverlaps = function () {\n    return this.overlaps_;\n  };\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n\n\n  VectorSource.prototype.getUrl = function () {\n    return this.url_;\n  };\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n\n\n  VectorSource.prototype.handleFeatureChange_ = function (event) {\n    var feature =\n    /** @type {import(\"../Feature.js\").default<Geometry>} */\n    event.target;\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n\n    var id = feature.getId();\n\n    if (id !== undefined) {\n      var sid = id.toString();\n\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n  };\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n\n\n  VectorSource.prototype.hasFeature = function (feature) {\n    var id = feature.getId();\n\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  };\n  /**\n   * @return {boolean} Is empty.\n   */\n\n\n  VectorSource.prototype.isEmpty = function () {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    }\n\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n\n    return true;\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n\n\n  VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution, projection);\n\n    var _loop_1 = function _loop_1(i, ii) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function (object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n\n      if (!alreadyLoaded) {\n        ++this_1.loadingExtentsCount_;\n        this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n        this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n          --this.loadingExtentsCount_;\n          this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n        }.bind(this_1), function () {\n          --this.loadingExtentsCount_;\n          this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n        }.bind(this_1));\n        loadedExtentsRtree.insert(extentToLoad, {\n          extent: extentToLoad.slice()\n        });\n      }\n    };\n\n    var this_1 = this;\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      _loop_1(i, ii);\n    }\n\n    this.loading = this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  };\n\n  VectorSource.prototype.refresh = function () {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n\n    _super.prototype.refresh.call(this);\n  };\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n\n\n  VectorSource.prototype.removeLoadedExtent = function (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n\n\n  VectorSource.prototype.removeFeature = function (feature) {\n    if (!feature) {\n      return;\n    }\n\n    var featureKey = getUid(feature);\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    var result = this.removeFeatureInternal(feature);\n\n    if (result) {\n      this.changed();\n    }\n  };\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n\n\n  VectorSource.prototype.removeFeatureInternal = function (feature) {\n    var featureKey = getUid(feature);\n    var featureChangeKeys = this.featureChangeKeys_[featureKey];\n\n    if (!featureChangeKeys) {\n      return;\n    }\n\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    return feature;\n  };\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n\n\n  VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n    var removed = false;\n\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n\n    return removed;\n  };\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n\n\n  VectorSource.prototype.setLoader = function (loader) {\n    this.loader_ = loader;\n  };\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n\n\n  VectorSource.prototype.setUrl = function (url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  };\n\n  return VectorSource;\n}(Source);\n\nexport default VectorSource;","map":{"version":3,"mappings":"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","names":["Collection","CollectionEventType","Event","EventType","ObjectEventType","RBush","Source","SourceState","VectorEventType","TRUE","VOID","all","allStrategy","assert","containsExtent","equals","extend","getUid","getValues","isEmpty","listen","unlistenByKey","xhr","__extends","type","opt_feature","opt_features","_super","_this","feature","features","opt_options","options","attributions","interpolate","projection","undefined","state","READY","wrapX","on","once","un","loader_","format_","format","overlaps_","overlaps","url_","url","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","collection","Array","isArray","getArray","addFeaturesInternal","bindFeaturesCollection_","VectorSource","addFeatureInternal","changed","featureKey","addToIndex_","remove","setupChangeEvents_","geometry","getGeometry","extent","getExtent","insert","dispatchEvent","VectorSourceEvent","ADDFEATURE","CHANGE","handleFeatureChange_","PROPERTYCHANGE","valid","id","getId","toString","extents","newFeatures","geometryFeatures","i","length_1","length","push","length_2","load","hasListener","length_3","modifyingCollection","addEventListener","evt","REMOVEFEATURE","ADD","addFeature","element","bind","REMOVE","removeFeature","opt_fast","featureId","keys","forEach","removeAndIgnoreReturn","removeFeatureInternal","clear","clearEvent","CLEAR","callback","coordinate","forEachFeatureInExtent","intersectsCoordinate","forEachInExtent","intersectsExtent","result","slice","getAll","forEachFeatureAtCoordinateDirect","getInExtent","opt_filter","x","y","closestFeature","closestPoint","NaN","minSquaredDistance","Infinity","filter","previousMinSquaredDistance","closestPointXY","minDistance","Math","sqrt","opt_extent","uid","event","target","update","sid","removeFromIdIndex_","CHANGEFEATURE","getLength","resolution","loadedExtentsRtree","extentsToLoad","ii","extentToLoad","alreadyLoaded","object","this_1","FEATURESLOADSTART","call","FEATURESLOADEND","FEATURESLOADERROR","loading","refresh","obj","featureChangeKeys","removed","setLoader"],"sourceRoot":"","sources":["../src/source/Vector.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}