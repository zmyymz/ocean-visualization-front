{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/**\n * @module ol/source/Stamen\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport XYZ from './XYZ.js';\nimport { ATTRIBUTION as OSM_ATTRIBUTION } from './OSM.js';\n/**\n * @const\n * @type {Array<string>}\n */\n\nvar ATTRIBUTIONS = ['Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' + 'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' + ' 3.0</a>.', OSM_ATTRIBUTION];\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\n\nvar LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\n\nvar ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18\n  }\n};\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\n\nvar Stamen =\n/** @class */\nfunction (_super) {\n  __extends(Stamen, _super);\n  /**\n   * @param {Options} options Stamen options.\n   */\n\n\n  function Stamen(options) {\n    var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    var i = options.layer.indexOf('-');\n    var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    var providerConfig = ProviderConfig[provider];\n    var layerConfig = LayerConfig[options.layer];\n    var url = options.url !== undefined ? options.url : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer + '/{z}/{x}/{y}.' + layerConfig.extension;\n    return _super.call(this, {\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: interpolate,\n      maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection\n    }) || this;\n  }\n\n  return Stamen;\n}(XYZ);\n\nexport default Stamen;","map":{"version":3,"mappings":"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","names":["XYZ","ATTRIBUTION","OSM_ATTRIBUTION","ATTRIBUTIONS","LayerConfig","extension","opaque","ProviderConfig","minZoom","maxZoom","__extends","options","interpolate","imageSmoothing","undefined","i","layer","indexOf","provider","slice","providerConfig","layerConfig","url","_super","attributions","cacheSize","crossOrigin","reprojectionErrorThreshold","tileLoadFunction","transition","wrapX","zDirection","Stamen"],"sourceRoot":"","sources":["../src/source/Stamen.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}