{"ast":null,"code":"/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext =\n/** @class */\nfunction () {\n  function VectorContext() {}\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n\n\n  VectorContext.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) {};\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n\n\n  VectorContext.prototype.drawGeometry = function (geometry) {};\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n\n\n  VectorContext.prototype.setStyle = function (style) {};\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n\n\n  VectorContext.prototype.drawCircle = function (circleGeometry, feature) {};\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n\n\n  VectorContext.prototype.drawFeature = function (feature, style) {};\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n\n\n  VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n\n\n  VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n\n\n  VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n\n\n  VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n\n\n  VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n\n\n  VectorContext.prototype.drawPoint = function (pointGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n\n\n  VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n\n\n  VectorContext.prototype.drawText = function (geometry, feature) {};\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n\n\n  VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {};\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n\n\n  VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) {};\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n\n\n  VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) {};\n\n  return VectorContext;\n}();\n\nexport default VectorContext;","map":{"version":3,"mappings":"AAAA;;;;AAIA;;;;;;AAMA;AAAA;AAAA;AAAA,4BAsGC;AArGC;;;;;;;;;;AAQAA,iDAAWC,QAAX,EAAqBC,OAArB,EAA8BC,QAA9B,EAAwCC,oBAAxC,EAA4D,CAAI,CAAhE;AAEA;;;;;;;AAKAJ,mDAAaC,QAAb,EAAqB,CAAI,CAAzB;AAEA;;;;;;;AAKAD,+CAASK,KAAT,EAAc,CAAI,CAAlB;AAEA;;;;;;AAIAL,iDAAWM,cAAX,EAA2BJ,OAA3B,EAAkC,CAAI,CAAtC;AAEA;;;;;;AAIAF,kDAAYE,OAAZ,EAAqBG,KAArB,EAA0B,CAAI,CAA9B;AAEA;;;;;;AAIAL,6DAAuBO,0BAAvB,EAAmDL,OAAnD,EAA0D,CAAI,CAA9D;AAEA;;;;;;AAIAF,qDAAeQ,kBAAf,EAAmCN,OAAnC,EAA0C,CAAI,CAA9C;AAEA;;;;;;AAIAF,0DAAoBS,uBAApB,EAA6CP,OAA7C,EAAoD,CAAI,CAAxD;AAEA;;;;;;AAIAF,qDAAeU,kBAAf,EAAmCR,OAAnC,EAA0C,CAAI,CAA9C;AAEA;;;;;;AAIAF,uDAAiBW,oBAAjB,EAAuCT,OAAvC,EAA8C,CAAI,CAAlD;AAEA;;;;;;AAIAF,gDAAUY,aAAV,EAAyBV,OAAzB,EAAgC,CAAI,CAApC;AAEA;;;;;;AAIAF,kDAAYa,eAAZ,EAA6BX,OAA7B,EAAoC,CAAI,CAAxC;AAEA;;;;;;AAIAF,+CAASC,QAAT,EAAmBC,OAAnB,EAA0B,CAAI,CAA9B;AAEA;;;;;;AAIAF,yDAAmBc,SAAnB,EAA8BC,WAA9B,EAAyC,CAAI,CAA7C;AAEA;;;;;;AAIAf,oDAAcgB,UAAd,EAA0BC,0BAA1B,EAAoD,CAAI,CAAxD;AAEA;;;;;;AAIAjB,mDAAakB,SAAb,EAAwBD,0BAAxB,EAAkD,CAAI,CAAtD;;AACF;AAAC,CAtGD;;AAwGA,eAAejB,aAAf","names":["VectorContext","geometry","feature","renderer","hitDetectionRenderer","style","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","strokeStyle","imageStyle","opt_declutterImageWithText","textStyle"],"sourceRoot":"","sources":["../src/render/VectorContext.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}