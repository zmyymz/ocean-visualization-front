{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/render/canvas/Builder\n */\n\n\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, containsCoordinate, coordinateRelationship } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\n\nvar CanvasBuilder =\n/** @class */\nfunction (_super) {\n  __extends(CanvasBuilder, _super);\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n\n\n  function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    var _this = _super.call(this) || this;\n    /**\n     * @protected\n     * @type {number}\n     */\n\n\n    _this.tolerance = tolerance;\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n    _this.maxExtent = maxExtent;\n    /**\n     * @protected\n     * @type {number}\n     */\n\n    _this.pixelRatio = pixelRatio;\n    /**\n     * @protected\n     * @type {number}\n     */\n\n    _this.maxLineWidth = 0;\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n\n    _this.resolution = resolution;\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n\n    _this.beginGeometryInstruction1_ = null;\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n\n    _this.beginGeometryInstruction2_ = null;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n    _this.bufferedMaxExtent_ = null;\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n\n    _this.instructions = [];\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n\n    _this.coordinates = [];\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n\n    _this.tmpCoordinate_ = [];\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n\n    _this.hitDetectionInstructions = [];\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n\n    _this.state =\n    /** @type {import(\"../canvas.js\").FillStrokeState} */\n    {};\n    return _this;\n  }\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n\n\n  CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n      return dash * pixelRatio;\n    });\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n\n\n  CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n    var extent = this.getBufferedMaxExtent();\n    var tmpCoord = this.tmpCoordinate_;\n    var coordinates = this.coordinates;\n    var myEnd = coordinates.length;\n\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n\n    return myEnd;\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n\n\n  CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n    var coordinates = this.coordinates;\n    var myEnd = coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n\n    if (skipFirst) {\n      offset += stride;\n    }\n\n    var lastXCoord = flatCoordinates[offset];\n    var lastYCoord = flatCoordinates[offset + 1];\n    var nextCoord = this.tmpCoordinate_;\n    var skipped = true;\n    var i, lastRel, nextRel;\n\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    } // Last coordinate equals first or only one point to append:\n\n\n    if (closed && skipped || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n\n    return myEnd;\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n\n\n  CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n\n    return offset;\n  };\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n\n\n  CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var builderBegin = this.coordinates.length;\n    var flatCoordinates, builderEnd, builderEnds, builderEndss;\n    var offset;\n\n    switch (type) {\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */\n        geometry.getOrientedFlatCoordinates();\n        builderEndss = [];\n        var endss =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */\n        geometry.getEndss();\n        offset = 0;\n\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n          var myEnds = [];\n          offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n          builderEndss.push(myEnds);\n        }\n\n        this.instructions.push([CanvasInstruction.CUSTOM, builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        this.hitDetectionInstructions.push([CanvasInstruction.CUSTOM, builderBegin, builderEndss, geometry, hitDetectionRenderer || renderer, inflateMultiCoordinatesArray]);\n        break;\n\n      case GeometryType.POLYGON:\n      case GeometryType.MULTI_LINE_STRING:\n        builderEnds = [];\n        flatCoordinates = type == GeometryType.POLYGON ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */\n        geometry.getOrientedFlatCoordinates() : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */\n        geometry.getEnds(), stride, builderEnds);\n        this.instructions.push([CanvasInstruction.CUSTOM, builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        this.hitDetectionInstructions.push([CanvasInstruction.CUSTOM, builderBegin, builderEnds, geometry, hitDetectionRenderer || renderer, inflateCoordinatesArray]);\n        break;\n\n      case GeometryType.LINE_STRING:\n      case GeometryType.CIRCLE:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        this.instructions.push([CanvasInstruction.CUSTOM, builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        this.hitDetectionInstructions.push([CanvasInstruction.CUSTOM, builderBegin, builderEnd, geometry, hitDetectionRenderer || renderer, inflateCoordinates]);\n        break;\n\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([CanvasInstruction.CUSTOM, builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n          this.hitDetectionInstructions.push([CanvasInstruction.CUSTOM, builderBegin, builderEnd, geometry, hitDetectionRenderer || renderer, inflateCoordinates]);\n        }\n\n        break;\n\n      case GeometryType.POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n        this.instructions.push([CanvasInstruction.CUSTOM, builderBegin, builderEnd, geometry, renderer]);\n        this.hitDetectionInstructions.push([CanvasInstruction.CUSTOM, builderBegin, builderEnd, geometry, hitDetectionRenderer || renderer]);\n        break;\n\n      default:\n    }\n\n    this.endGeometry(feature);\n  };\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n\n\n  CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, geometry];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, geometry];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n\n\n  CanvasBuilder.prototype.finish = function () {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates\n    };\n  };\n  /**\n   * Reverse the hit detection instructions.\n   */\n\n\n  CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n    var hitDetectionInstructions = this.hitDetectionInstructions; // step 1 - reverse array\n\n    hitDetectionInstructions.reverse(); // step 2 - reverse instructions within geometry blocks\n\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type =\n      /** @type {import(\"./Instruction.js\").default} */\n      instruction[0];\n\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n\n\n  CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n    var state = this.state;\n\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ? strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ? strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ? strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ? strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth; // invalidate the buffered max extent cache\n\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n\n\n  CanvasBuilder.prototype.createFill = function (state) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n\n    return fillInstruction;\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n\n\n  CanvasBuilder.prototype.applyStroke = function (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n\n\n  CanvasBuilder.prototype.createStroke = function (state) {\n    return [CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap, state.lineJoin, state.miterLimit, this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio];\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n\n\n  CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n    var fillStyle = state.fillStyle;\n\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n\n      state.currentFillStyle = fillStyle;\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n\n\n  CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n\n    if (state.currentStrokeStyle != strokeStyle || state.currentLineCap != lineCap || lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash) || state.currentLineDashOffset != lineDashOffset || state.currentLineJoin != lineJoin || state.currentLineWidth != lineWidth || state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n\n\n  CanvasBuilder.prototype.endGeometry = function (feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n\n\n  CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasBuilder;\n}(VectorContext);\n\nexport default CanvasBuilder;","map":{"version":3,"mappings":"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","names":["CanvasInstruction","GeometryType","Relationship","VectorContext","asColorLike","buffer","clone","containsCoordinate","coordinateRelationship","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultLineWidth","defaultMiterLimit","defaultStrokeStyle","equals","reverseSubArray","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","__extends","tolerance","maxExtent","resolution","pixelRatio","_super","_this","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinates","tmpCoordinate_","hitDetectionInstructions","state","CanvasBuilder","dashArray","map","dash","flatCoordinates","stride","extent","getBufferedMaxExtent","tmpCoord","myEnd","length","i","ii","offset","end","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","INTERSECTING","ends","builderEnds","builderEnd","appendFlatLineCoordinates","push","geometry","feature","renderer","hitDetectionRenderer","beginGeometry","type","getType","getStride","builderBegin","builderEndss","MULTI_POLYGON","getOrientedFlatCoordinates","endss","getEndss","myEnds","drawCustomCoordinates_","CUSTOM","POLYGON","MULTI_LINE_STRING","getFlatCoordinates","getEnds","LINE_STRING","CIRCLE","MULTI_POINT","appendFlatPointCoordinates","POINT","endGeometry","BEGIN_GEOMETRY","reverse","n","instruction","begin","END_GEOMETRY","fillStyle","strokeStyle","fillStyleColor","getColor","undefined","strokeStyleColor","strokeStyleLineCap","getLineCap","lineCap","strokeStyleLineDash","getLineDash","lineDash","slice","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","lineJoin","strokeStyleWidth","getWidth","lineWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","fillInstruction","SET_FILL_STYLE","createStroke","SET_STROKE_STYLE","applyPixelRatio","createFill","currentFillStyle","call","applyStroke","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","width"],"sourceRoot":"","sources":["../../src/render/canvas/Builder.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}