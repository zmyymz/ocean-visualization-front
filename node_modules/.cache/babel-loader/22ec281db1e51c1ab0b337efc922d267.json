{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/Map\n */\n\n\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\n\nvar Map =\n/** @class */\nfunction (_super) {\n  __extends(Map, _super);\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n\n\n  function Map(options) {\n    options = assign({}, options);\n\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true\n      });\n    }\n\n    return _super.call(this, options) || this;\n  }\n\n  Map.prototype.createRenderer = function () {\n    return new CompositeMapRenderer(this);\n  };\n\n  return Map;\n}(PluggableMap);\n\nexport default Map;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,OAAOA,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,SAAQC,QAAQ,IAAIC,eAApB,QAA0C,cAA1C;AACA,SAAQD,QAAQ,IAAIE,mBAApB,QAA8C,kBAA9C;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AAAA;AAAA;AAAkBC;AAChB;;;;;AAGA,eAAYC,OAAZ,EAAmB;AACjBA,WAAO,GAAGL,MAAM,CAAC,EAAD,EAAKK,OAAL,CAAhB;;AACA,QAAI,CAACA,OAAO,CAACC,QAAb,EAAuB;AACrBD,aAAO,CAACC,QAAR,GAAmBJ,eAAe,EAAlC;AACD;;AACD,QAAI,CAACG,OAAO,CAACE,YAAb,EAA2B;AACzBF,aAAO,CAACE,YAAR,GAAuBJ,mBAAmB,CAAC;AACzCK,mBAAW,EAAE;AAD4B,OAAD,CAA1C;AAGD;;WAEDC,kBAAMJ,OAAN,KAAc;AACf;;AAEDK;AACE,WAAO,IAAIZ,oBAAJ,CAAyB,IAAzB,CAAP;AACD,GAFD;;AAGF;AArBA,EAAkBC,YAAlB;;AAuBA,eAAeW,GAAf","names":["CompositeMapRenderer","PluggableMap","assign","defaults","defaultControls","defaultInteractions","__extends","options","controls","interactions","onFocusOnly","_super","Map"],"sourceRoot":"","sources":["src/Map.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}