{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/style/Icon\n */\n\n\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\n\nvar Icon =\n/** @class */\nfunction (_super) {\n  __extends(Icon, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function Icon(opt_options) {\n    var _this = this;\n\n    var options = opt_options || {};\n    /**\n     * @type {number}\n     */\n\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n    /**\n     * @type {number}\n     */\n\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n\n    var scale = options.scale !== undefined ? options.scale : 1;\n    /**\n     * @type {boolean}\n     */\n\n    var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n    _this = _super.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView\n    }) || this;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    _this.normalizedAnchor_ = null;\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n\n    _this.anchorOrigin_ = options.anchorOrigin !== undefined ? options.anchorOrigin : IconOrigin.TOP_LEFT;\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n\n    _this.anchorXUnits_ = options.anchorXUnits !== undefined ? options.anchorXUnits : IconAnchorUnits.FRACTION;\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n\n    _this.anchorYUnits_ = options.anchorYUnits !== undefined ? options.anchorYUnits : IconAnchorUnits.FRACTION;\n    /**\n     * @private\n     * @type {?string}\n     */\n\n    _this.crossOrigin_ = options.crossOrigin !== undefined ? options.crossOrigin : null;\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n\n    var image = options.img !== undefined ? options.img : null;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n\n    _this.imgSize_ = options.imgSize;\n    /**\n     * @type {string|undefined}\n     */\n\n    var src = options.src;\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n\n    assert(!image || image && _this.imgSize_, 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src =\n      /** @type {HTMLImageElement} */\n      image.src || getUid(image);\n    }\n\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n\n    var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n\n    _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n\n    _this.iconImage_ = getIconImage(image,\n    /** @type {string} */\n    src, _this.imgSize_ !== undefined ? _this.imgSize_ : null, _this.crossOrigin_, imageState, _this.color_);\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n\n    _this.offsetOrigin_ = options.offsetOrigin !== undefined ? options.offsetOrigin : IconOrigin.TOP_LEFT;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    _this.origin_ = null;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n\n    _this.size_ = options.size !== undefined ? options.size : null;\n    return _this;\n  }\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n\n\n  Icon.prototype.clone = function () {\n    var scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color: this.color_ && this.color_.slice ? this.color_.slice() : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc()\n    });\n  };\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n\n\n  Icon.prototype.getAnchor = function () {\n    var anchor = this.normalizedAnchor_;\n\n    if (!anchor) {\n      anchor = this.anchor_;\n      var size = this.getSize();\n\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION || this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        if (!size) {\n          return null;\n        }\n\n        anchor = this.anchor_.slice();\n\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[0] *= size[0];\n        }\n\n        if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n        if (!size) {\n          return null;\n        }\n\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n\n        if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT || this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n\n        if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT || this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n\n      this.normalizedAnchor_ = anchor;\n    }\n\n    var displacement = this.getDisplacement();\n    return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n  };\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n\n\n  Icon.prototype.setAnchor = function (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n\n\n  Icon.prototype.getColor = function () {\n    return this.color_;\n  };\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n\n\n  Icon.prototype.getImage = function (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n\n\n  Icon.prototype.getPixelRatio = function (pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  };\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n\n\n  Icon.prototype.getImageSize = function () {\n    return this.iconImage_.getSize();\n  };\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n\n\n  Icon.prototype.getImageState = function () {\n    return this.iconImage_.getImageState();\n  };\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n\n\n  Icon.prototype.getHitDetectionImage = function () {\n    return this.iconImage_.getHitDetectionImage();\n  };\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n\n\n  Icon.prototype.getOrigin = function () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n\n      if (!size || !iconImageSize) {\n        return null;\n      }\n\n      offset = offset.slice();\n\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT || this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT || this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n\n    this.origin_ = offset;\n    return this.origin_;\n  };\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n\n\n  Icon.prototype.getSrc = function () {\n    return this.iconImage_.getSrc();\n  };\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n\n\n  Icon.prototype.getSize = function () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n\n\n  Icon.prototype.listenImageChange = function (listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  };\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n\n\n  Icon.prototype.load = function () {\n    this.iconImage_.load();\n  };\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n\n\n  Icon.prototype.unlistenImageChange = function (listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  };\n\n  return Icon;\n}(ImageStyle);\n\nexport default Icon;","map":{"version":3,"mappings":"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","names":["EventType","IconAnchorUnits","IconOrigin","ImageState","ImageStyle","asArray","assert","get","getIconImage","getUid","__extends","opt_options","options","opacity","undefined","rotation","scale","rotateWithView","_super","displacement","_this","anchor_","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","TOP_LEFT","anchorXUnits_","anchorXUnits","FRACTION","anchorYUnits_","anchorYUnits","crossOrigin_","crossOrigin","image","img","imgSize_","imgSize","src","length","imageState","IDLE","LOADED","color_","color","iconImage_","offset_","offset","offsetOrigin_","offsetOrigin","origin_","size_","size","Icon","getScale","slice","getOpacity","getRotateWithView","getRotation","Array","isArray","getSrc","getSize","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","getDisplacement","pixelRatio","getImage","getPixelRatio","getImageState","getHitDetectionImage","iconImageSize","listener","addEventListener","CHANGE","load","removeEventListener"],"sourceRoot":"","sources":["../src/style/Icon.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}