{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.number.constructor.js\";\n\n/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\n\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\n\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\n\nexport function getCacheKeyForTileKey(tileKey) {\n  var _a = tileKey.substring(tileKey.lastIndexOf('/') + 1, tileKey.length).split(',').map(Number),\n      z = _a[0],\n      x = _a[1],\n      y = _a[2];\n\n  return getKeyZXY(z, x, y);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\n\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\n\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\n\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n\n  var tileRange = tileGrid.getFullTileRange(z);\n\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}","map":{"version":3,"mappings":";;;;;AAAA;;;;AAIA;;;;;;;AAOA;;;;;;;AAOA,OAAM,SAAUA,cAAV,CAAyBC,CAAzB,EAA4BC,CAA5B,EAA+BC,CAA/B,EAAkCC,aAAlC,EAA+C;AACnD,MAAIA,aAAa,KAAKC,SAAtB,EAAiC;AAC/BD,iBAAa,CAAC,CAAD,CAAb,GAAmBH,CAAnB;AACAG,iBAAa,CAAC,CAAD,CAAb,GAAmBF,CAAnB;AACAE,iBAAa,CAAC,CAAD,CAAb,GAAmBD,CAAnB;AACA,WAAOC,aAAP;AACD,GALD,MAKO;AACL,WAAO,CAACH,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAP;AACD;AACF;AAED;;;;;;;AAMA,OAAM,SAAUG,SAAV,CAAoBL,CAApB,EAAuBC,CAAvB,EAA0BC,CAA1B,EAA2B;AAC/B,SAAOF,CAAC,GAAG,GAAJ,GAAUC,CAAV,GAAc,GAAd,GAAoBC,CAA3B;AACD;AAED;;;;;;AAKA,OAAM,SAAUI,MAAV,CAAiBC,SAAjB,EAA0B;AAC9B,SAAOF,SAAS,CAACE,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,EAA6BA,SAAS,CAAC,CAAD,CAAtC,CAAhB;AACD;AAED;;;;;;AAKA,OAAM,SAAUC,qBAAV,CAAgCC,OAAhC,EAAuC;AACrC,WAAYA,OAAO,CACtBC,SADe,CACLD,OAAO,CAACE,WAAR,CAAoB,GAApB,IAA2B,CADtB,EACyBF,OAAO,CAACG,MADjC,EAEfC,KAFe,CAET,GAFS,EAGfC,GAHe,CAGXC,MAHW,CAAZ;AAAA,MAACf,CAAC,QAAF;AAAA,MAAIC,CAAC,QAAL;AAAA,MAAOC,CAAC,QAAR;;AAIN,SAAOG,SAAS,CAACL,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAhB;AACD;AAED;;;;;;AAKA,OAAM,SAAUc,OAAV,CAAkBC,GAAlB,EAAqB;AACzB,SAAOA,GAAG,CAACJ,KAAJ,CAAU,GAAV,EAAeC,GAAf,CAAmBC,MAAnB,CAAP;AACD;AAED;;;;;AAIA,OAAM,SAAUG,IAAV,CAAeX,SAAf,EAAwB;AAC5B,SAAO,CAACA,SAAS,CAAC,CAAD,CAAT,IAAgBA,SAAS,CAAC,CAAD,CAA1B,IAAiCA,SAAS,CAAC,CAAD,CAAjD;AACD;AAED;;;;;;AAKA,OAAM,SAAUY,gBAAV,CAA2BZ,SAA3B,EAAsCa,QAAtC,EAA8C;AAClD,MAAMpB,CAAC,GAAGO,SAAS,CAAC,CAAD,CAAnB;AACA,MAAMN,CAAC,GAAGM,SAAS,CAAC,CAAD,CAAnB;AACA,MAAML,CAAC,GAAGK,SAAS,CAAC,CAAD,CAAnB;;AAEA,MAAIa,QAAQ,CAACC,UAAT,KAAwBrB,CAAxB,IAA6BA,CAAC,GAAGoB,QAAQ,CAACE,UAAT,EAArC,EAA4D;AAC1D,WAAO,KAAP;AACD;;AACD,MAAMC,SAAS,GAAGH,QAAQ,CAACI,gBAAT,CAA0BxB,CAA1B,CAAlB;;AACA,MAAI,CAACuB,SAAL,EAAgB;AACd,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAOA,SAAS,CAACE,UAAV,CAAqBxB,CAArB,EAAwBC,CAAxB,CAAP;AACD;AACF","names":["createOrUpdate","z","x","y","opt_tileCoord","undefined","getKeyZXY","getKey","tileCoord","getCacheKeyForTileKey","tileKey","substring","lastIndexOf","length","split","map","Number","fromKey","key","hash","withinExtentAndZ","tileGrid","getMinZoom","getMaxZoom","tileRange","getFullTileRange","containsXY"],"sourceRoot":"","sources":["src/tilecoord.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}