{"ast":null,"code":"import _classCallCheck from \"D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/**\n * A no-op logger\n */\nvar DummyLogger = /*#__PURE__*/function () {\n  function DummyLogger() {\n    _classCallCheck(this, DummyLogger);\n  }\n\n  _createClass(DummyLogger, [{\n    key: \"log\",\n    value: function log() {}\n  }, {\n    key: \"debug\",\n    value: function debug() {}\n  }, {\n    key: \"info\",\n    value: function info() {}\n  }, {\n    key: \"warn\",\n    value: function warn() {}\n  }, {\n    key: \"error\",\n    value: function error() {}\n  }, {\n    key: \"time\",\n    value: function time() {}\n  }, {\n    key: \"timeEnd\",\n    value: function timeEnd() {}\n  }]);\n\n  return DummyLogger;\n}();\n\nvar LOGGER = new DummyLogger();\n/**\n *\n * @param {object} logger the new logger. e.g `console`\n */\n\nexport function setLogger() {\n  var logger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new DummyLogger();\n  LOGGER = logger;\n}\nexport function debug() {\n  var _LOGGER;\n\n  return (_LOGGER = LOGGER).debug.apply(_LOGGER, arguments);\n}\nexport function log() {\n  var _LOGGER2;\n\n  return (_LOGGER2 = LOGGER).log.apply(_LOGGER2, arguments);\n}\nexport function info() {\n  var _LOGGER3;\n\n  return (_LOGGER3 = LOGGER).info.apply(_LOGGER3, arguments);\n}\nexport function warn() {\n  var _LOGGER4;\n\n  return (_LOGGER4 = LOGGER).warn.apply(_LOGGER4, arguments);\n}\nexport function error() {\n  var _LOGGER5;\n\n  return (_LOGGER5 = LOGGER).error.apply(_LOGGER5, arguments);\n}\nexport function time() {\n  var _LOGGER6;\n\n  return (_LOGGER6 = LOGGER).time.apply(_LOGGER6, arguments);\n}\nexport function timeEnd() {\n  var _LOGGER7;\n\n  return (_LOGGER7 = LOGGER).timeEnd.apply(_LOGGER7, arguments);\n}","map":{"version":3,"sources":["D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/geotiff/dist-module/logging.js"],"names":["DummyLogger","LOGGER","setLogger","logger","debug","log","info","warn","error","time","timeEnd"],"mappings":";;;AAAA;AACA;AACA;IACMA,W;;;;;;;WACJ,eAAM,CAAE;;;WAER,iBAAQ,CAAE;;;WAEV,gBAAO,CAAE;;;WAET,gBAAO,CAAE;;;WAET,iBAAQ,CAAE;;;WAEV,gBAAO,CAAE;;;WAET,mBAAU,CAAE;;;;;;AAGd,IAAIC,MAAM,GAAG,IAAID,WAAJ,EAAb;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASE,SAAT,GAA+C;AAAA,MAA5BC,MAA4B,uEAAnB,IAAIH,WAAJ,EAAmB;AACpDC,EAAAA,MAAM,GAAGE,MAAT;AACD;AAED,OAAO,SAASC,KAAT,GAAwB;AAAA;;AAC7B,SAAO,WAAAH,MAAM,EAACG,KAAP,0BAAP;AACD;AAED,OAAO,SAASC,GAAT,GAAsB;AAAA;;AAC3B,SAAO,YAAAJ,MAAM,EAACI,GAAP,2BAAP;AACD;AAED,OAAO,SAASC,IAAT,GAAuB;AAAA;;AAC5B,SAAO,YAAAL,MAAM,EAACK,IAAP,2BAAP;AACD;AAED,OAAO,SAASC,IAAT,GAAuB;AAAA;;AAC5B,SAAO,YAAAN,MAAM,EAACM,IAAP,2BAAP;AACD;AAED,OAAO,SAASC,KAAT,GAAwB;AAAA;;AAC7B,SAAO,YAAAP,MAAM,EAACO,KAAP,2BAAP;AACD;AAED,OAAO,SAASC,IAAT,GAAuB;AAAA;;AAC5B,SAAO,YAAAR,MAAM,EAACQ,IAAP,2BAAP;AACD;AAED,OAAO,SAASC,OAAT,GAA0B;AAAA;;AAC/B,SAAO,YAAAT,MAAM,EAACS,OAAP,2BAAP;AACD","sourcesContent":["/**\n * A no-op logger\n */\nclass DummyLogger {\n  log() {}\n\n  debug() {}\n\n  info() {}\n\n  warn() {}\n\n  error() {}\n\n  time() {}\n\n  timeEnd() {}\n}\n\nlet LOGGER = new DummyLogger();\n\n/**\n *\n * @param {object} logger the new logger. e.g `console`\n */\nexport function setLogger(logger = new DummyLogger()) {\n  LOGGER = logger;\n}\n\nexport function debug(...args) {\n  return LOGGER.debug(...args);\n}\n\nexport function log(...args) {\n  return LOGGER.log(...args);\n}\n\nexport function info(...args) {\n  return LOGGER.info(...args);\n}\n\nexport function warn(...args) {\n  return LOGGER.warn(...args);\n}\n\nexport function error(...args) {\n  return LOGGER.error(...args);\n}\n\nexport function time(...args) {\n  return LOGGER.time(...args);\n}\n\nexport function timeEnd(...args) {\n  return LOGGER.timeEnd(...args);\n}\n"]},"metadata":{},"sourceType":"module"}