{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/GML2\n */\n\n\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { OBJECT_PROPERTY_NODE_FACTORY, createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender, makeReplacer, makeSimpleNodeFactory, pushParseAndPop, pushSerializeAndPop } from '../xml.js';\nimport { assign } from '../obj.js';\nimport { createOrUpdate } from '../extent.js';\nimport { get as getProjection } from '../proj.js';\nimport { transformExtentWithOptions, transformGeometryWithOptions } from './Feature.js';\nimport { writeStringTextNode } from './xsd.js';\n/**\n * @const\n * @type {string}\n */\n\nvar schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n/**\n * @const\n * @type {Object<string, string>}\n */\n\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\n\nvar GML2 =\n/** @class */\nfunction (_super) {\n  __extends(GML2, _super);\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [opt_options] Optional configuration object.\n   */\n\n\n  function GML2(opt_options) {\n    var _this = this;\n\n    var options =\n    /** @type {import(\"./GMLBase.js\").Options} */\n    opt_options ? opt_options : {};\n    _this = _super.call(this, options) || this;\n    _this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(_this.readFeaturesInternal);\n    /**\n     * @type {string}\n     */\n\n    _this.schemaLocation = options.schemaLocation ? options.schemaLocation : schemaLocation;\n    return _this;\n  }\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n\n\n  GML2.prototype.readFlatCoordinates = function (node, objectStack) {\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    var context =\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    objectStack[0];\n    var containerSrs = context['srsName'];\n    var axisOrientation = 'enu';\n\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n\n    var coordsGroups = s.trim().split(/\\s+/);\n    var flatCoordinates = [];\n\n    for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\n      var coords = coordsGroups[i].split(/,+/);\n      var x = parseFloat(coords[0]);\n      var y = parseFloat(coords[1]);\n      var z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n\n    return flatCoordinates;\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n\n\n  GML2.prototype.readBox = function (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null], this.BOX_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0], flatCoordinates[1][1], flatCoordinates[1][3], flatCoordinates[1][4]);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n\n\n  GML2.prototype.innerBoundaryIsParser = function (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n\n    if (flatLinearRing) {\n      var flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      objectStack[objectStack.length - 1];\n      flatLinearRings.push(flatLinearRing);\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n\n\n  GML2.prototype.outerBoundaryIsParser = function (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n\n    if (flatLinearRing) {\n      var flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      objectStack[objectStack.length - 1];\n      flatLinearRings[0] = flatLinearRing;\n    }\n  };\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [opt_nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n\n\n  GML2.prototype.GEOMETRY_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var multiSurface = context['multiSurface'];\n    var surface = context['surface'];\n    var multiCurve = context['multiCurve'];\n    var nodeName;\n\n    if (!Array.isArray(value)) {\n      nodeName =\n      /** @type {import(\"../geom/Geometry.js\").default} */\n      value.getType();\n\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML2.prototype.writeFeatureElement = function (node, feature, objectStack) {\n    var fid = feature.getId();\n\n    if (fid) {\n      node.setAttribute('fid',\n      /** @type {string} */\n      fid);\n    }\n\n    var context =\n    /** @type {Object} */\n    objectStack[objectStack.length - 1];\n    var featureNS = context['featureNS'];\n    var geometryName = feature.getGeometryName();\n\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n\n    var keys = [];\n    var values = [];\n\n    if (feature.hasProperties()) {\n      var properties = feature.getProperties();\n\n      for (var key in properties) {\n        var value = properties[key];\n\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n\n          if (key == geometryName || typeof\n          /** @type {?} */\n          value.getSimplifiedGeometry === 'function') {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(this.writeGeometryElement, this);\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    item, context.serializers, makeSimpleNodeFactory(undefined, featureNS), values, objectStack, keys);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML2.prototype.writeCurveOrLineString = function (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    if (node.nodeName === 'LineString' || node.nodeName === 'LineStringSegment') {\n      var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      var segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML2.prototype.writeLineStringOrCurveMember = function (node, line, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML2.prototype.writeMultiCurveOrLineString = function (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var curve = context['curve'];\n\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    var lines = geometry.getLineStrings();\n    pushSerializeAndPop({\n      node: node,\n      hasZ: hasZ,\n      srsName: srsName,\n      curve: curve\n    }, this.LINESTRINGORCURVEMEMBER_SERIALIZERS, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines, objectStack, undefined, this);\n  };\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML2.prototype.writeGeometryElement = function (node, geometry, objectStack) {\n    var context =\n    /** @type {import(\"./Feature.js\").WriteOptions} */\n    objectStack[objectStack.length - 1];\n    var item = assign({}, context);\n    item['node'] = node;\n    var value;\n\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n      /** @type {import(\"../extent.js\").Extent} */\n      geometry, context);\n    } else {\n      value = transformGeometryWithOptions(\n      /** @type {import(\"../geom/Geometry.js\").default} */\n      geometry, true, context);\n    }\n\n    pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    item, this.GEOMETRY_SERIALIZERS, this.GEOMETRY_NODE_FACTORY_, [value], objectStack, undefined, this);\n  };\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n\n\n  GML2.prototype.createCoordinatesNode_ = function (namespaceURI) {\n    var coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n    return coordinates;\n  };\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n\n\n  GML2.prototype.writeCoordinates_ = function (node, value, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName']; // only 2d for simple features profile\n\n    var points = value.getCoordinates();\n    var len = points.length;\n    var parts = new Array(len);\n\n    for (var i = 0; i < len; ++i) {\n      var point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n\n    writeStringTextNode(node, parts.join(' '));\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n\n\n  GML2.prototype.writeCurveSegments_ = function (node, line, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML2.prototype.writeSurfaceOrPolygon = function (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      var rings = geometry.getLinearRings();\n      pushSerializeAndPop({\n        node: node,\n        hasZ: hasZ,\n        srsName: srsName\n      }, this.RING_SERIALIZERS, this.RING_NODE_FACTORY_, rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      var patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  };\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [opt_nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n\n\n  GML2.prototype.RING_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var exteriorWritten = context['exteriorWritten'];\n\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n\n    return createElementNS(parentNode.namespaceURI, exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n\n\n  GML2.prototype.writeSurfacePatches_ = function (node, polygon, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML2.prototype.writeRing = function (node, ring, objectStack) {\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  };\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [opt_srsName] Optional srsName\n   * @param {boolean} [opt_hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n\n\n  GML2.prototype.getCoords_ = function (point, opt_srsName, opt_hasZ) {\n    var axisOrientation = 'enu';\n\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n\n    var coords = axisOrientation.substr(0, 2) === 'en' ? point[0] + ',' + point[1] : point[1] + ',' + point[0];\n\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML2.prototype.writePoint = function (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    var point = geometry.getCoordinates();\n    var coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML2.prototype.writeMultiPoint = function (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    var points = geometry.getPoints();\n    pushSerializeAndPop({\n      node: node,\n      hasZ: hasZ,\n      srsName: srsName\n    }, this.POINTMEMBER_SERIALIZERS, makeSimpleNodeFactory('pointMember'), points, objectStack, undefined, this);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML2.prototype.writePointMember = function (node, point, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML2.prototype.writeLinearRing = function (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML2.prototype.writeMultiSurfaceOrPolygon = function (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var surface = context['surface'];\n\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    var polygons = geometry.getPolygons();\n    pushSerializeAndPop({\n      node: node,\n      hasZ: hasZ,\n      srsName: srsName,\n      surface: surface\n    }, this.SURFACEORPOLYGONMEMBER_SERIALIZERS, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons, objectStack, undefined, this);\n  };\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML2.prototype.writeSurfaceOrPolygonMember = function (node, polygon, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML2.prototype.writeEnvelope = function (node, extent, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    var keys = ['lowerCorner', 'upperCorner'];\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    {\n      node: node\n    }, this.ENVELOPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, keys, this);\n  };\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [opt_nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n\n\n  GML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS('http://www.opengis.net/gml', MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  };\n\n  return GML2;\n}(GMLBase);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(GML2.prototype.writeLineStringOrCurveMember),\n    'curveMember': makeChildAppender(GML2.prototype.writeLineStringOrCurveMember)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember),\n    'polygonMember': makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\nexport default GML2;","map":{"version":3,"mappings":"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","names":["GMLBase","GMLNS","OBJECT_PROPERTY_NODE_FACTORY","createElementNS","getAllTextContent","makeArrayPusher","makeChildAppender","makeReplacer","makeSimpleNodeFactory","pushParseAndPop","pushSerializeAndPop","assign","createOrUpdate","get","getProjection","transformExtentWithOptions","transformGeometryWithOptions","writeStringTextNode","schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","__extends","opt_options","options","_super","_this","FEATURE_COLLECTION_PARSERS","readFeaturesInternal","GML2","node","objectStack","s","replace","context","containerSrs","axisOrientation","proj","getAxisOrientation","coordsGroups","trim","split","flatCoordinates","i","ii","length","coords","x","parseFloat","y","z","substr","push","BOX_PARSERS_","flatLinearRing","undefined","RING_PARSERS","flatLinearRings","value","opt_nodeName","multiSurface","surface","multiCurve","nodeName","Array","isArray","getType","feature","fid","getId","setAttribute","featureNS","geometryName","getGeometryName","serializers","keys","values","hasProperties","properties","getProperties","key","getSimplifiedGeometry","writeGeometryElement","item","geometry","srsName","coordinates","createCoordinatesNode_","namespaceURI","appendChild","writeCoordinates_","segments","writeCurveSegments_","line","child","GEOMETRY_NODE_FACTORY_","writeCurveOrLineString","hasZ","curve","lines","getLineStrings","LINESTRINGORCURVEMEMBER_SERIALIZERS","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS","points","getCoordinates","len","parts","point","getCoords_","join","rings","getLinearRings","RING_SERIALIZERS","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","polygon","writeSurfaceOrPolygon","ring","linearRing","writeLinearRing","opt_srsName","opt_hasZ","coord","getPoints","POINTMEMBER_SERIALIZERS","writePoint","polygons","getPolygons","SURFACEORPOLYGONMEMBER_SERIALIZERS","extent","ENVELOPE_SERIALIZERS","prototype","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinates","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIsParser","outerBoundaryIsParser","GEOMETRY_PARSERS","readPoint","readMultiPoint","readLineString","readMultiLineString","readLinearRing","readPolygon","readMultiPolygon","readBox","writeMultiCurveOrLineString","writeMultiPoint","writeMultiSurfaceOrPolygon","writeEnvelope","writeLineStringOrCurveMember","writeRing","writePointMember","writeSurfaceOrPolygonMember"],"sourceRoot":"","sources":["../src/format/GML2.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}