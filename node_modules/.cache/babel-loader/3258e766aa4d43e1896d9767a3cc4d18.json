{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.sort.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\n\n\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED } from './common.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as toTransformString } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { containsCoordinate, createEmpty, equals, getIntersection, getTopLeft, intersects } from '../../extent.js';\nimport { cssOpacity } from '../../css.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { toSize } from '../../size.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\n\nvar CanvasTileLayerRenderer =\n/** @class */\nfunction (_super) {\n  __extends(CanvasTileLayerRenderer, _super);\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n\n\n  function CanvasTileLayerRenderer(tileLayer) {\n    var _this = _super.call(this, tileLayer) || this;\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n\n\n    _this.extentChanged = true;\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n\n    _this.renderedExtent_ = null;\n    /**\n     * @protected\n     * @type {number}\n     */\n\n    _this.renderedPixelRatio;\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n\n    _this.renderedProjection = null;\n    /**\n     * @protected\n     * @type {number}\n     */\n\n    _this.renderedRevision;\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n\n    _this.renderedTiles = [];\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.newTiles_ = false;\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n    _this.tmpExtent = createEmpty();\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n\n    _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n    return _this;\n  }\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n\n\n  CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n    var tileLayer = this.getLayer();\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED || tileState == TileState.EMPTY || tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n\n\n  CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n    var pixelRatio = frameState.pixelRatio;\n    var projection = frameState.viewState.projection;\n    var tileLayer = this.getLayer();\n    var tileSource = tileLayer.getSource();\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n\n    return tile;\n  };\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n\n\n  CanvasTileLayerRenderer.prototype.getData = function (pixel) {\n    var frameState = this.frameState;\n\n    if (!frameState) {\n      return null;\n    }\n\n    var layer = this.getLayer();\n    var coordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    var layerExtent = layer.getExtent();\n\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    var pixelRatio = frameState.pixelRatio;\n    var projection = frameState.viewState.projection;\n    var viewState = frameState.viewState;\n    var source = layer.getRenderSource();\n    var tileGrid = source.getTileGridForProjection(viewState.projection);\n    var tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (var z = tileGrid.getZForResolution(viewState.resolution); z >= tileGrid.getMinZoom(); --z) {\n      var tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      var tile = source.getTile(z, tileCoord[1], tileCoord[2], pixelRatio, projection);\n\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      var tileOrigin = tileGrid.getOrigin(z);\n      var tileSize = toSize(tileGrid.getTileSize(z));\n      var tileResolution = tileGrid.getResolution(z);\n      var col = Math.floor(tilePixelRatio * ((coordinate[0] - tileOrigin[0]) / tileResolution - tileCoord[1] * tileSize[0]));\n      var row = Math.floor(tilePixelRatio * ((tileOrigin[1] - coordinate[1]) / tileResolution - tileCoord[2] * tileSize[1]));\n      return this.getImageData(tile.getImage(), col, row);\n    }\n\n    return null;\n  };\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n\n\n  CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n    }\n\n    return false;\n  };\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n\n\n  CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n    return !!this.getLayer().getSource();\n  };\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n\n\n  CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n    var layerState = frameState.layerStatesArray[frameState.layerIndex];\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n    var rotation = viewState.rotation;\n    var pixelRatio = frameState.pixelRatio;\n    var tileLayer = this.getLayer();\n    var tileSource = tileLayer.getSource();\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var extent = frameState.extent;\n    var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n\n    if (layerExtent) {\n      extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n    }\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio); // desired dimensions of the canvas in pixels\n\n    var width = Math.round(frameState.size[0] * tilePixelRatio);\n    var height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      var size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    var dx = tileResolution * width / 2 / tilePixelRatio;\n    var dy = tileResolution * height / 2 / tilePixelRatio;\n    var canvasExtent = [viewCenter[0] - dx, viewCenter[1] - dy, viewCenter[0] + dx, viewCenter[1] + dy];\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n    var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        var tile = this.getTile(z, x, y, frameState);\n\n        if (this.isDrawableTile(tile)) {\n          var uid = getUid(this);\n\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n        }\n      }\n    }\n\n    var canvasScale = tileResolution / viewResolution; // set forward and inverse pixel transforms\n\n    composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n    var canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, layerState.opacity, this.getBackground(frameState));\n    var context = this.context;\n    var canvas = context.canvas;\n    makeInverse(this.inversePixelTransform, this.pixelTransform); // set scale transform for calculating tile positions on the canvas\n\n    composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n\n    var zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n    var clips, clipZs, currentClip;\n\n    if (layerState.opacity === 1 && (!this.containerReused || tileSource.getOpaque(frameState.viewState.projection))) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n\n    for (var i = zs.length - 1; i >= 0; --i) {\n      var currentZ = zs[i];\n      var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n      var currentResolution = tileGrid.getResolution(currentZ);\n      var currentScale = currentResolution / tileResolution;\n      var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n      var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n      var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n      var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      var origin_1 = applyTransform(this.tempTransform, [tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution, tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution]);\n      var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n      var tilesToDraw = tilesToDrawByZ[currentZ];\n\n      for (var tileCoordKey in tilesToDraw) {\n        var tile =\n        /** @type {import(\"../../ImageTile.js\").default} */\n        tilesToDraw[tileCoordKey];\n        var tileCoord = tile.tileCoord; // Calculate integer positions and sizes so that tiles align\n\n        var xIndex = originTileCoord[1] - tileCoord[1];\n        var nextX = Math.round(origin_1[0] - (xIndex - 1) * dx_1);\n        var yIndex = originTileCoord[2] - tileCoord[2];\n        var nextY = Math.round(origin_1[1] - (yIndex - 1) * dy_1);\n        var x = Math.round(origin_1[0] - xIndex * dx_1);\n        var y = Math.round(origin_1[1] - yIndex * dy_1);\n        var w = nextX - x;\n        var h = nextY - y;\n        var transition = z === currentZ;\n        var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        var contextSaved = false;\n\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n\n            for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n              if (z !== currentZ && currentZ < clipZs[i_1]) {\n                var clip = clips[i_1];\n\n                if (intersects([x, y, x + w, y + h], [clip[0], clip[3], clip[4], clip[7]])) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n\n                  context.beginPath(); // counter-clockwise (outer ring) for current tile\n\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]); // clockwise (inner ring) for higher z tile\n\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n\n        this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition);\n\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    var opacity = cssOpacity(layerState.opacity);\n    var container = this.container;\n\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  };\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n\n\n  CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n\n    if (!image) {\n      return;\n    }\n\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var alphaChanged = alpha !== this.context.globalAlpha;\n\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n\n    this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n\n\n  CanvasTileLayerRenderer.prototype.getImage = function () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n\n\n  CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n    return tile.getImage();\n  };\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n\n\n  CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function (tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n      /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */\n      postRenderFunction);\n    }\n  };\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n\n\n  CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  };\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n\n\n  CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n    var tileSourceKey = getUid(tileSource);\n\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tileCount = 0;\n    var tile, tileRange, tileResolution, x, y, z;\n\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey, tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n\n    tileSource.updateCacheSize(tileCount, projection);\n  };\n\n  return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer);\n\nexport default CanvasTileLayerRenderer;","map":{"version":3,"mappings":"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","names":["CanvasLayerRenderer","ImageTile","ReprojTile","TileRange","TileState","IMAGE_SMOOTHING_DISABLED","IMAGE_SMOOTHING_ENABLED","apply","applyTransform","compose","composeTransform","makeInverse","toString","toTransformString","assign","containsCoordinate","createEmpty","equals","getIntersection","getTopLeft","intersects","cssOpacity","fromUserExtent","getUid","numberSafeCompareFunction","toSize","__extends","tileLayer","_super","_this","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","CanvasTileLayerRenderer","tile","getLayer","tileState","getState","useInterimTilesOnError","getUseInterimTilesOnError","LOADED","EMPTY","ERROR","z","x","y","frameState","pixelRatio","projection","viewState","tileSource","getSource","getTile","setState","getPreload","isDrawableTile","getInterimTile","pixel","layer","coordinate","pixelToCoordinateTransform","slice","layerExtent","getExtent","source","getRenderSource","tileGrid","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getZForResolution","resolution","getMinZoom","tileCoord","getTileCoordForCoordAndZ","tileOrigin","getOrigin","tileSize","getTileSize","tileResolution","getResolution","col","Math","floor","row","getImageData","getImage","tiles","zoom","loadedTileCallback","call","target","layerState","layerStatesArray","layerIndex","viewResolution","viewCenter","center","rotation","sourceRevision","getRevision","zDirection","extent","width","round","size","height","sqrt","dx","dy","canvasExtent","tileRange","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","minX","maxX","minY","maxY","uid","inTransition","indexOf","getAlpha","time","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","pixelTransform","canvasTransform","useContainer","opacity","getBackground","context","canvas","inversePixelTransform","tempTransform","containerReused","clearRect","clipUnrotated","getInterpolate","preRender","length","zs","Object","keys","map","Number","sort","clips","clipZs","currentClip","getOpaque","reverse","i","currentZ","currentTilePixelSize","getTilePixelSize","currentResolution","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","w","h","transition","contextSaved","i_1","ii","clip","save","beginPath","moveTo","lineTo","push","drawTileImage","restore","unshift","updateUsedTiles","usedTiles","renderedResolution","manageTilePyramid","scheduleExpireCache","postRender","style","transform","container","gutter","image","getTileImage","alpha","alphaChanged","globalAlpha","drawImage","animate","endTransition","canExpireCache","postRenderFunction","tileSourceKey","expireCache","bind","postRenderFunctions","getKey","preload","opt_tileCallback","wantedTiles","tileQueue","minZoom","tileCount","IDLE","isKeyQueued","enqueue","getTileCoordCenter","undefined","useTile","updateCacheSize"],"sourceRoot":"","sources":["../../src/renderer/canvas/TileLayer.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}