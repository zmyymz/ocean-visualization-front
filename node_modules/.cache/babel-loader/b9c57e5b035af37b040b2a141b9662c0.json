{"ast":null,"code":"import _typeof from \"D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.join.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Modify\n */\n\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { altKeyOnly, always, primaryAction, singleClick } from '../events/condition.js';\nimport { boundingExtent, buffer as bufferExtent, createOrUpdateFromCoordinate as createExtent } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, equals as coordinatesEqual, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { equals, includes } from '../array.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport { fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent } from '../proj.js';\nimport { getUid } from '../util.js';\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\n\nvar CIRCLE_CENTER_INDEX = 0;\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\n\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\nvar tempExtent = [0, 0, 0, 0];\nvar tempSegment = [];\n/**\n * @enum {string}\n */\n\nvar ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {import(\"../Feature\").FeatureLike} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\n\nvar ModifyEvent =\n/** @class */\nfunction (_super) {\n  __extends(ModifyEvent, _super);\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<import(\"../Feature\").FeatureLike>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n\n\n  function ModifyEvent(type, features, mapBrowserEvent) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The features being modified.\n     * @type {Collection<import(\"../Feature\").FeatureLike>}\n     * @api\n     */\n\n\n    _this.features = features;\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n\n    _this.mapBrowserEvent = mapBrowserEvent;\n    return _this;\n  }\n\n  return ModifyEvent;\n}(Event);\n\nexport { ModifyEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\n\nvar Modify =\n/** @class */\nfunction (_super) {\n  __extends(Modify, _super);\n  /**\n   * @param {Options} options Options.\n   */\n\n\n  function Modify(options) {\n    var _this = _super.call(this,\n    /** @type {import(\"./Pointer.js\").Options} */\n    options) || this;\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n\n\n    _this.on;\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n\n    _this.un;\n    /** @private */\n\n    _this.boundHandleFeatureChange_ = _this.handleFeatureChange_.bind(_this);\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    _this.condition_ = options.condition ? options.condition : primaryAction;\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n\n    _this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n\n\n    _this.deleteCondition_ = options.deleteCondition ? options.deleteCondition : _this.defaultDeleteCondition_;\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n\n    _this.insertVertexCondition_ = options.insertVertexCondition ? options.insertVertexCondition : always;\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n\n    _this.vertexFeature_ = null;\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n\n    _this.vertexSegments_ = null;\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n\n    _this.lastPixel_ = [0, 0];\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n\n    _this.ignoreNextSingleClick_ = false;\n    /**\n     * @type {Collection<import(\"../Feature\").FeatureLike>}\n     * @private\n     */\n\n    _this.featuresBeingModified_ = null;\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n\n    _this.rBush_ = new RBush();\n    /**\n     * @type {number}\n     * @private\n     */\n\n    _this.pixelTolerance_ = options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n    /**\n     * @type {boolean}\n     * @private\n     */\n\n    _this.snappedToVertex_ = false;\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n\n    _this.changingFeature_ = false;\n    /**\n     * @type {Array}\n     * @private\n     */\n\n    _this.dragSegments_ = [];\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n\n    _this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n\n    _this.SEGMENT_WRITERS_ = {\n      'Point': _this.writePointGeometry_.bind(_this),\n      'LineString': _this.writeLineStringGeometry_.bind(_this),\n      'LinearRing': _this.writeLineStringGeometry_.bind(_this),\n      'Polygon': _this.writePolygonGeometry_.bind(_this),\n      'MultiPoint': _this.writeMultiPointGeometry_.bind(_this),\n      'MultiLineString': _this.writeMultiLineStringGeometry_.bind(_this),\n      'MultiPolygon': _this.writeMultiPolygonGeometry_.bind(_this),\n      'Circle': _this.writeCircleGeometry_.bind(_this),\n      'GeometryCollection': _this.writeGeometryCollectionGeometry_.bind(_this)\n    };\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n\n    _this.source_ = null;\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n\n    _this.hitDetection_ = null;\n    var features;\n\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      _this.source_ = options.source;\n      features = new Collection(_this.source_.getFeatures());\n\n      _this.source_.addEventListener(VectorEventType.ADDFEATURE, _this.handleSourceAdd_.bind(_this));\n\n      _this.source_.addEventListener(VectorEventType.REMOVEFEATURE, _this.handleSourceRemove_.bind(_this));\n    }\n\n    if (!features) {\n      throw new Error('The modify interaction requires features, a source or a layer');\n    }\n\n    if (options.hitDetection) {\n      _this.hitDetection_ = options.hitDetection;\n    }\n    /**\n     * @type {Collection<import(\"../Feature.js\").FeatureLike>}\n     * @private\n     */\n\n\n    _this.features_ = features;\n\n    _this.features_.forEach(_this.addFeature_.bind(_this));\n\n    _this.features_.addEventListener(CollectionEventType.ADD, _this.handleFeatureAdd_.bind(_this));\n\n    _this.features_.addEventListener(CollectionEventType.REMOVE, _this.handleFeatureRemove_.bind(_this));\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n\n\n    _this.lastPointerEvent_ = null;\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n\n    _this.delta_ = [0, 0];\n    /**\n     * @private\n     */\n\n    _this.snapToPointer_ = options.snapToPointer === undefined ? !_this.hitDetection_ : options.snapToPointer;\n    return _this;\n  }\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n\n\n  Modify.prototype.addFeature_ = function (feature) {\n    var geometry = feature.getGeometry();\n\n    if (geometry) {\n      var writer = this.SEGMENT_WRITERS_[geometry.getType()];\n\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n\n    var map = this.getMap();\n\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n\n\n  Modify.prototype.willModifyFeatures_ = function (evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      var features = this.featuresBeingModified_.getArray();\n\n      for (var i = 0, ii = segments.length; i < ii; ++i) {\n        var segment = segments[i];\n\n        for (var s = 0, ss = segment.length; s < ss; ++s) {\n          var feature = segment[s].feature;\n\n          if (feature && features.indexOf(feature) === -1) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.featuresBeingModified_, evt));\n      }\n    }\n  };\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n\n\n  Modify.prototype.removeFeature_ = function (feature) {\n    this.removeFeatureSegmentData_(feature); // Remove the vertex feature if the collection of candidate features is empty.\n\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n\n    feature.removeEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  };\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n\n\n  Modify.prototype.removeFeatureSegmentData_ = function (feature) {\n    var rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n\n    var nodesToRemove = [];\n    rBush.forEach(\n    /**\n     * @param {SegmentData} node RTree node.\n     */\n    function (node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n\n    for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n      var nodeToRemove = nodesToRemove[i];\n\n      for (var j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n\n      rBush.remove(nodeToRemove);\n    }\n  };\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n\n\n  Modify.prototype.setActive = function (active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n\n    _super.prototype.setActive.call(this, active);\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n\n\n  Modify.prototype.setMap = function (map) {\n    this.overlay_.setMap(map);\n\n    _super.prototype.setMap.call(this, map);\n  };\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n\n\n  Modify.prototype.getOverlay = function () {\n    return this.overlay_;\n  };\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n\n\n  Modify.prototype.handleSourceAdd_ = function (event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  };\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n\n\n  Modify.prototype.handleSourceRemove_ = function (event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n\n\n  Modify.prototype.handleFeatureAdd_ = function (evt) {\n    this.addFeature_(\n    /** @type {Feature} */\n    evt.element);\n  };\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n\n\n  Modify.prototype.handleFeatureChange_ = function (evt) {\n    if (!this.changingFeature_) {\n      var feature =\n      /** @type {Feature} */\n      evt.target;\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n\n\n  Modify.prototype.handleFeatureRemove_ = function (evt) {\n    var feature =\n    /** @type {Feature} */\n    evt.element;\n    this.removeFeature_(feature);\n  };\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n\n\n  Modify.prototype.writePointGeometry_ = function (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    /** @type {SegmentData} */\n\n    var segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    };\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n\n\n  Modify.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n    var points = geometry.getCoordinates();\n\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      /** @type {SegmentData} */\n\n      var segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      };\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n\n\n  Modify.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      /** @type {SegmentData} */\n\n      var segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n\n\n  Modify.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n    var lines = geometry.getCoordinates();\n\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        /** @type {SegmentData} */\n\n        var segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n\n\n  Modify.prototype.writePolygonGeometry_ = function (feature, geometry) {\n    var rings = geometry.getCoordinates();\n\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        /** @type {SegmentData} */\n\n        var segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n\n\n  Modify.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n    var polygons = geometry.getCoordinates();\n\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          /** @type {SegmentData} */\n\n          var segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          };\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n\n\n  Modify.prototype.writeCircleGeometry_ = function (feature, geometry) {\n    var coordinates = geometry.getCenter();\n    /** @type {SegmentData} */\n\n    var centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    };\n    /** @type {SegmentData} */\n\n    var circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    };\n    var featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    var circleGeometry =\n    /** @type {import(\"../geom/Geometry.js\").default} */\n    geometry;\n    var userProjection = getUserProjection();\n\n    if (userProjection && this.getMap()) {\n      var projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry.clone().transform(userProjection, projection);\n      circleGeometry = fromCircle(\n      /** @type {import(\"../geom/Circle.js\").default} */\n      circleGeometry).transform(projection, userProjection);\n    }\n\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  };\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n\n\n  Modify.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n    var geometries = geometry.getGeometriesArray();\n\n    for (var i = 0; i < geometries.length; ++i) {\n      var geometry_1 = geometries[i];\n      var writer = this.SEGMENT_WRITERS_[geometry_1.getType()];\n      writer(feature, geometry_1);\n    }\n  };\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<import(\"../Feature\").FeatureLike>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n\n\n  Modify.prototype.createOrUpdateVertexFeature_ = function (coordinates, features, geometries) {\n    var vertexFeature = this.vertexFeature_;\n\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  };\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n\n\n  Modify.prototype.handleEvent = function (mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    this.lastPointerEvent_ = mapBrowserEvent;\n    var handled;\n\n    if (!mapBrowserEvent.map.getView().getInteracting() && mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return _super.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n  };\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n\n\n  Modify.prototype.handleDragEvent = function (evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n    var vertex = [evt.coordinate[0] + this.delta_[0], evt.coordinate[1] + this.delta_[1]];\n    var features = [];\n    var geometries = [];\n\n    for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      var dragSegment = this.dragSegments_[i];\n      var segmentData = dragSegment[0];\n      var feature = segmentData.feature;\n\n      if (features.indexOf(feature) === -1) {\n        features.push(feature);\n      }\n\n      var geometry = segmentData.geometry;\n\n      if (geometries.indexOf(geometry) === -1) {\n        geometries.push(geometry);\n      }\n\n      var depth = segmentData.depth;\n      var coordinates = void 0;\n      var segment = segmentData.segment;\n      var index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n\n        case GeometryType.CIRCLE:\n          segment[0] = vertex;\n          segment[1] = vertex;\n\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            var projection = evt.map.getView().getProjection();\n            var radius = coordinateDistance(fromUserCoordinate(geometry.getCenter(), projection), fromUserCoordinate(vertex, projection));\n            var userProjection = getUserProjection();\n\n            if (userProjection) {\n              var circleGeometry = geometry.clone().transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry.transform(projection, userProjection).getRadius();\n            }\n\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n\n          break;\n\n        default: // pass\n\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  Modify.prototype.handleDownEvent = function (evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n\n    var pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    var vertexFeature = this.vertexFeature_;\n\n    if (vertexFeature) {\n      var projection = evt.map.getView().getProjection();\n      var insertVertices = [];\n      var vertex = vertexFeature.getGeometry().getCoordinates();\n      var vertexExtent = boundingExtent([vertex]);\n      var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      var componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n\n      for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        var segmentDataMatch = segmentDataMatches[i];\n        var segment = segmentDataMatch.segment;\n        var uid = getUid(segmentDataMatch.geometry);\n        var depth = segmentDataMatch.depth;\n\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE && segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n          var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch, projection);\n\n          if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n\n          continue;\n        }\n\n        if (coordinatesEqual(segment[0], vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (coordinatesEqual(segment[1], vertex) && !componentSegments[uid][1]) {\n          // prevent dragging closed linestrings by the connecting node\n          if ((segmentDataMatch.geometry.getType() === GeometryType.LINE_STRING || segmentDataMatch.geometry.getType() === GeometryType.MULTI_LINE_STRING) && componentSegments[uid][0] && componentSegments[uid][0].index === 0) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (getUid(segment) in this.vertexSegments_ && !componentSegments[uid][0] && !componentSegments[uid][1] && this.insertVertexCondition_(evt)) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (var j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n\n    return !!this.vertexFeature_;\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  Modify.prototype.handleUpEvent = function (evt) {\n    for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n      var segmentData = this.dragSegments_[i][0];\n      var geometry = segmentData.geometry;\n\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        var coordinates = geometry.getCenter();\n        var centerSegmentData = segmentData.featureSegments[0];\n        var circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        var circleGeometry = geometry;\n        var userProjection = getUserProjection();\n\n        if (userProjection) {\n          var projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry.clone().transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(projection, userProjection);\n        }\n\n        this.rBush_.update(circleGeometry.getExtent(), circumferenceSegmentData);\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.featuresBeingModified_, evt));\n      this.featuresBeingModified_ = null;\n    }\n\n    return false;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n\n\n  Modify.prototype.handlePointerMove_ = function (evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  };\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_coordinate] The pixel Coordinate.\n   * @private\n   */\n\n\n  Modify.prototype.handlePointerAtPixel_ = function (pixel, map, opt_coordinate) {\n    var _this = this;\n\n    var pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\n    var projection = map.getView().getProjection();\n\n    var sortByDistance = function sortByDistance(a, b) {\n      return projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) - projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection);\n    };\n    /** @type {Array<SegmentData>|undefined} */\n\n\n    var nodes;\n    var hitPointGeometry;\n\n    if (this.hitDetection_) {\n      var layerFilter = _typeof(this.hitDetection_) === 'object' ? function (layer) {\n        return layer === _this.hitDetection_;\n      } : undefined;\n      map.forEachFeatureAtPixel(pixel, function (feature, layer, geometry) {\n        geometry = geometry ||\n        /** @type {import(\"../geom/SimpleGeometry\").default} */\n        feature.getGeometry();\n\n        if (geometry.getType() === GeometryType.POINT && includes(_this.features_.getArray(), feature)) {\n          hitPointGeometry = geometry;\n          var coordinate = geometry.getFlatCoordinates().slice(0, 2);\n          nodes = [{\n            feature: feature,\n            geometry: geometry,\n            segment: [coordinate, coordinate]\n          }];\n        }\n\n        return true;\n      }, {\n        layerFilter: layerFilter\n      });\n    }\n\n    if (!nodes) {\n      var viewExtent = fromUserExtent(createExtent(pixelCoordinate, tempExtent), projection);\n      var buffer = map.getView().getResolution() * this.pixelTolerance_;\n      var box = toUserExtent(bufferExtent(viewExtent, buffer, tempExtent), projection);\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      var node = nodes.sort(sortByDistance)[0];\n      var closestSegment = node.segment;\n      var vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n      var dist = coordinateDistance(pixel, vertexPixel);\n\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        var vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n\n        if (node.geometry.getType() === GeometryType.CIRCLE && node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex, [node.feature], [node.geometry]);\n        } else {\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n\n          this.createOrUpdateVertexFeature_(vertex, [node.feature], [node.geometry]);\n          var geometries = {};\n          geometries[getUid(node.geometry)] = true;\n\n          for (var i = 1, ii = nodes.length; i < ii; ++i) {\n            var segment = nodes[i].segment;\n\n            if (coordinatesEqual(closestSegment[0], segment[0]) && coordinatesEqual(closestSegment[1], segment[1]) || coordinatesEqual(closestSegment[0], segment[1]) && coordinatesEqual(closestSegment[1], segment[0])) {\n              var geometryUid = getUid(nodes[i].geometry);\n\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  };\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n\n\n  Modify.prototype.insertVertex_ = function (segmentData, vertex) {\n    var segment = segmentData.segment;\n    var feature = segmentData.feature;\n    var geometry = segmentData.geometry;\n    var depth = segmentData.depth;\n    var index = segmentData.index;\n    var coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    var rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    /** @type {SegmentData} */\n\n    var newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    };\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n    /** @type {SegmentData} */\n\n    var newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    };\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  };\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n\n\n  Modify.prototype.removePoint = function () {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      var evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      var removed = this.removeVertex_();\n\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.featuresBeingModified_, evt));\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n\n    return false;\n  };\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n\n\n  Modify.prototype.removeVertex_ = function () {\n    var dragSegments = this.dragSegments_;\n    var segmentsByFeature = {};\n    var deleted = false;\n    var component, coordinates, dragSegment, geometry, i, index, left;\n    var newIndex, right, segmentData, uid;\n\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n\n          break;\n\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n\n          break;\n\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n\n        /* falls through */\n\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n\n            component.splice(index, 1);\n            deleted = true;\n\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n\n          break;\n\n        default: // pass\n\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        var segments = [];\n\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          var newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          };\n          this.rBush_.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n        }\n\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n\n        dragSegments.length = 0;\n      }\n    }\n\n    return deleted;\n  };\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n\n\n  Modify.prototype.setGeometryCoordinates_ = function (geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  };\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n\n\n  Modify.prototype.updateSegmentIndices_ = function (geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function (segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry && (depth === undefined || segmentDataMatch.depth === undefined || equals(segmentDataMatch.depth, depth)) && segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  };\n\n  return Modify;\n}(PointerInteraction);\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\n\n\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\n\n\nfunction projectedDistanceToSegmentDataSquared(pointCoordinates, segmentData, projection) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    var circleGeometry =\n    /** @type {import(\"../geom/Circle.js\").default} */\n    geometry;\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      var userProjection = getUserProjection();\n\n      if (userProjection) {\n        circleGeometry =\n        /** @type {import(\"../geom/Circle.js\").default} */\n        circleGeometry.clone().transform(userProjection, projection);\n      }\n\n      var distanceToCenterSquared = squaredCoordinateDistance(circleGeometry.getCenter(), fromUserCoordinate(pointCoordinates, projection));\n      var distanceToCircumference = Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  var coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\n\n\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE && segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    var circleGeometry =\n    /** @type {import(\"../geom/Circle.js\").default} */\n    geometry;\n    var userProjection = getUserProjection();\n\n    if (userProjection) {\n      circleGeometry =\n      /** @type {import(\"../geom/Circle.js\").default} */\n      circleGeometry.clone().transform(userProjection, projection);\n    }\n\n    return toUserCoordinate(circleGeometry.getClosestPoint(fromUserCoordinate(pointCoordinates, projection)), projection);\n  }\n\n  var coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(closestOnSegment(coordinate, tempSegment), projection);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\n\n\nfunction getDefaultStyleFunction() {\n  var style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\nexport default Modify;","map":{"version":3,"mappings":"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","names":["Collection","CollectionEventType","Event","EventType","Feature","GeometryType","MapBrowserEventType","Point","PointerInteraction","RBush","VectorEventType","VectorLayer","VectorSource","altKeyOnly","always","primaryAction","singleClick","boundingExtent","buffer","bufferExtent","createOrUpdateFromCoordinate","createExtent","closestOnSegment","distance","coordinateDistance","equals","coordinatesEqual","squaredDistance","squaredCoordinateDistance","squaredDistanceToSegment","createEditingStyle","includes","fromCircle","fromUserCoordinate","fromUserExtent","getUserProjection","toUserCoordinate","toUserExtent","getUid","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","tempExtent","tempSegment","ModifyEventType","MODIFYSTART","MODIFYEND","__extends","type","features","mapBrowserEvent","_super","_this","options","on","once","un","boundHandleFeatureChange_","handleFeatureChange_","bind","condition_","condition","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","pixelTolerance_","pixelTolerance","undefined","snappedToVertex_","changingFeature_","dragSegments_","overlay_","source","useSpatialIndex","wrapX","style","getDefaultStyleFunction","updateWhileAnimating","updateWhileInteracting","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","source_","hitDetection_","getFeatures","addEventListener","ADDFEATURE","handleSourceAdd_","REMOVEFEATURE","handleSourceRemove_","Error","hitDetection","features_","forEach","addFeature_","ADD","handleFeatureAdd_","REMOVE","handleFeatureRemove_","lastPointerEvent_","delta_","snapToPointer_","snapToPointer","Modify","feature","geometry","getGeometry","writer","getType","map","getMap","isRendered","getActive","handlePointerAtPixel_","CHANGE","evt","segments","getArray","i","ii","length","segment","s","ss","indexOf","push","getLength","dispatchEvent","ModifyEvent","removeFeatureSegmentData_","getSource","removeFeature","removeEventListener","rBush","nodesToRemove","node","nodeToRemove","j","splice","remove","active","setActive","call","setMap","event","element","target","removeFeature_","coordinates","getCoordinates","segmentData","insert","getExtent","points","depth","index","slice","lines","jj","rings","polygons","k","kk","getCenter","centerSegmentData","circumferenceSegmentData","featureSegments","circleGeometry","userProjection","projection","getView","getProjection","clone","transform","geometries","getGeometriesArray","geometry_1","vertexFeature","addFeature","setCoordinates","set","originalEvent","handled","getInteracting","POINTERMOVE","handlingDownUpSequence","handlePointerMove_","SINGLECLICK","removePoint","handleEvent","willModifyFeatures_","vertex","coordinate","dragSegment","getStride","POINT","MULTI_POINT","LINE_STRING","MULTI_LINE_STRING","POLYGON","MULTI_POLYGON","CIRCLE","setCenter","radius","setRadius","getRadius","setGeometryCoordinates_","createOrUpdateVertexFeature_","pixelCoordinate","pixel","insertVertices","vertexExtent","segmentDataMatches","getInExtent","componentSegments","sort","compareIndexes","segmentDataMatch","uid","join","Array","closestVertex","closestOnSegmentData","insertVertex_","update","opt_coordinate","getCoordinateFromPixel","sortByDistance","a","b","projectedDistanceToSegmentDataSquared","nodes","hitPointGeometry","layerFilter","layer","forEachFeatureAtPixel","getFlatCoordinates","viewExtent","getResolution","box","closestSegment","vertexPixel","getPixelFromCoordinate","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","Math","sqrt","min","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","POINTERDRAG","removed","removeVertex_","dragSegments","segmentsByFeature","deleted","component","left","newIndex","right","pop","delta","forEachInExtent","pointCoordinates","distanceToCenterSquared","distanceToCircumference","getClosestPoint","resolution"],"sourceRoot":"","sources":["../src/interaction/Modify.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}