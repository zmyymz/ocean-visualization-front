{"ast":null,"code":"import _Loading2 from \"element-ui/lib/theme-chalk/loading.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Loading from \"element-ui/lib/loading\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport OceanMap from \"../src/components/Map\";\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\nimport TileLayer from \"ol/layer/Tile\";\nimport XYZ from \"ol/source/XYZ\";\nimport { ScaleLine } from \"ol/control\";\nimport MousePosition from \"ol/control/MousePosition\";\nimport { fromLonLat } from \"ol/proj\";\nimport TileWMS from \"ol/source/TileWMS\";\nimport { OverviewMap, defaults as defaultControls } from \"ol/control\";\nimport { format } from \"ol/coordinate\";\nimport { isEmpty } from 'ol/extent';\nimport { isNull } from 'ol/format/filter';\nimport { FullScreen } from 'ol/control';\nimport { ZoomToExtent } from \"ol/control\";\nimport { Rotate } from \"ol/control\";\nimport { ZoomSlider } from \"ol/control\";\nimport { createStringXY, toStringHDMS } from 'ol/coordinate.js';\nimport { defaults as defaultInteractions, DragRotateAndZoom } from 'ol/interaction'; // import Legend from 'ol-ext/control/Legend';\n\nimport OlFeature from 'ol/Feature';\nimport OlGeomPoint from 'ol/geom/Point';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\nimport OlStyleStyle from 'ol/style/Style';\nimport OlStyleIcon from 'ol/style/Icon'; // 用来添加相关文字描述的\n\nimport Text from 'ol/style/Text';\nimport Fill from 'ol/style/Fill';\nexport default {\n  data() {\n    return {\n      value1: '',\n      //日期\n      value2: '',\n      //时刻\n      radio: \"\",\n      //选择的属性\n      sshList: [],\n      tempList: [],\n      swhList: [],\n      waveList: [],\n      mylayer: ``,\n      // radios:['SSH','temp','SWH','wave_direction'],\n      select1: [\"Real\", \"pred\", \"Corr\", \"Error_Before\", \"Error_After\"],\n      select2: [\"forecast\", \"predict\", \"reanalysis\", \"reanalysis-forecast\", \"reanalysis-predict\"],\n      listDic: ['v1', 'v2', 'v3', 'v4', 'v5'],\n      middle_names: [],\n      maps: [],\n      wmsLayers: [],\n      vectorLayers: [],\n      coordinates: [160, 6]\n    };\n  },\n\n  components: {\n    OceanMap\n  },\n  methods: {\n    getLocalTime(nS) {\n      return new Date(parseInt(nS) * 1000).toLocaleString().replace(/:\\d{1,2}$/, ' ');\n    },\n\n    fileSubmit() {\n      let _this = this; // this.$MessageBox.alert('请将nc文件放置到/home/user_ocean_data,然后点击确定', '提示', {\n\n\n      this.$MessageBox.alert('请将nc文件放置到/opt/temp/home/ocean/user_ocean_data/, 然后点击确定', '提示', {\n        confirmButtonText: '确定',\n        callback: action => {\n          if (action === 'confirm') {\n            const loadOption = _Loading.service({\n              fullscreen: true,\n              lock: true,\n              text: '正在处理中',\n              spinner: 'el-icon-loading',\n              background: 'rgba(0, 0, 0, 0.7)'\n            });\n\n            this.$http.get(\"api/ocean/processOceanData\").then(function (response) {\n              // console.log(response)\n              let state = response.data.success;\n\n              if (state === true) {\n                loadOption.close();\n\n                _this.$Message('上传成功');\n              } else if (state === false) {\n                loadOption.close();\n                console.log(response);\n\n                _this.$Message('发生异常 ' + response.data.message);\n              }\n            });\n          }\n        }\n      });\n    },\n\n    initMap(id) {\n      //   console.log(\"hello\")\n      let tdtLayer = new TileLayer({\n        title: \"谷歌矢量地图服务\",\n        source: new XYZ({\n          // arcgis server\n          url: 'http://localhost:8081/Ocean/{z}/{x}/{y}.png' // url: 'http://ocean-vis-http-server:8081/Ocean/{z}/{x}/{y}.png'\n          // url: 'http://map.geoq.cn/arcgis/rest/services/ChinaOnlineStreetWarm/MapServer/tile/{z}/{y}/{x}'\n          // url: 'http://t4.tianditu.com/DataServer?T=img_w&x={x}&y={y}&l={z}&tk=cbd3ea0a8f745a3699f7cd8bc68ae9b7'\n\n        })\n      });\n      let map = new Map({\n        target: document.getElementsByClassName('map')[id],\n        // 关联到对应的div容器\n        layers: [tdtLayer],\n        view: new View({\n          // 地图视图\n          projection: 'EPSG:4326',\n          center: [113, 12],\n          zoom: 4\n        }),\n        interactions: defaultInteractions().extend([new DragRotateAndZoom()]),\n        //旋转\n        controls: defaultControls().extend([// new ScaleLine({\n          //   //设置度量单位为米\n          //   units: 'metric',\n          //   target: 'scalebar',\n          //   className: 'ol-scale-line1'\n          // }),\n          // new MousePosition({\n          //   coordinateFormat: function (coordinate) {\n          //     return format(coordinate, '经度:{x} 纬度:{y}', 2);\n          //   },\n          //   projection: 'EPSG:4326',\n          //   className: 'custom-mouse-position',\n          //   target: document.getElementsByClassName('lnglat')[id],\n          //   undefinedHTML: '&nbsp;'\n          // }),\n        ])\n      });\n      var mousePosition = 'mouse-position';\n      var mousePositionControl = new MousePosition({\n        coordinateFormat: function (coordinate) {\n          return format(coordinate, '经度:{x} 纬度:{y}', 2);\n        },\n        projection: 'EPSG:4326',\n        className: 'custom-position',\n        target: document.getElementById(mousePosition),\n        undefinedHTML: '&#160;'\n      }); // 显示经纬度\n\n      map.addControl(mousePositionControl);\n      map.addControl(new FullScreen());\n      map.addControl(new ScaleLine());\n      this.maps.push(map);\n      this.showInfo(id);\n    },\n\n    showInfo(id) {\n      let _this = this;\n\n      _this.maps[id].on(\"moveend\", function (e) {\n        // let value = \"Scale 1 : \" + document.getElementsByClassName(\"ol-scale-line1-inner\")[id].innerHTML;\n        // document.getElementsByClassName(\"scale\")[id].innerHTML = value;\n        let extent = _this.maps[id].getView().calculateExtent();\n\n        let geLng = (extent[2] - extent[0]) / 5;\n        let geLat = (extent[3] - extent[1]) / 5;\n        let su = ``,\n            heng = ``;\n\n        for (let i = 0; i < 5; i++) {\n          su += `<div class=\"kedu1\"><span>${(geLat * i + extent[1]).toFixed(1)}</span></div>`;\n          heng += `<div class=\"kedu2\"><span>${(geLng * i + extent[0]).toFixed(1)}</span></div>`;\n        }\n\n        document.getElementsByClassName(\"left\")[id].innerHTML = su; // $(\"#mapPanel1 .left\").html(su);\n\n        document.getElementsByClassName(\"top1\")[id].innerHTML = heng; // $(\".top1\").html(heng)\n      });\n\n      this.maps[id].on('singleclick', async e => {\n        let coor = e.coordinate;\n        this.coordinates[0] = e.coordinate[0];\n        this.coordinates[1] = e.coordinate[1];\n        let bbox = coor[0] - 2 + \",\" + (coor[1] - 2) + \",\" + (coor[0] + 2) + \",\" + (coor[1] + 2);\n\n        let viewResolution = _this.maps[id].getView().getResolution();\n\n        let url = _this.wmsLayers[id].getSource().getFeatureInfoUrl(coor, viewResolution, \"EPSG:4326\", {\n          INFO_FORMAT: \"application/json\",\n          //输出为json字符串\n          VERSION: '1.1.1',\n          FORMAT: 'image/png'\n        });\n\n        if (url) {\n          let data = await fetch(url).then(function (res) {\n            return res.text(); //返回Promise\n          });\n          data = JSON.parse(data);\n          let result = data.features[0].properties.GRAY_INDEX.toFixed(4);\n          document.getElementsByClassName(\"mapval\")[id].innerHTML = result;\n        }\n      });\n    },\n\n    getMiddle(arr, select) {\n      let flags = [false, false, false, false, false];\n\n      for (let i = 0; i < arr.length; i++) {\n        let index = this.listDic.indexOf(arr[i]);\n        flags[index] = true;\n        this.middle_names.push(select[index]);\n      }\n\n      for (let i = 0; i < flags.length; i++) {\n        if (!flags[i]) {\n          this.middle_names.push(select[i]);\n        }\n      }\n    },\n\n    draw() {\n      this.middle_names = [];\n\n      if (this.value1 === '' || this.value2 === '') {\n        alert(\"请选择日期，时间\");\n        return;\n      } else if (this.radio === '') {\n        alert(\"请勾选海洋要素数值！\");\n      } else {\n        let type = this.radio;\n        let isEmpty = false;\n        let list = null;\n\n        if (type === 'SSH') {\n          if (this.sshList.length === 0) {\n            isEmpty = true;\n          } else {\n            list = this.sshList;\n            this.getMiddle(list, this.select1);\n          }\n        } else if (type === 'temp') {\n          if (this.tempList.length === 0) {\n            isEmpty = true;\n          } else {\n            list = this.tempList;\n            this.getMiddle(list, this.select1);\n          }\n        } else if (type === 'SWH') {\n          if (this.swhList.length === 0) {\n            isEmpty = true;\n          } else {\n            list = this.swhList;\n            this.getMiddle(list, this.select1);\n          }\n        } else if (type === 'wave_direction') {\n          if (this.waveList.length === 0) {\n            isEmpty = true;\n          } else {\n            list = this.waveList;\n            this.getMiddle(list, this.select2);\n          }\n        }\n\n        if (isEmpty) {\n          alert(\"请勾选有单选框的复选框选项\");\n          return;\n        } else {\n          let riqi = this.value1 + \" \" + this.value2;\n          let shijianchuo = new Date(riqi).getTime(); //时间戳\n\n          for (let i = 0; i < this.wmsLayers.length; i++) {\n            this.maps[i] && this.maps[i].removeLayer(this.wmsLayers[i]); //清空所有图层\n            // this.maps[i] && this.maps[i].removeLayer(this.vectorLayers[i]); //清空所有图例\n          }\n\n          this.wmsLayers = [];\n          this.vectorLayers = [];\n\n          for (let i = 0; i < 5; i++) {\n            let map = this.maps[i];\n            let middle_name = this.middle_names[i];\n            let first_name = this.radio; // document.getElementsByClassName(\"maptitle\")[i].innerHTML = first_name + \"_\" + middle_name;\n\n            var firstName = '';\n            var middleName = '';\n\n            if (first_name === 'SSH') {\n              firstName = '有效波高(ssh)';\n            } else if (first_name === 'temp') {\n              firstName = '海温(temperature)';\n            } else if (first_name === 'SWH') {\n              firstName = '综合水位(swh)';\n            } else if (first_name === 'wave_direction') {\n              firstName = '波向(wave_direction)';\n            }\n\n            if (middle_name === 'Real') {\n              middleName = '真实值';\n            } else if (middle_name === 'pred') {\n              middleName = '预测值';\n            } else if (middle_name === 'Corr') {\n              middleName = '订正值';\n            } else if (middle_name === 'Error_Before') {\n              middleName = '订正前';\n            } else if (middle_name === 'Error_After') {\n              middleName = '订正后';\n            } else if (middle_name === 'forecast') {\n              middleName = '预报值';\n            } else if (middle_name === 'predict') {\n              middleName = '预测值';\n            } else if (middle_name === 'reanalysis') {\n              middleName = '再分析数据';\n            } else if (middle_name === 'reanalysis-forecast') {\n              middleName = '再分析数据预报结果';\n            } else if (middle_name === 'reanalysis-predict') {\n              middleName = '再分析数据预报结果';\n            }\n\n            document.getElementsByClassName(\"maptitle\")[i].innerHTML = firstName + \"_\" + middleName;\n\n            if (first_name === 'temp') {\n              if (middle_name === 'pred') {\n                middle_name = 'fore';\n              } else if (middle_name === 'Corr') {\n                middle_name = 'corr';\n              } else if (middle_name === 'Real') {\n                middle_name = 'real';\n              }\n            }\n\n            let name = first_name + \"_\" + middle_name + \"_\" + shijianchuo;\n            this.mylayer = 'cite:' + name;\n            this.init(map, i);\n          }\n        }\n      }\n    },\n\n    getRadio() {\n      this.sshList = [];\n      this.tempList = [];\n      this.swhList = [];\n      this.waveList = [];\n    },\n\n    //  渲染图层\n    init(map, index) {\n      let tileWMS = new TileWMS({\n        url: \"vector/geoserver/cite/wms\",\n        // Layers需要指定要显示的图层名\n        params: {\n          LAYERS: this.mylayer,\n          TILED: true,\n          VERSION: '1.1.1',\n          FORMAT: 'image/png'\n        },\n        // serverType明显为geoserver\n        serverType: \"geoserver\",\n        // Countries have transparency, so do not fade tiles:\n        transition: 0\n      });\n      var layers = new TileLayer({\n        source: tileWMS\n      });\n      this.wmsLayers.push(layers);\n      map.addLayer(layers);\n      let graphicUrl = tileWMS.getLegendUrl(map.getView().getResolution());\n      let img = document.getElementsByClassName(\"legend1\")[index];\n      console.log(tileWMS);\n      img.src = graphicUrl; // 在地图里添加图例\n\n      var startMarker = new OlFeature({\n        type: 'icon',\n        geometry: new OlGeomPoint([this.coordinates[0] + 5, this.coordinates[1]])\n      });\n      var vectorLayer = new OlLayerVector({\n        source: new OlSourceVector({\n          features: [startMarker]\n        }),\n        style: new OlStyleStyle({\n          image: new OlStyleIcon({\n            anchor: [0.5, 1],\n            src: graphicUrl\n          }),\n          // 设置图片下面显示字体的样式和内容\n          text: new Text({\n            text: '图例',\n            font: '14px font-size',\n            fill: new Fill({\n              color: '#000000'\n            }),\n            offsetY: 10\n          })\n        })\n      });\n      this.vectorLayers.push(vectorLayer);\n      map.addLayer(vectorLayer);\n    }\n\n  },\n\n  mounted() {\n    for (let i = 0; i < 5; i++) {\n      this.initMap(i);\n    }\n  }\n\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACAA,cADA,EAEAC,YAFA,QAGA,kBAHA;AAIA,SACAC,+BADA,EAEAC,iBAFA,QAGA,gBAHA,C,CAIA;;AACA;AACA;AACA;AACA;AACA;AACA,wC,CACA;;AACA;AACA;AAEA;AACAC;AACA;AACAC,gBADA;AACA;AACAC,gBAFA;AAEA;AACAC,eAHA;AAGA;AACAC,iBAJA;AAKAC,kBALA;AAMAC,iBANA;AAOAC,kBAPA;AAQAC,iBARA;AASA;AACAC,sEAVA;AAWAC,iGAXA;AAYAC,6CAZA;AAaAC,sBAbA;AAcAC,cAdA;AAeAC,mBAfA;AAgBAC,sBAhBA;AAiBAC;AAjBA;AAmBA,GArBA;;AAsBAC;AACAC;AADA,GAtBA;AAyBAC;AACAC;AACA;AACA,KAHA;;AAIAC;AACA,uBADA,CAEA;;;AACA;AACAC,+BADA;AAEAC;AACA;AACA;AACAC,8BADA;AAEAC,wBAFA;AAGAC,2BAHA;AAIAC,wCAJA;AAKAC;AALA;;AAOA,yDACAC,IADA,CACA;AACA;AACA;;AACA;AACAC;;AACAC;AACA,eAHA,MAGA;AACAD;AACAE;;AACAD;AACA;AACA,aAZA;AAaA;AACA;AAzBA;AA2BA,KAlCA;;AAmCAE;AACA;AACA;AACAC,yBADA;AAEAC;AACA;AACAC,4DAFA,CAGA;AACA;AACA;;AALA;AAFA;AAUA;AACAC,0DADA;AACA;AACAC,iBACAC,QADA,CAFA;AAKAC;AAAA;AACAC,iCADA;AAEAC,2BAFA;AAGAC;AAHA,UALA;AAUAC,6EAVA;AAUA;AACAC,4CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAXA;AA8BA;AACA;AACAC;AACA;AACA,SAHA;AAIAL,+BAJA;AAKAM,oCALA;AAMAV,sDANA;AAOAW;AAPA,SA3CA,CAqDA;;AACAC;AACAA;AACAA;AACA;AACA;AACA,KA9FA;;AA+FAC;AACA;;AACAnB;AACA;AACA;AACA;;AACA;AACA;AACA;AAAA;;AACA;AACAoB;AACAC;AACA;;AACAC,mEAXA,CAYA;;AACAA,qEAbA,CAcA;AACA,OAfA;;AAgBA;AACA;AACA;AACA;AACA;;AACA;;AACA,sCACAC,SADA,GAEAC,iBAFA,CAEAC,IAFA,EAEAC,cAFA,EAEA,WAFA,EAEA;AACAC,yCADA;AACA;AACAC,0BAFA;AAGAC;AAHA,SAFA;;AAOA;AACA;AACA,8BADA,CACA;AACA,WAFA;AAGA5D;AACA;AACAqD;AACA;AACA,OArBA;AAsBA,KAvIA;;AAwIAQ;AACA;;AACA;AACA;AACAC;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,KApJA;;AAqJAC;AACA;;AACA;AACAC;AACA;AACA,OAHA,MAGA;AACAA;AACA,OAFA,MAEA;AACA;AACA;AACA;;AACA;AACA;AACAC;AACA,WAFA,MAEA;AACAC;AACA;AACA;AACA,SAPA,MAOA;AACA;AACAD;AACA,WAFA,MAEA;AACAC;AACA;AACA;AACA,SAPA,MAOA;AACA;AACAD;AACA,WAFA,MAEA;AACAC;AACA;AACA;AACA,SAPA,MAOA;AACA;AACAD;AACA,WAFA,MAEA;AACAC;AACA;AACA;AACA;;AACA;AACAF;AACA;AACA,SAHA,MAGA;AACA;AACA,qDAFA,CAEA;;AACA;AACA,wEADA,CACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA,wCAHA,CAIA;;AAEA;AACA;;AACA;AACAG;AACA,aAFA,MAEA;AACAA;AACA,aAFA,MAEA;AACAA;AACA,aAFA,MAEA;AACAA;AACA;;AACA;AACAC;AACA,aAFA,MAEA;AACAA;AACA,aAFA,MAEA;AACAA;AACA,aAFA,MAEA;AACAA;AACA,aAFA,MAEA;AACAA;AACA,aAFA,MAEA;AACAA;AACA,aAFA,MAEA;AACAA;AACA,aAFA,MAEA;AACAA;AACA,aAFA,MAEA;AACAA;AACA,aAFA,MAEA;AACAA;AACA;;AACAf;;AACA;AACA;AACAgB;AACA,eAFA,MAEA;AACAA;AACA,eAFA,MAEA;AACAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAhQA;;AAiQAC;AACA;AACA;AACA;AACA;AACA,KAtQA;;AAwQA;AACAC;AACA;AACAnC,wCADA;AAEA;AACAoC;AACAC,8BADA;AAEAC,qBAFA;AAGAf,0BAHA;AAIAC;AAJA,SAHA;AASA;AACAe,+BAVA;AAWA;AACAC;AAZA;AAcA,mBACA;AACAzC;AADA,QADA;AAIA;AACAc;AACA;AACA;AACAjB;AACA6C,2BAxBA,CA0BA;;AACA;AACAC,oBADA;AAEAC;AAFA;AAIA;AACA5C;AACA6C;AADA,UADA;AAIAC;AACAC;AACAC,4BADA;AAEAC;AAFA,YADA;AAKA;AACA1D;AACAA,sBADA;AAEA2D,kCAFA;AAGAC;AACAC;AADA,cAHA;AAMAC;AANA;AANA;AAJA;AAoBA;AACAvC;AACA;;AA9TA,GAzBA;;AAyVAwC;AACA;AACA;AACA;AACA;;AA7VA","names":["createStringXY","toStringHDMS","defaults","DragRotateAndZoom","data","value1","value2","radio","sshList","tempList","swhList","waveList","mylayer","select1","select2","listDic","middle_names","maps","wmsLayers","vectorLayers","coordinates","components","OceanMap","methods","getLocalTime","fileSubmit","confirmButtonText","callback","fullscreen","lock","text","spinner","background","then","loadOption","_this","console","initMap","title","source","url","target","layers","tdtLayer","view","projection","center","zoom","interactions","controls","coordinateFormat","className","undefinedHTML","map","showInfo","su","heng","document","getSource","getFeatureInfoUrl","coor","viewResolution","INFO_FORMAT","VERSION","FORMAT","getMiddle","flags","draw","alert","isEmpty","list","firstName","middleName","middle_name","getRadio","init","params","LAYERS","TILED","serverType","transition","img","type","geometry","features","style","image","anchor","src","font","fill","color","offsetY","mounted"],"sourceRoot":"views","sources":["Ocean.vue"],"sourcesContent":["<template>\r\n  <div style=\"width:100%;height:100%;background-color: #F3F2F3;\">\r\n    <div class=\"box\">\r\n      <div id=\"dashboard\">\r\n        <div id=\"data_upload\" class=\"part\">\r\n          <div class=\"title\">\r\n            <h4>\r\n              数据上传\r\n            </h4>\r\n          </div>\r\n          <div class=\"center\">\r\n            <input type=\"button\" value=\"上传海洋数据\" id=\"data_btn\" @click=\"fileSubmit\">\r\n          </div>\r\n        </div>\r\n        <div class=\"part\">\r\n          <div class=\"title\">\r\n            <h4>\r\n              选择日期\r\n            </h4>\r\n            <div class=\"container\">\r\n              <el-date-picker\r\n                  v-model=\"value1\"\r\n                  type=\"date\"\r\n                  placeholder=\"选择日期\"\r\n                  format=\"yyyy-MM-dd\"\r\n                  value-format=\"yyyy-MM-dd\">\r\n              </el-date-picker>\r\n              <el-time-select\r\n                  v-model=\"value2\"\r\n                  :picker-options=\"{\r\n                                start: '00:00',\r\n                                step: '01:00',\r\n                                end: '23:00'\r\n                            }\"\r\n                  placeholder=\"选择时间\">\r\n              </el-time-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- <hr class=\"split\"> -->\r\n        <el-divider></el-divider>\r\n        <div style=\"margin-bottom: 0%;\" class=\"part\">  <!--海洋-->\r\n          <div class=\"title\">\r\n            <h4>\r\n              选择海洋要素数值\r\n            </h4>\r\n          </div>\r\n\r\n          <div style=\"margin-left:5%;\">\r\n            <el-radio-group class=\"group\" clearable=true v-model=\"radio\" @change=\"getRadio\">\r\n              <div class=\"type\">\r\n                <el-radio :label='\"SSH\"'>有效波高(ssh)</el-radio>\r\n                <div class=\"choose\">\r\n                  <table>\r\n                    <el-checkbox-group v-model=\"sshList\">\r\n                      <tr>\r\n                        <td>\r\n                          <el-checkbox label=\"v1\">真实值</el-checkbox>\r\n                        </td>\r\n                        <td>\r\n                          <el-checkbox label=\"v2\">预测值</el-checkbox>\r\n                        </td>\r\n                        <td>\r\n                          <el-checkbox label=\"v3\">订正值</el-checkbox>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colspan=\"2\">\r\n                          <el-checkbox label=\"v4\">订正前</el-checkbox>\r\n                        </td>\r\n                        <td style=\"width: 40%;\">\r\n                          <el-checkbox label=\"v5\">订正后</el-checkbox>\r\n                        </td>\r\n                      </tr>\r\n                    </el-checkbox-group>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div class=\"type\">\r\n                <el-radio :label='\"temp\"'>海温(temperature)</el-radio>\r\n                <div class=\"choose\">\r\n                  <table>\r\n                    <el-checkbox-group v-model=\"tempList\">\r\n                      <tr>\r\n                        <td>\r\n                          <el-checkbox label=\"v1\">真实值</el-checkbox>\r\n                        </td>\r\n                        <td>\r\n                          <el-checkbox label=\"v2\">预测值</el-checkbox>\r\n                        </td>\r\n                        <td>\r\n                          <el-checkbox label=\"v3\">订正值</el-checkbox>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colspan=\"2\">\r\n                          <el-checkbox label=\"v4\">订正前</el-checkbox>\r\n                        </td>\r\n                        <td style=\"width: 40%;\">\r\n                          <el-checkbox label=\"v5\">订正后</el-checkbox>\r\n                        </td>\r\n                      </tr>\r\n                    </el-checkbox-group>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div class=\"type\">\r\n                <el-radio :label='\"SWH\"'>综合水位(swh)</el-radio>\r\n                <div class=\"choose\">\r\n                  <table>\r\n                    <el-checkbox-group v-model=\"swhList\">\r\n                      <tr>\r\n                        <td>\r\n                          <el-checkbox label=\"v1\">真实值</el-checkbox>\r\n                        </td>\r\n                        <td>\r\n                          <el-checkbox label=\"v2\">预测值</el-checkbox>\r\n                        </td>\r\n                        <td>\r\n                          <el-checkbox label=\"v3\">订正值</el-checkbox>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colspan=\"2\">\r\n                          <el-checkbox label=\"v4\">订正前</el-checkbox>\r\n                        </td>\r\n                        <td style=\"width: 40%;\">\r\n                          <el-checkbox label=\"v5\">订正后</el-checkbox>\r\n                        </td>\r\n                      </tr>\r\n                    </el-checkbox-group>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div class=\"type\">\r\n                <el-radio :label='\"wave_direction\"'>波向(wave_direction)</el-radio>\r\n                <div class=\"choose\">\r\n                  <table>\r\n                    <el-checkbox-group v-model=\"waveList\">\r\n                      <tr>\r\n                        <td>\r\n                          <el-checkbox label=\"v1\">预报值</el-checkbox>\r\n                        </td>\r\n                        <td>\r\n                          <el-checkbox label=\"v2\">预测值</el-checkbox>\r\n                        </td>\r\n                        <td>\r\n                          <el-checkbox label=\"v3\">再分析数据</el-checkbox>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colspan=\"2\">\r\n                          <el-checkbox label=\"v4\">再分析数据预报结果</el-checkbox>\r\n                        </td>\r\n                        <td style=\"width: 40%;\">\r\n                          <el-checkbox label=\"v5\">再分析数据预测结果</el-checkbox>\r\n                        </td>\r\n                      </tr>\r\n                    </el-checkbox-group>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </el-radio-group>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div class=\"center\">\r\n            <input type=\"button\" value=\"渲染\" id=\"draw_btn\" @click=\"draw\">\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <!-- <div id=\"mouse-position\"></div> -->\r\n      <div class=\"vis-content\">   <!--可视化区域-->\r\n        <div class=\"vis\">\r\n          <OceanMap ref=\"map1\"/>\r\n        </div>\r\n        <div class=\"vis\">\r\n          <OceanMap ref=\"map2\"/>\r\n        </div>\r\n        <div class=\"vis\">\r\n          <OceanMap ref=\"map3\"/>\r\n        </div>\r\n        <div class=\"vis\">\r\n          <OceanMap ref=\"map4\"/>\r\n        </div>\r\n        <div class=\"vis\">\r\n          <OceanMap ref=\"map5\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport OceanMap from \"../src/components/Map\";\r\nimport \"ol/ol.css\";\r\nimport Map from \"ol/Map\";\r\nimport View from \"ol/View\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport XYZ from \"ol/source/XYZ\";\r\nimport {ScaleLine} from \"ol/control\";\r\nimport MousePosition from \"ol/control/MousePosition\"\r\nimport {fromLonLat} from \"ol/proj\";\r\nimport {Loading} from \"element-ui\"\r\nimport TileWMS from \"ol/source/TileWMS\";\r\nimport {OverviewMap, defaults as defaultControls} from \"ol/control\";\r\nimport {format} from \"ol/coordinate\";\r\nimport {isEmpty} from 'ol/extent';\r\nimport {isNull} from 'ol/format/filter';\r\nimport {FullScreen} from 'ol/control';\r\nimport {ZoomToExtent} from \"ol/control\";\r\nimport {Rotate} from \"ol/control\";\r\nimport {ZoomSlider} from \"ol/control\";\r\nimport {\r\n  createStringXY,\r\n  toStringHDMS\r\n} from 'ol/coordinate.js';\r\nimport {\r\n  defaults as defaultInteractions,\r\n  DragRotateAndZoom,\r\n} from 'ol/interaction';\r\n// import Legend from 'ol-ext/control/Legend';\r\nimport OlFeature from 'ol/Feature'\r\nimport OlGeomPoint from 'ol/geom/Point'\r\nimport OlLayerVector from 'ol/layer/Vector'\r\nimport OlSourceVector from 'ol/source/Vector'\r\nimport OlStyleStyle from 'ol/style/Style'\r\nimport OlStyleIcon from 'ol/style/Icon'\r\n// 用来添加相关文字描述的\r\nimport Text from 'ol/style/Text'\r\nimport Fill from 'ol/style/Fill'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      value1: '',   //日期\r\n      value2: '',   //时刻\r\n      radio: \"\",  //选择的属性\r\n      sshList: [],\r\n      tempList: [],\r\n      swhList: [],\r\n      waveList: [],\r\n      mylayer: ``,\r\n      // radios:['SSH','temp','SWH','wave_direction'],\r\n      select1: [\"Real\", \"pred\", \"Corr\", \"Error_Before\", \"Error_After\"],\r\n      select2: [\"forecast\", \"predict\", \"reanalysis\", \"reanalysis-forecast\", \"reanalysis-predict\"],\r\n      listDic: ['v1', 'v2', 'v3', 'v4', 'v5'],\r\n      middle_names: [],\r\n      maps: [],\r\n      wmsLayers: [],\r\n      vectorLayers: [],\r\n      coordinates: [160, 6],\r\n    };\r\n  },\r\n  components: {\r\n    OceanMap,\r\n  },\r\n  methods: {\r\n    getLocalTime(nS) {\r\n      return new Date(parseInt(nS) * 1000).toLocaleString().replace(/:\\d{1,2}$/, ' ');\r\n    },\r\n    fileSubmit() {\r\n      let _this = this\r\n      // this.$MessageBox.alert('请将nc文件放置到/home/user_ocean_data,然后点击确定', '提示', {\r\n      this.$MessageBox.alert('请将nc文件放置到/opt/temp/home/ocean/user_ocean_data/, 然后点击确定', '提示', {\r\n        confirmButtonText: '确定',\r\n        callback: action => {\r\n          if (action === 'confirm') {\r\n            const loadOption = Loading.service({\r\n              fullscreen: true,\r\n              lock: true,\r\n              text: '正在处理中',\r\n              spinner: 'el-icon-loading',\r\n              background: 'rgba(0, 0, 0, 0.7)'\r\n            });\r\n            this.$http.get(\"api/ocean/processOceanData\")\r\n                .then(function (response) {\r\n                  // console.log(response)\r\n                  let state = response.data.success;\r\n                  if (state === true) {\r\n                    loadOption.close()\r\n                    _this.$Message('上传成功');\r\n                  } else if (state === false) {\r\n                    loadOption.close();\r\n                    console.log(response)\r\n                    _this.$Message('发生异常 ' + response.data.message);\r\n                  }\r\n                })\r\n          }\r\n        }\r\n      });\r\n    },\r\n    initMap(id) {\r\n      //   console.log(\"hello\")\r\n      let tdtLayer = new TileLayer({\r\n        title: \"谷歌矢量地图服务\",\r\n        source: new XYZ({\r\n          // arcgis server\r\n          url: 'http://localhost:8081/Ocean/{z}/{x}/{y}.png'\r\n          // url: 'http://ocean-vis-http-server:8081/Ocean/{z}/{x}/{y}.png'\r\n          // url: 'http://map.geoq.cn/arcgis/rest/services/ChinaOnlineStreetWarm/MapServer/tile/{z}/{y}/{x}'\r\n          // url: 'http://t4.tianditu.com/DataServer?T=img_w&x={x}&y={y}&l={z}&tk=cbd3ea0a8f745a3699f7cd8bc68ae9b7'\r\n        })\r\n      });\r\n      let map = new Map({\r\n        target: document.getElementsByClassName('map')[id],                          // 关联到对应的div容器\r\n        layers: [\r\n          tdtLayer\r\n        ],\r\n        view: new View({                     // 地图视图\r\n          projection: 'EPSG:4326',\r\n          center: [113, 12],\r\n          zoom: 4\r\n        }),\r\n        interactions: defaultInteractions().extend([new DragRotateAndZoom()]),  //旋转\r\n        controls: defaultControls().extend([\r\n          // new ScaleLine({\r\n          //   //设置度量单位为米\r\n          //   units: 'metric',\r\n          //   target: 'scalebar',\r\n          //   className: 'ol-scale-line1'\r\n          // }),\r\n          // new MousePosition({\r\n          //   coordinateFormat: function (coordinate) {\r\n          //     return format(coordinate, '经度:{x} 纬度:{y}', 2);\r\n          //   },\r\n          //   projection: 'EPSG:4326',\r\n          //   className: 'custom-mouse-position',\r\n          //   target: document.getElementsByClassName('lnglat')[id],\r\n          //   undefinedHTML: '&nbsp;'\r\n          // }),\r\n        ])\r\n      });\r\n\r\n      var mousePosition = 'mouse-position';\r\n      var mousePositionControl = new MousePosition({\r\n        coordinateFormat: function (coordinate) {\r\n          return format(coordinate, '经度:{x} 纬度:{y}', 2);\r\n        },\r\n        projection: 'EPSG:4326',\r\n        className: 'custom-position',\r\n        target: document.getElementById(mousePosition),\r\n        undefinedHTML: '&#160;'\r\n      });\r\n\r\n      // 显示经纬度\r\n      map.addControl(mousePositionControl);\r\n      map.addControl(new FullScreen());\r\n      map.addControl(new ScaleLine());\r\n      this.maps.push(map);\r\n      this.showInfo(id);\r\n    },\r\n    showInfo(id) {\r\n      let _this = this;\r\n      _this.maps[id].on(\"moveend\", function (e) {\r\n        // let value = \"Scale 1 : \" + document.getElementsByClassName(\"ol-scale-line1-inner\")[id].innerHTML;\r\n        // document.getElementsByClassName(\"scale\")[id].innerHTML = value;\r\n        let extent = _this.maps[id].getView().calculateExtent()\r\n        let geLng = (extent[2] - extent[0]) / 5\r\n        let geLat = (extent[3] - extent[1]) / 5\r\n        let su = ``, heng = ``;\r\n        for (let i = 0; i < 5; i++) {\r\n          su += `<div class=\"kedu1\"><span>${(geLat * i + extent[1]).toFixed(1)}</span></div>`\r\n          heng += `<div class=\"kedu2\"><span>${(geLng * i + extent[0]).toFixed(1)}</span></div>`\r\n        }\r\n        document.getElementsByClassName(\"left\")[id].innerHTML = su;\r\n        // $(\"#mapPanel1 .left\").html(su);\r\n        document.getElementsByClassName(\"top1\")[id].innerHTML = heng;\r\n        // $(\".top1\").html(heng)\r\n      })\r\n      this.maps[id].on('singleclick', async (e) => {\r\n        let coor = e.coordinate;\r\n        this.coordinates[0] = e.coordinate[0];\r\n        this.coordinates[1] = e.coordinate[1];\r\n        let bbox = (coor[0] - 2) + \",\" + (coor[1] - 2) + \",\" + (coor[0] + 2) + \",\" + (coor[1] + 2)\r\n        let viewResolution = _this.maps[id].getView().getResolution();\r\n        let url = _this.wmsLayers[id]\r\n            .getSource()\r\n            .getFeatureInfoUrl(coor, viewResolution, \"EPSG:4326\", {\r\n              INFO_FORMAT: \"application/json\", //输出为json字符串\r\n              VERSION: '1.1.1',\r\n              FORMAT: 'image/png'\r\n            });\r\n        if (url) {\r\n          let data = await fetch(url).then(function (res) {\r\n            return res.text(); //返回Promise\r\n          });\r\n          data = JSON.parse(data)\r\n          let result = data.features[0].properties.GRAY_INDEX.toFixed(4)\r\n          document.getElementsByClassName(\"mapval\")[id].innerHTML = result;\r\n        }\r\n      });\r\n    },\r\n    getMiddle(arr, select) {\r\n      let flags = [false, false, false, false, false]\r\n      for (let i = 0; i < arr.length; i++) {\r\n        let index = this.listDic.indexOf(arr[i]);\r\n        flags[index] = true;\r\n        this.middle_names.push(select[index]);\r\n      }\r\n      for (let i = 0; i < flags.length; i++) {\r\n        if (!flags[i]) {\r\n          this.middle_names.push(select[i])\r\n        }\r\n      }\r\n    },\r\n    draw() {\r\n      this.middle_names = []\r\n      if (this.value1 === '' || this.value2 === '') {\r\n        alert(\"请选择日期，时间\");\r\n        return;\r\n      } else if (this.radio === '') {\r\n        alert(\"请勾选海洋要素数值！\")\r\n      } else {\r\n        let type = this.radio;\r\n        let isEmpty = false;\r\n        let list = null;\r\n        if (type === 'SSH') {\r\n          if (this.sshList.length === 0) {\r\n            isEmpty = true;\r\n          } else {\r\n            list = this.sshList;\r\n            this.getMiddle(list, this.select1);\r\n          }\r\n        } else if (type === 'temp') {\r\n          if (this.tempList.length === 0) {\r\n            isEmpty = true;\r\n          } else {\r\n            list = this.tempList;\r\n            this.getMiddle(list, this.select1);\r\n          }\r\n        } else if (type === 'SWH') {\r\n          if (this.swhList.length === 0) {\r\n            isEmpty = true;\r\n          } else {\r\n            list = this.swhList;\r\n            this.getMiddle(list, this.select1);\r\n          }\r\n        } else if (type === 'wave_direction') {\r\n          if (this.waveList.length === 0) {\r\n            isEmpty = true;\r\n          } else {\r\n            list = this.waveList;\r\n            this.getMiddle(list, this.select2);\r\n          }\r\n        }\r\n        if (isEmpty) {\r\n          alert(\"请勾选有单选框的复选框选项\");\r\n          return;\r\n        } else {\r\n          let riqi = this.value1 + \" \" + this.value2;\r\n          let shijianchuo = (new Date(riqi)).getTime(); //时间戳\r\n          for (let i = 0; i < this.wmsLayers.length; i++) {\r\n            this.maps[i] && this.maps[i].removeLayer(this.wmsLayers[i]);    //清空所有图层\r\n            // this.maps[i] && this.maps[i].removeLayer(this.vectorLayers[i]); //清空所有图例\r\n          }\r\n          this.wmsLayers = [];\r\n          this.vectorLayers = [];\r\n          for (let i = 0; i < 5; i++) {\r\n            let map = this.maps[i];\r\n            let middle_name = this.middle_names[i]\r\n            let first_name = this.radio\r\n            // document.getElementsByClassName(\"maptitle\")[i].innerHTML = first_name + \"_\" + middle_name;\r\n\r\n            var firstName = '';\r\n            var middleName = '';\r\n            if (first_name === 'SSH') {\r\n              firstName = '有效波高(ssh)';\r\n            } else if (first_name === 'temp') {\r\n              firstName = '海温(temperature)';\r\n            } else if (first_name === 'SWH') {\r\n              firstName = '综合水位(swh)';\r\n            } else if (first_name === 'wave_direction') {\r\n              firstName = '波向(wave_direction)';\r\n            }\r\n            if (middle_name === 'Real') {\r\n              middleName = '真实值';\r\n            } else if (middle_name === 'pred') {\r\n              middleName = '预测值';\r\n            } else if (middle_name === 'Corr') {\r\n              middleName = '订正值';\r\n            } else if (middle_name === 'Error_Before') {\r\n              middleName = '订正前';\r\n            } else if (middle_name === 'Error_After') {\r\n              middleName = '订正后';\r\n            } else if (middle_name === 'forecast') {\r\n              middleName = '预报值';\r\n            } else if (middle_name === 'predict') {\r\n              middleName = '预测值';\r\n            } else if (middle_name === 'reanalysis') {\r\n              middleName = '再分析数据';\r\n            } else if (middle_name === 'reanalysis-forecast') {\r\n              middleName = '再分析数据预报结果';\r\n            } else if (middle_name === 'reanalysis-predict') {\r\n              middleName = '再分析数据预报结果';\r\n            }\r\n            document.getElementsByClassName(\"maptitle\")[i].innerHTML = firstName + \"_\" + middleName;\r\n            if (first_name === 'temp') {\r\n              if (middle_name === 'pred') {\r\n                middle_name = 'fore'\r\n              } else if (middle_name === 'Corr') {\r\n                middle_name = 'corr'\r\n              } else if (middle_name === 'Real') {\r\n                middle_name = 'real'\r\n              }\r\n            }\r\n\r\n            let name = first_name + \"_\" + middle_name + \"_\" + shijianchuo\r\n            this.mylayer = 'cite:' + name\r\n            this.init(map, i)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    getRadio() {\r\n      this.sshList = []\r\n      this.tempList = []\r\n      this.swhList = []\r\n      this.waveList = []\r\n    },\r\n\r\n    //  渲染图层\r\n    init(map, index) {\r\n      let tileWMS = new TileWMS({\r\n        url: \"vector/geoserver/cite/wms\",\r\n        // Layers需要指定要显示的图层名\r\n        params: {\r\n          LAYERS: this.mylayer,\r\n          TILED: true,\r\n          VERSION: '1.1.1',\r\n          FORMAT: 'image/png'\r\n        },\r\n        // serverType明显为geoserver\r\n        serverType: \"geoserver\",\r\n        // Countries have transparency, so do not fade tiles:\r\n        transition: 0\r\n      });\r\n      var layers =\r\n          new TileLayer({\r\n            source: tileWMS\r\n          });\r\n      this.wmsLayers.push(layers)\r\n      map.addLayer(layers)\r\n      let graphicUrl = tileWMS.getLegendUrl(map.getView().getResolution())\r\n      let img = document.getElementsByClassName(\"legend1\")[index];\r\n      console.log(tileWMS)\r\n      img.src = graphicUrl;\r\n\r\n      // 在地图里添加图例\r\n      var startMarker = new OlFeature({\r\n        type: 'icon',\r\n        geometry: new OlGeomPoint([this.coordinates[0] + 5, this.coordinates[1]])\r\n      })\r\n      var vectorLayer = new OlLayerVector({\r\n        source: new OlSourceVector({\r\n          features: [startMarker]\r\n        }),\r\n        style: new OlStyleStyle({\r\n          image: new OlStyleIcon({\r\n            anchor: [0.5, 1],\r\n            src: graphicUrl\r\n          }),\r\n          // 设置图片下面显示字体的样式和内容\r\n          text: new Text({\r\n            text: '图例',\r\n            font: '14px font-size',\r\n            fill: new Fill({\r\n              color: '#000000'\r\n            }),\r\n            offsetY: 10\r\n          })\r\n        })\r\n      })\r\n      this.vectorLayers.push(vectorLayer);\r\n      map.addLayer(vectorLayer);\r\n    }\r\n  },\r\n  mounted() {\r\n    for (let i = 0; i < 5; i++) {\r\n      this.initMap(i);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.custom-position {\r\n  text-align: center;\r\n  font-size: 12px;\r\n  margin-bottom: 50px;\r\n}\r\n\r\nbody, html {\r\n  height: 100%;\r\n  background-color: #F3F2F3;\r\n  margin: 0;\r\n  /* text-align: center; */\r\n}\r\n\r\n.box {\r\n  /* display: inline-block; */\r\n  width: 94%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.box .title {\r\n  margin-left: 3%;\r\n}\r\n\r\n.box .container {\r\n  width: 100%;\r\n  text-align: center;\r\n  margin-left: -2%;\r\n}\r\n\r\n#dashboard {\r\n  float: left;\r\n  height: calc(100% - 10px);\r\n  width: 30%;\r\n  /* border: 1px solid #D2D2D2; */\r\n  margin-top: 10px;\r\n  background-color: white;\r\n}\r\n\r\n.box .vis-content {\r\n  float: left;\r\n  height: calc(100% - 10px);\r\n  width: 70%;\r\n  margin-top: 10px;\r\n  background-color: white;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.box .vis-content .vis {\r\n  width: 33%;\r\n  height: 50%;\r\n}\r\n\r\n#dashboard #sub_btn {\r\n  width: 131px;\r\n  height: 33px;\r\n  color: white;\r\n  cursor: pointer;\r\n  background: #4472C4;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 14px;\r\n  border-radius: 5px;\r\n}\r\n\r\n#dashboard .squ-checkbox {\r\n  margin-right: 3%;\r\n}\r\n\r\n#dashboard .type {\r\n  display: block;\r\n  width: 100%;\r\n}\r\n\r\n.el-radio-group {\r\n  width: 100%;\r\n}\r\n\r\n#dashboard .choose {\r\n  padding-left: 8%;\r\n  margin-bottom: 4%;\r\n  margin-top: 1%;\r\n}\r\n\r\n#dashboard .choose table {\r\n  width: 84%;\r\n  border: 0;\r\n}\r\n\r\n#dashboard .choose table tr {\r\n  width: 100%;\r\n}\r\n\r\n#dashboard .choose table td {\r\n  height: 25px;\r\n  width: 37%;\r\n  margin-left: 5px;\r\n  /* display: inline-block; */\r\n}\r\n\r\n#dashboard .center {\r\n  /* margin-left: -15%; */\r\n  margin-top: 3%;\r\n  text-align: center\r\n}\r\n\r\n#dashboard #draw_btn, #dashboard #data_btn {\r\n  width: 80%;\r\n  height: 33px;\r\n  color: white;\r\n  cursor: pointer;\r\n  background: #4472C4;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 14px;\r\n  border-radius: 5px;\r\n}\r\n\r\n#dashboard .split {\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  /* border-color: #EEEEEE; */\r\n  background-color: #EEEEEE;\r\n  height: 0.1px;\r\n}\r\n\r\n.container #date {\r\n  float: left;\r\n  margin-left: 2%;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  margin-right: 1%;\r\n}\r\n\r\n.container .form-horizontal {\r\n  float: left;\r\n}\r\n\r\n.el-input__inner {\r\n  height: 33px;\r\n  line-height: 33px;\r\n}\r\n\r\n.el-input__icon {\r\n  line-height: 33px;\r\n}\r\n\r\n.el-date-editor.el-input {\r\n  width: 180px;\r\n  margin: 0 3px;\r\n}\r\n\r\n.el-radio {\r\n  font-weight: 700;\r\n}\r\n\r\n.el-radio__label, .el-checkbox__label {\r\n  font-size: 15px;\r\n}\r\n\r\n.el-divider--horizontal {\r\n  width: 90%;\r\n  margin: 24px auto\r\n}\r\n\r\ntitle1 {\r\n  left: 200px;\r\n  bottom: 200px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}