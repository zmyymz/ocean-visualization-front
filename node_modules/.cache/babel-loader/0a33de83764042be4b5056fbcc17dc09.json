{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n\n/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport FormatType from '../format/FormatType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { get as getProjection } from '../proj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\n\nvar DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\n\nvar DragAndDropEvent =\n/** @class */\nfunction (_super) {\n  __extends(DragAndDropEvent, _super);\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [opt_features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   */\n\n\n  function DragAndDropEvent(type, file, opt_features, opt_projection) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n\n\n    _this.features = opt_features;\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n\n    _this.file = file;\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n\n    _this.projection = opt_projection;\n    return _this;\n  }\n\n  return DragAndDropEvent;\n}(Event);\n\nexport { DragAndDropEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * Note that the DragAndDrop interaction uses the TextDecoder() constructor if the supplied\n * combination of formats read both text string and ArrayBuffer sources. Older browsers such\n * as IE which do not support this will need a TextDecoder polyfill to be loaded before use.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\n\nvar DragAndDrop =\n/** @class */\nfunction (_super) {\n  __extends(DragAndDrop, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function DragAndDrop(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      handleEvent: TRUE\n    }) || this;\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.on;\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n\n    _this.un;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.readAsBuffer_ = false;\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n\n    _this.formats_ = [];\n    var formatConstructors = options.formatConstructors ? options.formatConstructors : [];\n\n    for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      var format = formatConstructors[i];\n\n      if (typeof format === 'function') {\n        format = new format();\n      }\n\n      _this.formats_.push(format);\n\n      _this.readAsBuffer_ = _this.readAsBuffer_ || format.getType() === FormatType.ARRAY_BUFFER;\n    }\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n\n\n    _this.projection_ = options.projection ? getProjection(options.projection) : null;\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n\n    _this.dropListenKeys_ = null;\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n\n    _this.source_ = options.source || null;\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n\n    _this.target = options.target ? options.target : null;\n    return _this;\n  }\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n\n\n  DragAndDrop.prototype.handleResult_ = function (file, event) {\n    var result = event.target.result;\n    var map = this.getMap();\n    var projection = this.projection_;\n\n    if (!projection) {\n      var view = map.getView();\n      projection = view.getProjection();\n    }\n\n    var text;\n    var formats = this.formats_;\n\n    for (var i = 0, ii = formats.length; i < ii; ++i) {\n      var format = formats[i];\n      var input = result;\n\n      if (this.readAsBuffer_ && format.getType() !== FormatType.ARRAY_BUFFER) {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n\n        input = text;\n      }\n\n      var features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection\n      });\n\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n\n        this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\n        break;\n      }\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  DragAndDrop.prototype.registerListeners_ = function () {\n    var map = this.getMap();\n\n    if (map) {\n      var dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [listen(dropArea, EventType.DROP, this.handleDrop, this), listen(dropArea, EventType.DRAGENTER, this.handleStop, this), listen(dropArea, EventType.DRAGOVER, this.handleStop, this), listen(dropArea, EventType.DROP, this.handleStop, this)];\n    }\n  };\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n\n\n  DragAndDrop.prototype.setActive = function (active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n\n    _super.prototype.setActive.call(this, active);\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n\n\n  DragAndDrop.prototype.setMap = function (map) {\n    this.unregisterListeners_();\n\n    _super.prototype.setMap.call(this, map);\n\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  };\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n\n\n  DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        format.readFeatures(text, options)\n      );\n    } catch (e) {\n      return null;\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  DragAndDrop.prototype.unregisterListeners_ = function () {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  };\n  /**\n   * @param {DragEvent} event Event.\n   */\n\n\n  DragAndDrop.prototype.handleDrop = function (event) {\n    var files = event.dataTransfer.files;\n\n    for (var i = 0, ii = files.length; i < ii; ++i) {\n      var file = files.item(i);\n      var reader = new FileReader();\n      reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  };\n  /**\n   * @param {DragEvent} event Event.\n   */\n\n\n  DragAndDrop.prototype.handleStop = function (event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  };\n\n  return DragAndDrop;\n}(Interaction);\n\nexport default DragAndDrop;","map":{"version":3,"mappings":"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","names":["Event","EventType","FormatType","Interaction","TRUE","get","getProjection","listen","unlistenByKey","DragAndDropEventType","ADD_FEATURES","__extends","type","file","opt_features","opt_projection","_super","_this","features","projection","opt_options","options","handleEvent","on","once","un","readAsBuffer_","formats_","formatConstructors","i","ii","length","format","push","getType","ARRAY_BUFFER","projection_","dropListenKeys_","source_","source","target","DragAndDrop","event","result","map","getMap","view","getView","text","formats","input","undefined","TextDecoder","decode","tryReadFeatures_","featureProjection","clear","addFeatures","dispatchEvent","DragAndDropEvent","dropArea","getViewport","DROP","handleDrop","DRAGENTER","handleStop","DRAGOVER","active","getActive","registerListeners_","unregisterListeners_","setActive","call","setMap","readFeatures","e","forEach","files","dataTransfer","item","reader","FileReader","addEventListener","LOAD","handleResult_","bind","readAsArrayBuffer","readAsText","stopPropagation","preventDefault","dropEffect"],"sourceRoot":"","sources":["../src/interaction/DragAndDrop.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}