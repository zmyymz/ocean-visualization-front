{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/GML3\n */\n\n\nimport GML2 from './GML2.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport { OBJECT_PROPERTY_NODE_FACTORY, XML_SCHEMA_INSTANCE_URI, createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender, makeReplacer, makeSimpleNodeFactory, parseNode, pushParseAndPop, pushSerializeAndPop } from '../xml.js';\nimport { assign } from '../obj.js';\nimport { createOrUpdate } from '../extent.js';\nimport { extend } from '../array.js';\nimport { get as getProjection } from '../proj.js';\nimport { readNonNegativeIntegerString, writeStringTextNode } from './xsd.js';\nimport { transformExtentWithOptions, transformGeometryWithOptions } from './Feature.js';\n/**\n * @const\n * @type {string}\n * @private\n */\n\nvar schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' + '1.0.0/gmlsf.xsd';\n/**\n * @const\n * @type {Object<string, string>}\n */\n\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\n\nvar GML3 =\n/** @class */\nfunction (_super) {\n  __extends(GML3, _super);\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [opt_options] Optional configuration object.\n   */\n\n\n  function GML3(opt_options) {\n    var _this = this;\n\n    var options =\n    /** @type {import(\"./GMLBase.js\").Options} */\n    opt_options ? opt_options : {};\n    _this = _super.call(this, options) || this;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.surface_ = options.surface !== undefined ? options.surface : false;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.curve_ = options.curve !== undefined ? options.curve : false;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.multiCurve_ = options.multiCurve !== undefined ? options.multiCurve : true;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.multiSurface_ = options.multiSurface !== undefined ? options.multiSurface : true;\n    /**\n     * @type {string}\n     */\n\n    _this.schemaLocation = options.schemaLocation ? options.schemaLocation : schemaLocation;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n    return _this;\n  }\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n\n\n  GML3.prototype.readMultiCurve = function (node, objectStack) {\n    /** @type {Array<LineString>} */\n    var lineStrings = pushParseAndPop([], this.MULTICURVE_PARSERS, node, objectStack, this);\n\n    if (lineStrings) {\n      var multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    } else {\n      return undefined;\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n\n\n  GML3.prototype.readMultiSurface = function (node, objectStack) {\n    /** @type {Array<Polygon>} */\n    var polygons = pushParseAndPop([], this.MULTISURFACE_PARSERS, node, objectStack, this);\n\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n\n\n  GML3.prototype.curveMemberParser = function (node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n\n\n  GML3.prototype.surfaceMemberParser = function (node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n\n\n  GML3.prototype.readPatch = function (node, objectStack) {\n    return pushParseAndPop([null], this.PATCHES_PARSERS, node, objectStack, this);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n\n\n  GML3.prototype.readSegment = function (node, objectStack) {\n    return pushParseAndPop([null], this.SEGMENTS_PARSERS, node, objectStack, this);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n\n\n  GML3.prototype.readPolygonPatch = function (node, objectStack) {\n    return pushParseAndPop([null], this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n\n\n  GML3.prototype.readLineStringSegment = function (node, objectStack) {\n    return pushParseAndPop([null], this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n\n\n  GML3.prototype.interiorParser = function (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n\n    if (flatLinearRing) {\n      var flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      objectStack[objectStack.length - 1];\n      flatLinearRings.push(flatLinearRing);\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n\n\n  GML3.prototype.exteriorParser = function (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n\n    if (flatLinearRing) {\n      var flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      objectStack[objectStack.length - 1];\n      flatLinearRings[0] = flatLinearRing;\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n\n\n  GML3.prototype.readSurface = function (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var flatLinearRings = pushParseAndPop([null], this.SURFACE_PARSERS, node, objectStack, this);\n\n    if (flatLinearRings && flatLinearRings[0]) {\n      var flatCoordinates = flatLinearRings[0];\n      var ends = [flatCoordinates.length];\n      var i = void 0,\n          ii = void 0;\n\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n\n\n  GML3.prototype.readCurve = function (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null], this.CURVE_PARSERS, node, objectStack, this);\n\n    if (flatCoordinates) {\n      var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n\n\n  GML3.prototype.readEnvelope = function (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null], this.ENVELOPE_PARSERS, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0], flatCoordinates[1][1], flatCoordinates[2][0], flatCoordinates[2][1]);\n  };\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n\n\n  GML3.prototype.readFlatPos = function (node, objectStack) {\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n\n    var flatCoordinates = [];\n    var m;\n\n    while (m = re.exec(s)) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n\n    if (s !== '') {\n      return undefined;\n    }\n\n    var context = objectStack[0];\n    var containerSrs = context['srsName'];\n    var axisOrientation = 'enu';\n\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n\n    if (axisOrientation === 'neu') {\n      var i = void 0,\n          ii = void 0;\n\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        var y = flatCoordinates[i];\n        var x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n\n    var len = flatCoordinates.length;\n\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n\n    if (len === 0) {\n      return undefined;\n    }\n\n    return flatCoordinates;\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n\n\n  GML3.prototype.readFlatPosList = function (node, objectStack) {\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    var context = objectStack[0];\n    var containerSrs = context['srsName'];\n    var contextDimension = context['srsDimension'];\n    var axisOrientation = 'enu';\n\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n\n    var coords = s.split(/\\s+/); // The \"dimension\" attribute is from the GML 3.0.1 spec.\n\n    var dim = 2;\n\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n    /** @type {Element} */\n    node.parentNode.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n      /** @type {Element} */\n      node.parentNode.getAttribute('srsDimension'));\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n\n    var x, y, z;\n    var flatCoordinates = [];\n\n    for (var i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n\n    return flatCoordinates;\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n\n\n  GML3.prototype.writePos_ = function (node, value, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    var srsName = context['srsName'];\n    var axisOrientation = 'enu';\n\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n\n    var point = value.getCoordinates();\n    var coords; // only 2d for simple features profile\n\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = point[0] + ' ' + point[1];\n    } else {\n      coords = point[1] + ' ' + point[0];\n    }\n\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    writeStringTextNode(node, coords);\n  };\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [opt_srsName] Optional srsName\n   * @param {boolean} [opt_hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n\n\n  GML3.prototype.getCoords_ = function (point, opt_srsName, opt_hasZ) {\n    var axisOrientation = 'enu';\n\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n\n    var coords = axisOrientation.substr(0, 2) === 'en' ? point[0] + ' ' + point[1] : point[1] + ' ' + point[0];\n\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n\n\n  GML3.prototype.writePosList_ = function (node, value, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    var srsName = context['srsName']; // only 2d for simple features profile\n\n    var points = value.getCoordinates();\n    var len = points.length;\n    var parts = new Array(len);\n    var point;\n\n    for (var i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n\n    writeStringTextNode(node, parts.join(' '));\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML3.prototype.writePoint = function (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    var pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML3.prototype.writeEnvelope = function (node, extent, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    var keys = ['lowerCorner', 'upperCorner'];\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    {\n      node: node\n    }, this.ENVELOPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, keys, this);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML3.prototype.writeLinearRing = function (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    var posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  };\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [opt_nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n\n\n  GML3.prototype.RING_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var exteriorWritten = context['exteriorWritten'];\n\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n\n    return createElementNS(parentNode.namespaceURI, exteriorWritten !== undefined ? 'interior' : 'exterior');\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML3.prototype.writeSurfaceOrPolygon = function (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      var rings = geometry.getLinearRings();\n      pushSerializeAndPop({\n        node: node,\n        hasZ: hasZ,\n        srsName: srsName\n      }, this.RING_SERIALIZERS, this.RING_NODE_FACTORY_, rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      var patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML3.prototype.writeCurveOrLineString = function (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    if (node.nodeName === 'LineString' || node.nodeName === 'LineStringSegment') {\n      var posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      var segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML3.prototype.writeMultiSurfaceOrPolygon = function (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var surface = context['surface'];\n\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    var polygons = geometry.getPolygons();\n    pushSerializeAndPop({\n      node: node,\n      hasZ: hasZ,\n      srsName: srsName,\n      surface: surface\n    }, this.SURFACEORPOLYGONMEMBER_SERIALIZERS, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons, objectStack, undefined, this);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML3.prototype.writeMultiPoint = function (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    var hasZ = context['hasZ'];\n\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    var points = geometry.getPoints();\n    pushSerializeAndPop({\n      node: node,\n      hasZ: hasZ,\n      srsName: srsName\n    }, this.POINTMEMBER_SERIALIZERS, makeSimpleNodeFactory('pointMember'), points, objectStack, undefined, this);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML3.prototype.writeMultiCurveOrLineString = function (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var curve = context['curve'];\n\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n\n    var lines = geometry.getLineStrings();\n    pushSerializeAndPop({\n      node: node,\n      hasZ: hasZ,\n      srsName: srsName,\n      curve: curve\n    }, this.LINESTRINGORCURVEMEMBER_SERIALIZERS, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines, objectStack, undefined, this);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML3.prototype.writeRing = function (node, ring, objectStack) {\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  };\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML3.prototype.writeSurfaceOrPolygonMember = function (node, polygon, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML3.prototype.writePointMember = function (node, point, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  };\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML3.prototype.writeLineStringOrCurveMember = function (node, line, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n\n\n  GML3.prototype.writeSurfacePatches_ = function (node, polygon, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n\n\n  GML3.prototype.writeCurveSegments_ = function (node, line, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  };\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML3.prototype.writeGeometryElement = function (node, geometry, objectStack) {\n    var context =\n    /** @type {import(\"./Feature.js\").WriteOptions} */\n    objectStack[objectStack.length - 1];\n    var item = assign({}, context);\n    item['node'] = node;\n    var value;\n\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n      /** @type {import(\"../extent.js\").Extent} */\n      geometry, context);\n    } else {\n      value = transformGeometryWithOptions(\n      /** @type {import(\"../geom/Geometry.js\").default} */\n      geometry, true, context);\n    }\n\n    pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    item, this.GEOMETRY_SERIALIZERS, this.GEOMETRY_NODE_FACTORY_, [value], objectStack, undefined, this);\n  };\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n\n\n  GML3.prototype.writeFeatureElement = function (node, feature, objectStack) {\n    var fid = feature.getId();\n\n    if (fid) {\n      node.setAttribute('fid',\n      /** @type {string} */\n      fid);\n    }\n\n    var context =\n    /** @type {Object} */\n    objectStack[objectStack.length - 1];\n    var featureNS = context['featureNS'];\n    var geometryName = feature.getGeometryName();\n\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n\n    var keys = [];\n    var values = [];\n\n    if (feature.hasProperties()) {\n      var properties = feature.getProperties();\n\n      for (var key in properties) {\n        var value = properties[key];\n\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n\n          if (key == geometryName || typeof\n          /** @type {?} */\n          value.getSimplifiedGeometry === 'function') {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(this.writeGeometryElement, this);\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    item, context.serializers, makeSimpleNodeFactory(undefined, featureNS), values, objectStack, keys);\n  };\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n\n\n  GML3.prototype.writeFeatureMembers_ = function (node, features, objectStack) {\n    var context =\n    /** @type {Object} */\n    objectStack[objectStack.length - 1];\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n\n    var serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(this.writeFeatureElement, this);\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    item, serializers, makeSimpleNodeFactory(featureType, featureNS), features, objectStack);\n  };\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [opt_nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n\n\n  GML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(this.namespace, MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  };\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [opt_nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n\n\n  GML3.prototype.GEOMETRY_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var multiSurface = context['multiSurface'];\n    var surface = context['surface'];\n    var curve = context['curve'];\n    var multiCurve = context['multiCurve'];\n    var nodeName;\n\n    if (!Array.isArray(value)) {\n      nodeName =\n      /** @type {import(\"../geom/Geometry.js\").default} */\n      value.getType();\n\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n\n    return createElementNS(this.namespace, nodeName);\n  };\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n\n\n  GML3.prototype.writeGeometryNode = function (geometry, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var geom = createElementNS(this.namespace, 'geom');\n    var context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_\n    };\n\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  };\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n   * @return {Element} Node.\n   * @api\n   */\n\n\n  GML3.prototype.writeFeaturesNode = function (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n    var context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType\n    };\n\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  };\n\n  return GML3;\n}(GMLBase);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\n\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch)\n  }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeReplacer(GML3.prototype.readLineStringSegment)\n  }\n};\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n * @return {string} Result.\n * @api\n */\n\nGML3.prototype.writeFeatures;\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember),\n    'polygonMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember),\n    'curveMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember)\n  }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope)\n  }\n};\nexport default GML3;","map":{"version":3,"mappings":"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","names":["GML2","GMLBase","GMLNS","GeometryLayout","LineString","MultiLineString","MultiPolygon","Polygon","OBJECT_PROPERTY_NODE_FACTORY","XML_SCHEMA_INSTANCE_URI","createElementNS","getAllTextContent","makeArrayPusher","makeChildAppender","makeReplacer","makeSimpleNodeFactory","parseNode","pushParseAndPop","pushSerializeAndPop","assign","createOrUpdate","extend","get","getProjection","readNonNegativeIntegerString","writeStringTextNode","transformExtentWithOptions","transformGeometryWithOptions","schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","__extends","opt_options","options","_super","_this","surface_","surface","undefined","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","hasZ","GML3","node","objectStack","lineStrings","MULTICURVE_PARSERS","multiLineString","polygons","MULTISURFACE_PARSERS","CURVEMEMBER_PARSERS","SURFACEMEMBER_PARSERS","PATCHES_PARSERS","SEGMENTS_PARSERS","FLAT_LINEAR_RINGS_PARSERS","GEOMETRY_FLAT_COORDINATES_PARSERS","flatLinearRing","RING_PARSERS","flatLinearRings","length","push","SURFACE_PARSERS","flatCoordinates","ends","i","ii","XYZ","CURVE_PARSERS","lineString","ENVELOPE_PARSERS","s","re","m","exec","parseFloat","substr","context","containerSrs","axisOrientation","proj","getAxisOrientation","y","x","len","replace","contextDimension","coords","split","dim","getAttribute","parentNode","z","value","srsDimension","setAttribute","srsName","point","getCoordinates","opt_srsName","opt_hasZ","points","parts","Array","getCoords_","join","geometry","pos","namespaceURI","appendChild","writePos_","extent","keys","values","ENVELOPE_SERIALIZERS","posList","writePosList_","opt_nodeName","exteriorWritten","nodeName","rings","getLinearRings","RING_SERIALIZERS","RING_NODE_FACTORY_","patches","writeSurfacePatches_","segments","writeCurveSegments_","getPolygons","SURFACEORPOLYGONMEMBER_SERIALIZERS","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","getPoints","POINTMEMBER_SERIALIZERS","lines","getLineStrings","LINESTRINGORCURVEMEMBER_SERIALIZERS","ring","linearRing","writeLinearRing","polygon","child","GEOMETRY_NODE_FACTORY_","writeSurfaceOrPolygon","writePoint","line","writeCurveOrLineString","item","isArray","GEOMETRY_SERIALIZERS","feature","fid","getId","featureNS","geometryName","getGeometryName","serializers","hasProperties","properties","getProperties","key","getSimplifiedGeometry","writeGeometryElement","features","featureType","writeFeatureElement","namespace","getType","adaptOptions","geom","setAttributeNS","writeFeatureMembers_","prototype","readFlatPos","readFlatPosList","readFlatCoordinates","interiorParser","exteriorParser","GEOMETRY_PARSERS","readPoint","readMultiPoint","readLineString","readMultiLineString","readLinearRing","readPolygon","readMultiPolygon","readSurface","readMultiSurface","readCurve","readMultiCurve","readEnvelope","curveMemberParser","surfaceMemberParser","readPatch","readSegment","readPolygonPatch","readLineStringSegment","writeFeatures","writeRing","writeSurfaceOrPolygonMember","writePointMember","writeLineStringOrCurveMember","writeMultiCurveOrLineString","writeMultiPoint","writeMultiSurfaceOrPolygon","writeEnvelope"],"sourceRoot":"","sources":["../src/format/GML3.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}