{"ast":null,"code":"/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n\n  return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\n\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n\n  return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\n\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n\n  return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\n\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n\n  return dest;\n}","map":{"version":3,"mappings":"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","names":["transform2D","flatCoordinates","offset","end","stride","transform","opt_dest","dest","i","j","x","y","length","rotate","angle","anchor","cos","Math","sin","anchorX","anchorY","deltaX","deltaY","k","scale","sx","sy","translate"],"sourceRoot":"","sources":["../../src/geom/flat/transform.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}