{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.map.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Extent\n */\n\n\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { always } from '../events/condition.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport { toUserExtent } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\n\nvar ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\n\nvar ExtentEvent =\n/** @class */\nfunction (_super) {\n  __extends(ExtentEvent, _super);\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n\n\n  function ExtentEvent(extent) {\n    var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n\n\n    _this.extent = extent;\n    return _this;\n  }\n\n  return ExtentEvent;\n}(Event);\n\nexport { ExtentEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\n\nvar Extent =\n/** @class */\nfunction (_super) {\n  __extends(Extent, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function Extent(opt_options) {\n    var _this = this;\n\n    var options = opt_options || {};\n    _this = _super.call(this,\n    /** @type {import(\"./Pointer.js\").Options} */\n    options) || this;\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.on;\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n\n    _this.un;\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n\n    _this.condition_ = options.condition ? options.condition : always;\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n\n    _this.extent_ = null;\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n\n    _this.pointerHandler_ = null;\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n\n    _this.pixelTolerance_ = options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n\n    _this.snappedToVertex_ = false;\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n\n    _this.extentFeature_ = null;\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n\n    _this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n\n\n    _this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n\n    _this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      _this.setExtent(opt_options.extent);\n    }\n\n    return _this;\n  }\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n\n\n  Extent.prototype.snapToVertex_ = function (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n\n    var sortByDistance = function sortByDistance(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) - squaredDistanceToSegment(pixelCoordinate, b);\n    };\n\n    var extent = this.getExtentInternal();\n\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      var segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      var closestSegment = segments[0];\n      var vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      var vertexPixel = map.getPixelFromCoordinateInternal(vertex); //if the distance is within tolerance, snap to the segment\n\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        var pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n\n        return vertex;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n\n\n  Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n    var vertex = this.snapToVertex_(pixel, map);\n\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n\n    this.createOrUpdatePointerFeature_(vertex);\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n\n\n  Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n    var extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n\n    return extentFeature;\n  };\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n\n\n  Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n    var vertexFeature = this.vertexFeature_;\n\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n\n    return vertexFeature;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n\n\n  Extent.prototype.handleEvent = function (mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    } //display pointer (if not dragging)\n\n\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    } //call pointer to determine up/down/drag\n\n\n    _super.prototype.handleEvent.call(this, mapBrowserEvent); //return false to stop propagation\n\n\n    return false;\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n    var extent = this.getExtentInternal();\n    var vertex = this.snapToVertex_(pixel, map); //find the extent corner opposite the passed corner\n\n    var getOpposingPoint = function getOpposingPoint(point) {\n      var x_ = null;\n      var y_ = null;\n\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n\n      return null;\n    };\n\n    if (vertex && extent) {\n      var x = vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      var y = vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null; //snap to point\n\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex)); //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n      } //no snap - new bbox\n\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n\n    return true; //event handled; start downup sequence\n  };\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n\n\n  Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      var pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n    this.pointerHandler_ = null; //If bbox is zero area, set to null;\n\n    var extent = this.getExtentInternal();\n\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n\n    return false; //Stop handling downup sequence\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n\n\n  Extent.prototype.setMap = function (map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n\n    _super.prototype.setMap.call(this, map);\n  };\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n\n\n  Extent.prototype.getExtent = function () {\n    return toUserExtent(this.getExtentInternal(), this.getMap().getView().getProjection());\n  };\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n\n\n  Extent.prototype.getExtentInternal = function () {\n    return this.extent_;\n  };\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n\n\n  Extent.prototype.setExtent = function (extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  };\n\n  return Extent;\n}(PointerInteraction);\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\n\n\nfunction getDefaultExtentStyleFunction() {\n  var style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\n\n\nfunction getDefaultPointerStyleFunction() {\n  var style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\n\n\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\n\n\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\n\n\nfunction getSegments(extent) {\n  return [[[extent[0], extent[1]], [extent[0], extent[3]]], [[extent[0], extent[3]], [extent[2], extent[3]]], [[extent[2], extent[3]], [extent[2], extent[1]]], [[extent[2], extent[1]], [extent[0], extent[1]]]];\n}\n\nexport default Extent;","map":{"version":3,"mappings":"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","names":["Event","Feature","GeometryType","MapBrowserEventType","Point","PointerInteraction","VectorLayer","VectorSource","always","boundingExtent","getArea","closestOnSegment","distance","coordinateDistance","squaredDistance","squaredCoordinateDistance","squaredDistanceToSegment","createEditingStyle","fromExtent","polygonFromExtent","toUserExtent","ExtentEventType","EXTENTCHANGED","__extends","extent","_super","_this","opt_options","options","on","once","un","condition_","condition","extent_","pointerHandler_","pixelTolerance_","pixelTolerance","undefined","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","source","useSpatialIndex","wrapX","style","boxStyle","getDefaultExtentStyleFunction","updateWhileAnimating","updateWhileInteracting","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","setExtent","Extent","pixel","map","pixelCoordinate","getCoordinateFromPixelInternal","sortByDistance","a","b","getExtentInternal","segments","getSegments","sort","closestSegment","vertex","vertexPixel","getPixelFromCoordinateInternal","pixel1","pixel2","squaredDist1","squaredDist2","dist","Math","sqrt","min","mapBrowserEvent","snapToVertex_","createOrUpdatePointerFeature_","extentFeature","getSource","addFeature","setGeometry","vertexFeature","geometry","getGeometry","setCoordinates","originalEvent","type","POINTERMOVE","handlingDownUpSequence","handlePointerMove_","handleEvent","call","getOpposingPoint","point","x_","y_","x","y","getPointHandler","getEdgeHandler","coordinate","setMap","getMap","getView","getProjection","createOrUpdateExtentFeature_","dispatchEvent","ExtentEvent","feature","resolution","POLYGON","POINT","fixedPoint","fixedP1","fixedP2"],"sourceRoot":"","sources":["../src/interaction/Extent.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}