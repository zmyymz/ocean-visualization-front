{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.join.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/WKT\n */\n\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport TextFeature from './TextFeature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, import(\"../geom/GeometryLayout.js\").default)}\n */\n\nvar GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon\n};\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type Type.\n * @property {number|string} [value] Value.\n * @property {number} position Position.\n */\n\n/**\n * @const\n * @type {string}\n */\n\nvar EMPTY = 'EMPTY';\n/**\n * @const\n * @type {string}\n */\n\nvar Z = 'Z';\n/**\n * @const\n * @type {string}\n */\n\nvar M = 'M';\n/**\n * @const\n * @type {string}\n */\n\nvar ZM = 'ZM';\n/**\n * @const\n * @enum {number}\n */\n\nvar TokenType = {\n  START: 0,\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6\n};\n/**\n * @const\n * @type {Object<string, string>}\n */\n\nvar WKTGeometryType = {};\n\nfor (var type in GeometryType) {\n  WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n/**\n * Class to tokenize a WKT string.\n */\n\n\nvar Lexer =\n/** @class */\nfunction () {\n  /**\n   * @param {string} wkt WKT string.\n   */\n  function Lexer(wkt) {\n    /**\n     * @type {string}\n     */\n    this.wkt = wkt;\n    /**\n     * @type {number}\n     * @private\n     */\n\n    this.index_ = -1;\n  }\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is alphabetic.\n   * @private\n   */\n\n\n  Lexer.prototype.isAlpha_ = function (c) {\n    return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n  };\n  /**\n   * @param {string} c Character.\n   * @param {boolean} [opt_decimal] Whether the string number\n   *     contains a dot, i.e. is a decimal number.\n   * @return {boolean} Whether the character is numeric.\n   * @private\n   */\n\n\n  Lexer.prototype.isNumeric_ = function (c, opt_decimal) {\n    var decimal = opt_decimal !== undefined ? opt_decimal : false;\n    return c >= '0' && c <= '9' || c == '.' && !decimal;\n  };\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is whitespace.\n   * @private\n   */\n\n\n  Lexer.prototype.isWhiteSpace_ = function (c) {\n    return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n  };\n  /**\n   * @return {string} Next string character.\n   * @private\n   */\n\n\n  Lexer.prototype.nextChar_ = function () {\n    return this.wkt.charAt(++this.index_);\n  };\n  /**\n   * Fetch and return the next token.\n   * @return {Token} Next string token.\n   */\n\n\n  Lexer.prototype.nextToken = function () {\n    var c = this.nextChar_();\n    var position = this.index_;\n    /** @type {number|string} */\n\n    var value = c;\n    var type;\n\n    if (c == '(') {\n      type = TokenType.LEFT_PAREN;\n    } else if (c == ',') {\n      type = TokenType.COMMA;\n    } else if (c == ')') {\n      type = TokenType.RIGHT_PAREN;\n    } else if (this.isNumeric_(c) || c == '-') {\n      type = TokenType.NUMBER;\n      value = this.readNumber_();\n    } else if (this.isAlpha_(c)) {\n      type = TokenType.TEXT;\n      value = this.readText_();\n    } else if (this.isWhiteSpace_(c)) {\n      return this.nextToken();\n    } else if (c === '') {\n      type = TokenType.EOF;\n    } else {\n      throw new Error('Unexpected character: ' + c);\n    }\n\n    return {\n      position: position,\n      value: value,\n      type: type\n    };\n  };\n  /**\n   * @return {number} Numeric token value.\n   * @private\n   */\n\n\n  Lexer.prototype.readNumber_ = function () {\n    var c;\n    var index = this.index_;\n    var decimal = false;\n    var scientificNotation = false;\n\n    do {\n      if (c == '.') {\n        decimal = true;\n      } else if (c == 'e' || c == 'E') {\n        scientificNotation = true;\n      }\n\n      c = this.nextChar_();\n    } while (this.isNumeric_(c, decimal) || // if we haven't detected a scientific number before, 'e' or 'E'\n    // hint that we should continue to read\n    !scientificNotation && (c == 'e' || c == 'E') || // once we know that we have a scientific number, both '-' and '+'\n    // are allowed\n    scientificNotation && (c == '-' || c == '+'));\n\n    return parseFloat(this.wkt.substring(index, this.index_--));\n  };\n  /**\n   * @return {string} String token value.\n   * @private\n   */\n\n\n  Lexer.prototype.readText_ = function () {\n    var c;\n    var index = this.index_;\n\n    do {\n      c = this.nextChar_();\n    } while (this.isAlpha_(c));\n\n    return this.wkt.substring(index, this.index_--).toUpperCase();\n  };\n\n  return Lexer;\n}();\n/**\n * Class to parse the tokens from the WKT string.\n */\n\n\nvar Parser =\n/** @class */\nfunction () {\n  /**\n   * @param {Lexer} lexer The lexer.\n   */\n  function Parser(lexer) {\n    /**\n     * @type {Lexer}\n     * @private\n     */\n    this.lexer_ = lexer;\n    /**\n     * @type {Token}\n     * @private\n     */\n\n    this.token_ = {\n      position: 0,\n      type: TokenType.START\n    };\n    /**\n     * @type {import(\"../geom/GeometryLayout.js\").default}\n     * @private\n     */\n\n    this.layout_ = GeometryLayout.XY;\n  }\n  /**\n   * Fetch the next token form the lexer and replace the active token.\n   * @private\n   */\n\n\n  Parser.prototype.consume_ = function () {\n    this.token_ = this.lexer_.nextToken();\n  };\n  /**\n   * Tests if the given type matches the type of the current token.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n\n\n  Parser.prototype.isTokenType = function (type) {\n    return this.token_.type == type;\n  };\n  /**\n   * If the given type matches the current token, consume it.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n\n\n  Parser.prototype.match = function (type) {\n    var isMatch = this.isTokenType(type);\n\n    if (isMatch) {\n      this.consume_();\n    }\n\n    return isMatch;\n  };\n  /**\n   * Try to parse the tokens provided by the lexer.\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   */\n\n\n  Parser.prototype.parse = function () {\n    this.consume_();\n    return this.parseGeometry_();\n  };\n  /**\n   * Try to parse the dimensional info.\n   * @return {import(\"../geom/GeometryLayout.js\").default} The layout.\n   * @private\n   */\n\n\n  Parser.prototype.parseGeometryLayout_ = function () {\n    var layout = GeometryLayout.XY;\n    var dimToken = this.token_;\n\n    if (this.isTokenType(TokenType.TEXT)) {\n      var dimInfo = dimToken.value;\n\n      if (dimInfo === Z) {\n        layout = GeometryLayout.XYZ;\n      } else if (dimInfo === M) {\n        layout = GeometryLayout.XYM;\n      } else if (dimInfo === ZM) {\n        layout = GeometryLayout.XYZM;\n      }\n\n      if (layout !== GeometryLayout.XY) {\n        this.consume_();\n      }\n    }\n\n    return layout;\n  };\n  /**\n   * @return {Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n   * @private\n   */\n\n\n  Parser.prototype.parseGeometryCollectionText_ = function () {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      var geometries = [];\n\n      do {\n        geometries.push(this.parseGeometry_());\n      } while (this.match(TokenType.COMMA));\n\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return geometries;\n      }\n    }\n\n    throw new Error(this.formatErrorMessage_());\n  };\n  /**\n   * @return {Array<number>} All values in a point.\n   * @private\n   */\n\n\n  Parser.prototype.parsePointText_ = function () {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      var coordinates = this.parsePoint_();\n\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n\n    throw new Error(this.formatErrorMessage_());\n  };\n  /**\n   * @return {Array<Array<number>>} All points in a linestring.\n   * @private\n   */\n\n\n  Parser.prototype.parseLineStringText_ = function () {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      var coordinates = this.parsePointList_();\n\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n\n    throw new Error(this.formatErrorMessage_());\n  };\n  /**\n   * @return {Array<Array<Array<number>>>} All points in a polygon.\n   * @private\n   */\n\n\n  Parser.prototype.parsePolygonText_ = function () {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      var coordinates = this.parseLineStringTextList_();\n\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n\n    throw new Error(this.formatErrorMessage_());\n  };\n  /**\n   * @return {Array<Array<number>>} All points in a multipoint.\n   * @private\n   */\n\n\n  Parser.prototype.parseMultiPointText_ = function () {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      var coordinates = void 0;\n\n      if (this.token_.type == TokenType.LEFT_PAREN) {\n        coordinates = this.parsePointTextList_();\n      } else {\n        coordinates = this.parsePointList_();\n      }\n\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n\n    throw new Error(this.formatErrorMessage_());\n  };\n  /**\n   * @return {Array<Array<Array<number>>>} All linestring points\n   *                                          in a multilinestring.\n   * @private\n   */\n\n\n  Parser.prototype.parseMultiLineStringText_ = function () {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      var coordinates = this.parseLineStringTextList_();\n\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n\n    throw new Error(this.formatErrorMessage_());\n  };\n  /**\n   * @return {Array<Array<Array<Array<number>>>>} All polygon points in a multipolygon.\n   * @private\n   */\n\n\n  Parser.prototype.parseMultiPolygonText_ = function () {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      var coordinates = this.parsePolygonTextList_();\n\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n\n    throw new Error(this.formatErrorMessage_());\n  };\n  /**\n   * @return {Array<number>} A point.\n   * @private\n   */\n\n\n  Parser.prototype.parsePoint_ = function () {\n    var coordinates = [];\n    var dimensions = this.layout_.length;\n\n    for (var i = 0; i < dimensions; ++i) {\n      var token = this.token_;\n\n      if (this.match(TokenType.NUMBER)) {\n        coordinates.push(\n        /** @type {number} */\n        token.value);\n      } else {\n        break;\n      }\n    }\n\n    if (coordinates.length == dimensions) {\n      return coordinates;\n    }\n\n    throw new Error(this.formatErrorMessage_());\n  };\n  /**\n   * @return {Array<Array<number>>} An array of points.\n   * @private\n   */\n\n\n  Parser.prototype.parsePointList_ = function () {\n    var coordinates = [this.parsePoint_()];\n\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePoint_());\n    }\n\n    return coordinates;\n  };\n  /**\n   * @return {Array<Array<number>>} An array of points.\n   * @private\n   */\n\n\n  Parser.prototype.parsePointTextList_ = function () {\n    var coordinates = [this.parsePointText_()];\n\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePointText_());\n    }\n\n    return coordinates;\n  };\n  /**\n   * @return {Array<Array<Array<number>>>} An array of points.\n   * @private\n   */\n\n\n  Parser.prototype.parseLineStringTextList_ = function () {\n    var coordinates = [this.parseLineStringText_()];\n\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parseLineStringText_());\n    }\n\n    return coordinates;\n  };\n  /**\n   * @return {Array<Array<Array<Array<number>>>>} An array of points.\n   * @private\n   */\n\n\n  Parser.prototype.parsePolygonTextList_ = function () {\n    var coordinates = [this.parsePolygonText_()];\n\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePolygonText_());\n    }\n\n    return coordinates;\n  };\n  /**\n   * @return {boolean} Whether the token implies an empty geometry.\n   * @private\n   */\n\n\n  Parser.prototype.isEmptyGeometry_ = function () {\n    var isEmpty = this.isTokenType(TokenType.TEXT) && this.token_.value == EMPTY;\n\n    if (isEmpty) {\n      this.consume_();\n    }\n\n    return isEmpty;\n  };\n  /**\n   * Create an error message for an unexpected token error.\n   * @return {string} Error message.\n   * @private\n   */\n\n\n  Parser.prototype.formatErrorMessage_ = function () {\n    return 'Unexpected `' + this.token_.value + '` at position ' + this.token_.position + ' in `' + this.lexer_.wkt + '`';\n  };\n  /**\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   * @private\n   */\n\n\n  Parser.prototype.parseGeometry_ = function () {\n    var token = this.token_;\n\n    if (this.match(TokenType.TEXT)) {\n      var geomType =\n      /** @type {string} */\n      token.value;\n      this.layout_ = this.parseGeometryLayout_();\n      var isEmpty = this.isEmptyGeometry_();\n\n      if (geomType == 'GEOMETRYCOLLECTION') {\n        if (isEmpty) {\n          return new GeometryCollection([]);\n        }\n\n        var geometries = this.parseGeometryCollectionText_();\n        return new GeometryCollection(geometries);\n      } else {\n        var ctor = GeometryConstructor[geomType];\n\n        if (!ctor) {\n          throw new Error('Invalid geometry type: ' + geomType);\n        }\n\n        var coordinates = void 0;\n\n        if (isEmpty) {\n          if (geomType == 'POINT') {\n            coordinates = [NaN, NaN];\n          } else {\n            coordinates = [];\n          }\n        } else {\n          switch (geomType) {\n            case 'POINT':\n              {\n                coordinates = this.parsePointText_();\n                break;\n              }\n\n            case 'LINESTRING':\n              {\n                coordinates = this.parseLineStringText_();\n                break;\n              }\n\n            case 'POLYGON':\n              {\n                coordinates = this.parsePolygonText_();\n                break;\n              }\n\n            case 'MULTIPOINT':\n              {\n                coordinates = this.parseMultiPointText_();\n                break;\n              }\n\n            case 'MULTILINESTRING':\n              {\n                coordinates = this.parseMultiLineStringText_();\n                break;\n              }\n\n            case 'MULTIPOLYGON':\n              {\n                coordinates = this.parseMultiPolygonText_();\n                break;\n              }\n\n            default:\n              break;\n          }\n        }\n\n        return new ctor(coordinates, this.layout_);\n      }\n    }\n\n    throw new Error(this.formatErrorMessage_());\n  };\n\n  return Parser;\n}();\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\n\n\nvar WKT =\n/** @class */\nfunction (_super) {\n  __extends(WKT, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function WKT(opt_options) {\n    var _this = _super.call(this) || this;\n\n    var options = opt_options ? opt_options : {};\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n\n    _this.splitCollection_ = options.splitCollection !== undefined ? options.splitCollection : false;\n    return _this;\n  }\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {import(\"../geom/Geometry.js\").default}\n   *     The geometry created.\n   * @private\n   */\n\n\n  WKT.prototype.parse_ = function (wkt) {\n    var lexer = new Lexer(wkt);\n    var parser = new Parser(lexer);\n    return parser.parse();\n  };\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n\n\n  WKT.prototype.readFeatureFromText = function (text, opt_options) {\n    var geom = this.readGeometryFromText(text, opt_options);\n    var feature = new Feature();\n    feature.setGeometry(geom);\n    return feature;\n  };\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n\n\n  WKT.prototype.readFeaturesFromText = function (text, opt_options) {\n    var geometries = [];\n    var geometry = this.readGeometryFromText(text, opt_options);\n\n    if (this.splitCollection_ && geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n      geometries =\n      /** @type {GeometryCollection} */\n      geometry.getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n\n    var features = [];\n\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      var feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n\n    return features;\n  };\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n\n\n  WKT.prototype.readGeometryFromText = function (text, opt_options) {\n    var geometry = this.parse_(text);\n    return transformGeometryWithOptions(geometry, false, opt_options);\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n\n\n  WKT.prototype.writeFeatureText = function (feature, opt_options) {\n    var geometry = feature.getGeometry();\n\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    }\n\n    return '';\n  };\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n\n\n  WKT.prototype.writeFeaturesText = function (features, opt_options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], opt_options);\n    }\n\n    var geometries = [];\n\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n\n    var collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, opt_options);\n  };\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n\n\n  WKT.prototype.writeGeometryText = function (geometry, opt_options) {\n    return encode(transformGeometryWithOptions(geometry, true, opt_options));\n  };\n\n  return WKT;\n}(TextFeature);\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\n\n\nfunction encodePointGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n\n  if (coordinates.length === 0) {\n    return '';\n  }\n\n  return coordinates.join(' ');\n}\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\n\n\nfunction encodeMultiPointGeometry(geom) {\n  var array = [];\n  var components = geom.getPoints();\n\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n\n  return array.join(',');\n}\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\n\n\nfunction encodeGeometryCollectionGeometry(geom) {\n  var array = [];\n  var geoms = geom.getGeometries();\n\n  for (var i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n\n  return array.join(',');\n}\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\n\n\nfunction encodeLineStringGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n  var array = [];\n\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n\n  return array.join(',');\n}\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\n\n\nfunction encodeMultiLineStringGeometry(geom) {\n  var array = [];\n  var components = geom.getLineStrings();\n\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n\n  return array.join(',');\n}\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\n\n\nfunction encodePolygonGeometry(geom) {\n  var array = [];\n  var rings = geom.getLinearRings();\n\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n\n  return array.join(',');\n}\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\n\n\nfunction encodeMultiPolygonGeometry(geom) {\n  var array = [];\n  var components = geom.getPolygons();\n\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n\n  return array.join(',');\n}\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\n\n\nfunction encodeGeometryLayout(geom) {\n  var layout = geom.getLayout();\n  var dimInfo = '';\n\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n\n  return dimInfo;\n}\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\n\n\nvar GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry\n};\n/**\n * Encode a geometry as WKT.\n * @param {import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\n\nfunction encode(geom) {\n  var type = geom.getType();\n  var geometryEncoder = GeometryEncoder[type];\n  var enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n\n  if (typeof\n  /** @type {?} */\n  geom.getFlatCoordinates === 'function') {\n    var dimInfo = encodeGeometryLayout(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */\n    geom);\n\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n\n  return type + '(' + enc + ')';\n}\n\nexport default WKT;","map":{"version":3,"mappings":"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","names":["Feature","GeometryCollection","GeometryLayout","GeometryType","LineString","MultiLineString","MultiPoint","MultiPolygon","Point","Polygon","TextFeature","transformGeometryWithOptions","GeometryConstructor","EMPTY","Z","M","ZM","TokenType","START","TEXT","LEFT_PAREN","RIGHT_PAREN","NUMBER","COMMA","EOF","WKTGeometryType","type","toUpperCase","wkt","index_","Lexer","c","opt_decimal","decimal","undefined","charAt","nextChar_","position","value","isNumeric_","readNumber_","isAlpha_","readText_","isWhiteSpace_","nextToken","Error","index","scientificNotation","parseFloat","substring","lexer","lexer_","token_","layout_","XY","Parser","isMatch","isTokenType","consume_","parseGeometry_","layout","dimToken","dimInfo","XYZ","XYM","XYZM","match","geometries","push","formatErrorMessage_","coordinates","parsePoint_","parsePointList_","parseLineStringTextList_","parsePointTextList_","parsePolygonTextList_","dimensions","length","i","token","parsePointText_","parseLineStringText_","parsePolygonText_","isEmpty","geomType","parseGeometryLayout_","isEmptyGeometry_","parseGeometryCollectionText_","ctor","NaN","parseMultiPointText_","parseMultiLineStringText_","parseMultiPolygonText_","__extends","opt_options","_super","options","_this","splitCollection_","splitCollection","WKT","parser","parse","text","geom","readGeometryFromText","feature","setGeometry","geometry","getType","GEOMETRY_COLLECTION","getGeometriesArray","features","ii","parse_","getGeometry","writeGeometryText","writeFeatureText","collection","encode","encodePointGeometry","getCoordinates","join","encodeMultiPointGeometry","array","components","getPoints","encodeGeometryCollectionGeometry","geoms","getGeometries","encodeLineStringGeometry","encodeMultiLineStringGeometry","getLineStrings","encodePolygonGeometry","rings","getLinearRings","encodeMultiPolygonGeometry","getPolygons","encodeGeometryLayout","getLayout","GeometryEncoder","geometryEncoder","enc","getFlatCoordinates"],"sourceRoot":"","sources":["../src/format/WKT.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}