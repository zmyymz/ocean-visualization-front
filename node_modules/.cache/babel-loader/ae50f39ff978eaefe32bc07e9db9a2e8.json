{"ast":null,"code":"/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic =\n/** @class */\nfunction () {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  function Kinetic(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.minVelocity_ = minVelocity;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.delay_ = delay;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    this.points_ = [];\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.angle_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.initialVelocity_ = 0;\n  }\n  /**\n   * FIXME empty description for jsdoc\n   */\n\n\n  Kinetic.prototype.begin = function () {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  };\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n\n\n  Kinetic.prototype.update = function (x, y) {\n    this.points_.push(x, y, Date.now());\n  };\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n\n\n  Kinetic.prototype.end = function () {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n\n    var delay = Date.now() - this.delay_;\n    var lastIndex = this.points_.length - 3;\n\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    } // get the first point which still falls into the delay time\n\n\n    var firstIndex = lastIndex - 3;\n\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2]; // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    var dx = this.points_[lastIndex] - this.points_[firstIndex];\n    var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  };\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n\n\n  Kinetic.prototype.getDistance = function () {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  };\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n\n\n  Kinetic.prototype.getAngle = function () {\n    return this.angle_;\n  };\n\n  return Kinetic;\n}();\n\nexport default Kinetic;","map":{"version":3,"mappings":"AAAA;;;;AAIA;;;;;;AAMA;AAAA;AAAA;AACE;;;;;;AAMA,mBAAYA,KAAZ,EAAmBC,WAAnB,EAAgCC,KAAhC,EAAqC;AACnC;;;;AAIA,SAAKC,MAAL,GAAcH,KAAd;AAEA;;;;;AAIA,SAAKI,YAAL,GAAoBH,WAApB;AAEA;;;;;AAIA,SAAKI,MAAL,GAAcH,KAAd;AAEA;;;;;AAIA,SAAKI,OAAL,GAAe,EAAf;AAEA;;;;;AAIA,SAAKC,MAAL,GAAc,CAAd;AAEA;;;;;AAIA,SAAKC,gBAAL,GAAwB,CAAxB;AACD;AAED;;;;;AAGAC;AACE,SAAKH,OAAL,CAAaI,MAAb,GAAsB,CAAtB;AACA,SAAKH,MAAL,GAAc,CAAd;AACA,SAAKC,gBAAL,GAAwB,CAAxB;AACD,GAJD;AAMA;;;;;;AAIAC,uCAAOE,CAAP,EAAUC,CAAV,EAAW;AACT,SAAKN,OAAL,CAAaO,IAAb,CAAkBF,CAAlB,EAAqBC,CAArB,EAAwBE,IAAI,CAACC,GAAL,EAAxB;AACD,GAFD;AAIA;;;;;AAGAN;AACE,QAAI,KAAKH,OAAL,CAAaI,MAAb,GAAsB,CAA1B,EAA6B;AAC3B;AACA;AACA,aAAO,KAAP;AACD;;AACD,QAAMR,KAAK,GAAGY,IAAI,CAACC,GAAL,KAAa,KAAKV,MAAhC;AACA,QAAMW,SAAS,GAAG,KAAKV,OAAL,CAAaI,MAAb,GAAsB,CAAxC;;AACA,QAAI,KAAKJ,OAAL,CAAaU,SAAS,GAAG,CAAzB,IAA8Bd,KAAlC,EAAyC;AACvC;AACA;AACA,aAAO,KAAP;AACD,KAZH,CAcE;;;AACA,QAAIe,UAAU,GAAGD,SAAS,GAAG,CAA7B;;AACA,WAAOC,UAAU,GAAG,CAAb,IAAkB,KAAKX,OAAL,CAAaW,UAAU,GAAG,CAA1B,IAA+Bf,KAAxD,EAA+D;AAC7De,gBAAU,IAAI,CAAd;AACD;;AAED,QAAMC,QAAQ,GAAG,KAAKZ,OAAL,CAAaU,SAAS,GAAG,CAAzB,IAA8B,KAAKV,OAAL,CAAaW,UAAU,GAAG,CAA1B,CAA/C,CApBF,CAqBE;AACA;AACA;;AACA,QAAIC,QAAQ,GAAG,OAAO,EAAtB,EAA0B;AACxB,aAAO,KAAP;AACD;;AAED,QAAMC,EAAE,GAAG,KAAKb,OAAL,CAAaU,SAAb,IAA0B,KAAKV,OAAL,CAAaW,UAAb,CAArC;AACA,QAAMG,EAAE,GAAG,KAAKd,OAAL,CAAaU,SAAS,GAAG,CAAzB,IAA8B,KAAKV,OAAL,CAAaW,UAAU,GAAG,CAA1B,CAAzC;AACA,SAAKV,MAAL,GAAcc,IAAI,CAACC,KAAL,CAAWF,EAAX,EAAeD,EAAf,CAAd;AACA,SAAKX,gBAAL,GAAwBa,IAAI,CAACE,IAAL,CAAUJ,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAzB,IAA+BF,QAAvD;AACA,WAAO,KAAKV,gBAAL,GAAwB,KAAKJ,YAApC;AACD,GAjCD;AAmCA;;;;;AAGAK;AACE,WAAO,CAAC,KAAKL,YAAL,GAAoB,KAAKI,gBAA1B,IAA8C,KAAKL,MAA1D;AACD,GAFD;AAIA;;;;;AAGAM;AACE,WAAO,KAAKF,MAAZ;AACD,GAFD;;AAGF;AAAC,CAjHD;;AAmHA,eAAeE,OAAf","names":["decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","Kinetic","length","x","y","push","Date","now","lastIndex","firstIndex","duration","dx","dy","Math","atan2","sqrt"],"sourceRoot":"","sources":["src/Kinetic.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}