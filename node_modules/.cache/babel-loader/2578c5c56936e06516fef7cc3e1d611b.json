{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.object.keys.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/MapboxVector\n */\n\n\nimport BaseEvent from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport MVT from '../format/MVT.js';\nimport SourceState from '../source/State.js';\nimport VectorTileLayer from '../layer/VectorTile.js';\nimport VectorTileSource from '../source/VectorTile.js';\nimport { applyBackground, applyStyle, setupVectorSource } from 'ol-mapbox-style';\nvar mapboxBaseUrl = 'https://api.mapbox.com';\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\n\nexport function getMapboxPath(url) {\n  var startsWith = 'mapbox://';\n\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n\n  return url.slice(startsWith.length);\n}\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\n\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  var mapboxPath = getMapboxPath(url);\n\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n\n  var startsWith = 'sprites/';\n\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(\"unexpected sprites url: \".concat(url));\n  }\n\n  var sprite = mapboxPath.slice(startsWith.length);\n  return \"\".concat(mapboxBaseUrl, \"/styles/v1/\").concat(sprite, \"/sprite?access_token=\").concat(token);\n}\n/**\n * Turns mapbox:// glyphs URLs into resolvable URLs.\n * @param {string} url The glyphs URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\n\nexport function normalizeGlyphsUrl(url, token, styleUrl) {\n  var mapboxPath = getMapboxPath(url);\n\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n\n  var startsWith = 'fonts/';\n\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(\"unexpected fonts url: \".concat(url));\n  }\n\n  var font = mapboxPath.slice(startsWith.length);\n  return \"\".concat(mapboxBaseUrl, \"/fonts/v1/\").concat(font, \"/0-255.pbf?access_token=\").concat(token);\n}\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\n\nexport function normalizeStyleUrl(url, token) {\n  var mapboxPath = getMapboxPath(url);\n\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n\n  var startsWith = 'styles/';\n\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(\"unexpected style url: \".concat(url));\n  }\n\n  var style = mapboxPath.slice(startsWith.length);\n  return \"\".concat(mapboxBaseUrl, \"/styles/v1/\").concat(style, \"?&access_token=\").concat(token);\n}\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\n\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  var urlObject = new URL(url, styleUrl);\n  var mapboxPath = getMapboxPath(url);\n\n  if (!mapboxPath) {\n    if (!token) {\n      return decodeURI(urlObject.href);\n    }\n\n    urlObject.searchParams.set(tokenParam, token);\n    return decodeURI(urlObject.href);\n  }\n\n  return \"https://{a-d}.tiles.mapbox.com/v4/\".concat(mapboxPath, \"/{z}/{x}/{y}.vector.pbf?access_token=\").concat(token);\n}\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\n\nvar ErrorEvent =\n/** @class */\nfunction (_super) {\n  __extends(ErrorEvent, _super);\n  /**\n   * @param {Error} error error object.\n   */\n\n\n  function ErrorEvent(error) {\n    var _this = _super.call(this, EventType.ERROR) || this;\n    /**\n     * @type {Error}\n     */\n\n\n    _this.error = error;\n    return _this;\n  }\n\n  return ErrorEvent;\n}(BaseEvent);\n/**\n * @typedef {Object} StyleObject\n * @property {Object<string, SourceObject>} sources The style sources.\n * @property {string} sprite The sprite URL.\n * @property {string} glyphs The glyphs URL.\n * @property {Array<LayerObject>} layers The style layers.\n */\n\n/**\n * @typedef {Object} SourceObject\n * @property {string} url The source URL.\n * @property {SourceType} type The source type.\n * @property {Array<string>} [tiles] TileJSON tiles.\n */\n\n/**\n * The Mapbox source type.\n * @enum {string}\n */\n\n\nvar SourceType = {\n  VECTOR: 'vector'\n};\n/**\n * @typedef {Object} LayerObject\n * @property {string} id The layer id.\n * @property {string} type The layer type.\n * @property {string} source The source id.\n * @property {Object} layout The layout.\n * @property {Object} paint The paint.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox style object will be used. Set to `false` to prevent\n * the Mapbox style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * A vector tile layer based on a Mapbox style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here'\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\n\nvar MapboxVectorLayer =\n/** @class */\nfunction (_super) {\n  __extends(MapboxVectorLayer, _super);\n  /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n\n\n  function MapboxVectorLayer(options) {\n    var _this = this;\n\n    var declutter = 'declutter' in options ? options.declutter : true;\n    var source = new VectorTileSource({\n      state: SourceState.LOADING,\n      format: new MVT()\n    });\n    _this = _super.call(this, {\n      source: source,\n      background: options.background,\n      declutter: declutter,\n      className: options.className,\n      opacity: options.opacity,\n      visible: options.visible,\n      zIndex: options.zIndex,\n      minResolution: options.minResolution,\n      maxResolution: options.maxResolution,\n      minZoom: options.minZoom,\n      maxZoom: options.maxZoom,\n      renderOrder: options.renderOrder,\n      renderBuffer: options.renderBuffer,\n      renderMode: options.renderMode,\n      map: options.map,\n      updateWhileAnimating: options.updateWhileAnimating,\n      updateWhileInteracting: options.updateWhileInteracting,\n      preload: options.preload,\n      useInterimTilesOnError: options.useInterimTilesOnError,\n      properties: options.properties\n    }) || this;\n    _this.setMaxResolutionFromTileGrid_ = options.maxResolution === undefined && options.minZoom === undefined;\n    _this.sourceId = options.source;\n    _this.layers = options.layers;\n\n    if (options.accessToken) {\n      _this.accessToken = options.accessToken;\n    } else {\n      var url = new URL(options.styleUrl, location.href); // The last search parameter is the access token\n\n      url.searchParams.forEach(function (value, key) {\n        _this.accessToken = value;\n        _this.accessTokenParam_ = key;\n      });\n    }\n\n    _this.fetchStyle(options.styleUrl);\n\n    return _this;\n  }\n  /**\n   * Fetch the style object.\n   * @param {string} styleUrl The URL of the style to load.\n   * @protected\n   */\n\n\n  MapboxVectorLayer.prototype.fetchStyle = function (styleUrl) {\n    var _this = this;\n\n    var url = normalizeStyleUrl(styleUrl, this.accessToken);\n    fetch(url).then(function (response) {\n      if (!response.ok) {\n        throw new Error(\"unexpected response when fetching style: \".concat(response.status));\n      }\n\n      return response.json();\n    }).then(function (style) {\n      _this.onStyleLoad(style, url.startsWith('data:') ? location.href : url);\n    }).catch(function (error) {\n      _this.handleError(error);\n    });\n  };\n  /**\n   * Handle the loaded style object.\n   * @param {StyleObject} style The loaded style.\n   * @param {string} styleUrl The URL of the style.\n   * @protected\n   */\n\n\n  MapboxVectorLayer.prototype.onStyleLoad = function (style, styleUrl) {\n    var _this = this;\n\n    var sourceId;\n    var sourceIdOrLayersList;\n\n    if (this.layers) {\n      // confirm all layers share the same source\n      var lookup = {};\n\n      for (var i = 0; i < style.layers.length; ++i) {\n        var layer = style.layers[i];\n\n        if (layer.source) {\n          lookup[layer.id] = layer.source;\n        }\n      }\n\n      var firstSource = void 0;\n\n      for (var i = 0; i < this.layers.length; ++i) {\n        var candidate = lookup[this.layers[i]];\n\n        if (!candidate) {\n          this.handleError(new Error(\"could not find source for \".concat(this.layers[i])));\n          return;\n        }\n\n        if (!firstSource) {\n          firstSource = candidate;\n        } else if (firstSource !== candidate) {\n          this.handleError(new Error(\"layers can only use a single source, found \".concat(firstSource, \" and \").concat(candidate)));\n          return;\n        }\n      }\n\n      sourceId = firstSource;\n      sourceIdOrLayersList = this.layers;\n    } else {\n      sourceId = this.sourceId;\n      sourceIdOrLayersList = sourceId;\n    }\n\n    if (!sourceIdOrLayersList) {\n      // default to the first source in the style\n      sourceId = Object.keys(style.sources)[0];\n      sourceIdOrLayersList = sourceId;\n    }\n\n    if (style.sprite) {\n      style.sprite = normalizeSpriteUrl(style.sprite, this.accessToken, styleUrl);\n    }\n\n    if (style.glyphs) {\n      style.glyphs = normalizeGlyphsUrl(style.glyphs, this.accessToken, styleUrl);\n    }\n\n    var styleSource = style.sources[sourceId];\n\n    if (styleSource.type !== SourceType.VECTOR) {\n      this.handleError(new Error(\"only works for vector sources, found \".concat(styleSource.type)));\n      return;\n    }\n\n    var source = this.getSource();\n\n    if (styleSource.url && styleSource.url.indexOf('mapbox://') === 0) {\n      // Tile source url, handle it directly\n      source.setUrl(normalizeSourceUrl(styleSource.url, this.accessToken, this.accessTokenParam_, styleUrl));\n      applyStyle(this, style, sourceIdOrLayersList).then(function () {\n        _this.configureSource(source, style);\n      }).catch(function (error) {\n        _this.handleError(error);\n      });\n    } else {\n      // TileJSON url, let ol-mapbox-style handle it\n      if (styleSource.tiles) {\n        styleSource.tiles = styleSource.tiles.map(function (url) {\n          return normalizeSourceUrl(url, _this.accessToken, _this.accessTokenParam_, styleUrl);\n        });\n      }\n\n      setupVectorSource(styleSource, styleSource.url ? normalizeSourceUrl(styleSource.url, this.accessToken, this.accessTokenParam_, styleUrl) : undefined).then(function (source) {\n        applyStyle(_this, style, sourceIdOrLayersList).then(function () {\n          _this.configureSource(source, style);\n        }).catch(function (error) {\n          _this.configureSource(source, style);\n\n          _this.handleError(error);\n        });\n      });\n    }\n  };\n  /**\n   * Applies configuration from the provided source to this layer's source,\n   * and reconfigures the loader to add a feature that renders the background,\n   * if the style is configured with a background.\n   * @param {import(\"../source/VectorTile.js\").default} source The source to configure from.\n   * @param {StyleObject} style The style to configure the background from.\n   */\n\n\n  MapboxVectorLayer.prototype.configureSource = function (source, style) {\n    var targetSource = this.getSource();\n\n    if (source !== targetSource) {\n      targetSource.setAttributions(source.getAttributions());\n      targetSource.setTileUrlFunction(source.getTileUrlFunction());\n      targetSource.setTileLoadFunction(source.getTileLoadFunction());\n      targetSource.tileGrid = source.tileGrid;\n    }\n\n    if (this.getBackground() === undefined) {\n      applyBackground(this, style);\n    }\n\n    if (this.setMaxResolutionFromTileGrid_) {\n      var tileGrid = targetSource.getTileGrid();\n      this.setMaxResolution(tileGrid.getResolution(tileGrid.getMinZoom()));\n    }\n\n    targetSource.setState(SourceState.READY);\n  };\n  /**\n   * Handle configuration or loading error.\n   * @param {Error} error The error.\n   * @protected\n   */\n\n\n  MapboxVectorLayer.prototype.handleError = function (error) {\n    this.dispatchEvent(new ErrorEvent(error));\n    var source = this.getSource();\n    source.setState(SourceState.ERROR);\n  };\n\n  return MapboxVectorLayer;\n}(VectorTileLayer);\n\nexport default MapboxVectorLayer;","map":{"version":3,"mappings":"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","names":["BaseEvent","EventType","MVT","SourceState","VectorTileLayer","VectorTileSource","applyBackground","applyStyle","setupVectorSource","mapboxBaseUrl","getMapboxPath","url","startsWith","indexOf","slice","length","normalizeSpriteUrl","token","styleUrl","mapboxPath","decodeURI","URL","href","Error","sprite","concat","normalizeGlyphsUrl","font","normalizeStyleUrl","location","style","normalizeSourceUrl","tokenParam","urlObject","searchParams","set","__extends","error","_super","ERROR","_this","SourceType","VECTOR","options","declutter","source","state","LOADING","format","background","className","opacity","visible","zIndex","minResolution","maxResolution","minZoom","maxZoom","renderOrder","renderBuffer","renderMode","map","updateWhileAnimating","updateWhileInteracting","preload","useInterimTilesOnError","properties","setMaxResolutionFromTileGrid_","undefined","sourceId","layers","accessToken","forEach","value","key","accessTokenParam_","fetchStyle","MapboxVectorLayer","fetch","then","response","ok","status","json","onStyleLoad","catch","handleError","sourceIdOrLayersList","lookup","i","layer","id","firstSource","candidate","Object","keys","sources","glyphs","styleSource","type","getSource","setUrl","configureSource","tiles","targetSource","setAttributions","getAttributions","setTileUrlFunction","getTileUrlFunction","setTileLoadFunction","getTileLoadFunction","tileGrid","getBackground","getTileGrid","setMaxResolution","getResolution","getMinZoom","setState","READY","dispatchEvent","ErrorEvent"],"sourceRoot":"","sources":["../src/layer/MapboxVector.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}