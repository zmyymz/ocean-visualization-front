{"ast":null,"code":"/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange =\n/** @class */\nfunction () {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  function TileRange(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n    /**\n     * @type {number}\n     */\n\n    this.maxX = maxX;\n    /**\n     * @type {number}\n     */\n\n    this.minY = minY;\n    /**\n     * @type {number}\n     */\n\n    this.maxY = maxY;\n  }\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n\n\n  TileRange.prototype.contains = function (tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  };\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n\n\n  TileRange.prototype.containsTileRange = function (tileRange) {\n    return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX && this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n  };\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n\n\n  TileRange.prototype.containsXY = function (x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  };\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n\n\n  TileRange.prototype.equals = function (tileRange) {\n    return this.minX == tileRange.minX && this.minY == tileRange.minY && this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n  };\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n\n\n  TileRange.prototype.extend = function (tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  };\n  /**\n   * @return {number} Height.\n   */\n\n\n  TileRange.prototype.getHeight = function () {\n    return this.maxY - this.minY + 1;\n  };\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n\n\n  TileRange.prototype.getSize = function () {\n    return [this.getWidth(), this.getHeight()];\n  };\n  /**\n   * @return {number} Width.\n   */\n\n\n  TileRange.prototype.getWidth = function () {\n    return this.maxX - this.minX + 1;\n  };\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n\n\n  TileRange.prototype.intersects = function (tileRange) {\n    return this.minX <= tileRange.maxX && this.maxX >= tileRange.minX && this.minY <= tileRange.maxY && this.maxY >= tileRange.minY;\n  };\n\n  return TileRange;\n}();\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\n\n\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\nexport default TileRange;","map":{"version":3,"mappings":"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","names":["minX","maxX","minY","maxY","TileRange","tileCoord","containsXY","tileRange","x","y","getWidth","getHeight","createOrUpdate","undefined"],"sourceRoot":"","sources":["src/TileRange.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}