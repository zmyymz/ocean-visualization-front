{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.slice.js\";\n\n/**\n * @module ol/style/Circle\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\n\nvar CircleStyle =\n/** @class */\nfunction (_super) {\n  __extends(CircleStyle, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function CircleStyle(opt_options) {\n    var options = opt_options ? opt_options : {};\n    return _super.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement: options.displacement !== undefined ? options.displacement : [0, 0]\n    }) || this;\n  }\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n\n\n  CircleStyle.prototype.clone = function () {\n    var scale = this.getScale();\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice()\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  };\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n\n\n  CircleStyle.prototype.setRadius = function (radius) {\n    this.radius_ = radius;\n    this.render();\n  };\n\n  return CircleStyle;\n}(RegularShape);\n\nexport default CircleStyle;","map":{"version":3,"mappings":";;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,OAAOA,YAAP,MAAyB,mBAAzB;AAEA;;;;;;;;;;;;;;AAcA;;;;;;AAKA;AAAA;AAAA;AAA0BC;AACxB;;;;;AAGA,uBAAYC,WAAZ,EAAuB;AACrB,QAAMC,OAAO,GAAGD,WAAW,GAAGA,WAAH,GAAiB,EAA5C;WAEAE,kBAAM;AACJC,YAAM,EAAEC,QADJ;AAEJC,UAAI,EAAEJ,OAAO,CAACI,IAFV;AAGJC,YAAM,EAAEL,OAAO,CAACK,MAHZ;AAIJC,YAAM,EAAEN,OAAO,CAACM,MAJZ;AAKJC,WAAK,EAAEP,OAAO,CAACO,KAAR,KAAkBC,SAAlB,GAA8BR,OAAO,CAACO,KAAtC,GAA8C,CALjD;AAMJE,cAAQ,EAAET,OAAO,CAACS,QAAR,KAAqBD,SAArB,GAAiCR,OAAO,CAACS,QAAzC,GAAoD,CAN1D;AAOJC,oBAAc,EACZV,OAAO,CAACU,cAAR,KAA2BF,SAA3B,GAAuCR,OAAO,CAACU,cAA/C,GAAgE,KAR9D;AASJC,kBAAY,EACVX,OAAO,CAACW,YAAR,KAAyBH,SAAzB,GAAqCR,OAAO,CAACW,YAA7C,GAA4D,CAAC,CAAD,EAAI,CAAJ;AAV1D,KAAN,KAWE;AACH;AAED;;;;;;;AAKAC;AACE,QAAML,KAAK,GAAG,KAAKM,QAAL,EAAd;AACA,QAAMC,KAAK,GAAG,IAAIF,WAAJ,CAAgB;AAC5BR,UAAI,EAAE,KAAKW,OAAL,KAAiB,KAAKA,OAAL,GAAeC,KAAf,EAAjB,GAA0CR,SADpB;AAE5BF,YAAM,EAAE,KAAKW,SAAL,KAAmB,KAAKA,SAAL,GAAiBD,KAAjB,EAAnB,GAA8CR,SAF1B;AAG5BH,YAAM,EAAE,KAAKa,SAAL,EAHoB;AAI5BX,WAAK,EAAEY,KAAK,CAACC,OAAN,CAAcb,KAAd,IAAuBA,KAAK,CAACc,KAAN,EAAvB,GAAuCd,KAJlB;AAK5BE,cAAQ,EAAE,KAAKa,WAAL,EALkB;AAM5BZ,oBAAc,EAAE,KAAKa,iBAAL,EANY;AAO5BZ,kBAAY,EAAE,KAAKa,eAAL,GAAuBH,KAAvB;AAPc,KAAhB,CAAd;AASAP,SAAK,CAACW,UAAN,CAAiB,KAAKC,UAAL,EAAjB;AACA,WAAOZ,KAAP;AACD,GAbD;AAeA;;;;;;;;AAMAF,8CAAUP,MAAV,EAAgB;AACd,SAAKsB,OAAL,GAAetB,MAAf;AACA,SAAKuB,MAAL;AACD,GAHD;;AAIF;AAnDA,EAA0B/B,YAA1B;;AAqDA,eAAee,WAAf","names":["RegularShape","__extends","opt_options","options","_super","points","Infinity","fill","radius","stroke","scale","undefined","rotation","rotateWithView","displacement","CircleStyle","getScale","style","getFill","clone","getStroke","getRadius","Array","isArray","slice","getRotation","getRotateWithView","getDisplacement","setOpacity","getOpacity","radius_","render"],"sourceRoot":"","sources":["../src/style/Circle.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}