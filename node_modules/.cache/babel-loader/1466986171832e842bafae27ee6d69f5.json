{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/**\n * @module ol/control/ZoomSlider\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { clamp } from '../math.js';\nimport { easeOut } from '../easing.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { stopPropagation } from '../events/Event.js';\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\n\nvar Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\n\nvar ZoomSlider =\n/** @class */\nfunction (_super) {\n  __extends(ZoomSlider, _super);\n  /**\n   * @param {Options} [opt_options] Zoom slider options.\n   */\n\n\n  function ZoomSlider(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, {\n      element: document.createElement('div'),\n      render: options.render\n    }) || this;\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n\n    _this.dragListenerKeys_ = [];\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n\n    _this.currentResolution_ = undefined;\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n\n    _this.direction_ = Direction.VERTICAL;\n    /**\n     * @type {boolean}\n     * @private\n     */\n\n    _this.dragging_;\n    /**\n     * @type {number}\n     * @private\n     */\n\n    _this.heightLimit_ = 0;\n    /**\n     * @type {number}\n     * @private\n     */\n\n    _this.widthLimit_ = 0;\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n\n    _this.startX_;\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n\n    _this.startY_;\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n\n    _this.thumbSize_ = null;\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n\n    _this.sliderInitialized_ = false;\n    /**\n     * @type {number}\n     * @private\n     */\n\n    _this.duration_ = options.duration !== undefined ? options.duration : 200;\n    var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    var thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    var containerElement = _this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n    containerElement.addEventListener(PointerEventType.POINTERDOWN, _this.handleDraggerStart_.bind(_this), false);\n    containerElement.addEventListener(PointerEventType.POINTERMOVE, _this.handleDraggerDrag_.bind(_this), false);\n    containerElement.addEventListener(PointerEventType.POINTERUP, _this.handleDraggerEnd_.bind(_this), false);\n    containerElement.addEventListener(EventType.CLICK, _this.handleContainerClick_.bind(_this), false);\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n    return _this;\n  }\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n\n\n  ZoomSlider.prototype.setMap = function (map) {\n    _super.prototype.setMap.call(this, map);\n\n    if (map) {\n      map.render();\n    }\n  };\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n\n\n  ZoomSlider.prototype.initSlider_ = function () {\n    var container = this.element;\n    var containerWidth = container.offsetWidth;\n    var containerHeight = container.offsetHeight;\n\n    if (containerWidth === 0 && containerHeight === 0) {\n      return this.sliderInitialized_ = false;\n    }\n\n    var containerStyle = getComputedStyle(container);\n    containerWidth -= parseFloat(containerStyle['paddingRight']) + parseFloat(containerStyle['paddingLeft']);\n    containerHeight -= parseFloat(containerStyle['paddingTop']) + parseFloat(containerStyle['paddingBottom']);\n    var thumb =\n    /** @type {HTMLElement} */\n    container.firstElementChild;\n    var thumbStyle = getComputedStyle(thumb);\n    var thumbWidth = thumb.offsetWidth + parseFloat(thumbStyle['marginRight']) + parseFloat(thumbStyle['marginLeft']);\n    var thumbHeight = thumb.offsetHeight + parseFloat(thumbStyle['marginTop']) + parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n\n    return this.sliderInitialized_ = true;\n  };\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n\n\n  ZoomSlider.prototype.handleContainerClick_ = function (event) {\n    var view = this.getMap().getView();\n    var relativePosition = this.getRelativePosition_(event.offsetX - this.thumbSize_[0] / 2, event.offsetY - this.thumbSize_[1] / 2);\n    var resolution = this.getResolutionForPosition_(relativePosition);\n    var zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n\n\n  ZoomSlider.prototype.handleDraggerStart_ = function (event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      var element =\n      /** @type {HTMLElement} */\n      this.element.firstElementChild;\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        var drag = this.handleDraggerDrag_;\n        var end = this.handleDraggerEnd_;\n        var doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(listen(doc, PointerEventType.POINTERMOVE, drag, this), listen(doc, PointerEventType.POINTERUP, end, this));\n      }\n    }\n  };\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n\n\n  ZoomSlider.prototype.handleDraggerDrag_ = function (event) {\n    if (this.dragging_) {\n      var deltaX = event.clientX - this.startX_;\n      var deltaY = event.clientY - this.startY_;\n      var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  };\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n\n\n  ZoomSlider.prototype.handleDraggerEnd_ = function (event) {\n    if (this.dragging_) {\n      var view = this.getMap().getView();\n      view.endInteraction();\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  };\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n\n\n  ZoomSlider.prototype.setThumbPosition_ = function (res) {\n    var position = this.getPositionForResolution_(res);\n    var thumb =\n    /** @type {HTMLElement} */\n    this.element.firstElementChild;\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  };\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n\n\n  ZoomSlider.prototype.getRelativePosition_ = function (x, y) {\n    var amount;\n\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n\n    return clamp(amount, 0, 1);\n  };\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n\n\n  ZoomSlider.prototype.getResolutionForPosition_ = function (position) {\n    var fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  };\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n\n\n  ZoomSlider.prototype.getPositionForResolution_ = function (res) {\n    var fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  };\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n\n\n  ZoomSlider.prototype.render = function (mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n\n    var res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  };\n\n  return ZoomSlider;\n}(Control);\n\nexport default ZoomSlider;","map":{"version":3,"mappings":"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","names":["Control","EventType","PointerEventType","CLASS_CONTROL","CLASS_UNSELECTABLE","clamp","easeOut","listen","unlistenByKey","stopPropagation","Direction","VERTICAL","HORIZONTAL","__extends","opt_options","options","_super","element","document","createElement","render","_this","dragListenerKeys_","currentResolution_","undefined","direction_","dragging_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","duration_","duration","className","thumbElement","setAttribute","containerElement","appendChild","addEventListener","POINTERDOWN","handleDraggerStart_","bind","POINTERMOVE","handleDraggerDrag_","POINTERUP","handleDraggerEnd_","CLICK","handleContainerClick_","ZoomSlider","map","setMap","call","container","containerWidth","offsetWidth","containerHeight","offsetHeight","containerStyle","getComputedStyle","parseFloat","thumb","firstElementChild","thumbStyle","thumbWidth","thumbHeight","event","view","getMap","getView","relativePosition","getRelativePosition_","offsetX","offsetY","resolution","getResolutionForPosition_","zoom","getConstrainedZoom","getZoomForResolution","animateInternal","easing","target","beginInteraction","clientX","style","left","clientY","top","length","drag","end","doc","getOwnerDocument","push","deltaX","deltaY","setResolution","endInteraction","forEach","res","position","getPositionForResolution_","x","y","amount","fn","getResolutionForValueFunction","getValueForResolutionFunction","mapEvent","frameState","initSlider_","viewState","setThumbPosition_"],"sourceRoot":"","sources":["../src/control/ZoomSlider.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}