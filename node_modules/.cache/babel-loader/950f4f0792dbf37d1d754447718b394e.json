{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/**\n * @module ol/source/ImageWMS\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport { appendParams } from '../uri.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { ceil, floor, round } from '../math.js';\nimport { compareVersions } from '../string.js';\nimport { containsExtent, getCenter, getForViewAndSize, getHeight, getWidth } from '../extent.js';\nimport { get as getProjection, transform } from '../proj.js';\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\n\nvar DECIMALS = 4;\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\n\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\n\nvar ImageWMS =\n/** @class */\nfunction (_super) {\n  __extends(ImageWMS, _super);\n  /**\n   * @param {Options} [opt_options] ImageWMS options.\n   */\n\n\n  function ImageWMS(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    _this = _super.call(this, {\n      attributions: options.attributions,\n      interpolate: interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions\n    }) || this;\n    /**\n     * @private\n     * @type {?string}\n     */\n\n    _this.crossOrigin_ = options.crossOrigin !== undefined ? options.crossOrigin : null;\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n\n    _this.url_ = options.url;\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n\n    _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ? options.imageLoadFunction : defaultImageLoadFunction;\n    /**\n     * @private\n     * @type {!Object}\n     */\n\n    _this.params_ = options.params || {};\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.v13_ = true;\n\n    _this.updateV13_();\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n\n\n    _this.serverType_ =\n    /** @type {import(\"./WMSServerType.js\").default|undefined} */\n    options.serverType;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n\n    _this.image_ = null;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n\n    _this.imageSize_ = [0, 0];\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.renderedRevision_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n    return _this;\n  }\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n\n\n  ImageWMS.prototype.getFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var extent = getForViewAndSize(coordinate, resolution, 0, GETFEATUREINFO_IMAGE_SIZE);\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n    var x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n    var y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n    return this.getRequestUrl_(extent, GETFEATUREINFO_IMAGE_SIZE, 1, sourceProjectionObj || projectionObj, baseParams);\n  };\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n\n\n  ImageWMS.prototype.getLegendUrl = function (resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png'\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      var layers = this.params_.LAYERS;\n      var isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n\n      if (!isSingleLayer) {\n        return undefined;\n      }\n\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      var mpu = this.getProjection() ? this.getProjection().getMetersPerUnit() : 1;\n      var pixelSize = 0.00028;\n      baseParams['SCALE'] = resolution * mpu / pixelSize;\n    }\n\n    assign(baseParams, params);\n    return appendParams(\n    /** @type {string} */\n    this.url_, baseParams);\n  };\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n\n\n  ImageWMS.prototype.getParams = function () {\n    return this.params_;\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n\n\n  ImageWMS.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n    var center = getCenter(extent);\n    var viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n    var viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n    var viewExtent = getForViewAndSize(center, imageResolution, 0, [viewWidth, viewHeight]);\n    var requestWidth = ceil(this.ratio_ * getWidth(extent) / imageResolution, DECIMALS);\n    var requestHeight = ceil(this.ratio_ * getHeight(extent) / imageResolution, DECIMALS);\n    var requestExtent = getForViewAndSize(center, imageResolution, 0, [requestWidth, requestHeight]);\n    var image = this.image_;\n\n    if (image && this.renderedRevision_ == this.getRevision() && image.getResolution() == resolution && image.getPixelRatio() == pixelRatio && containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n\n    var params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n    this.imageSize_[0] = round(getWidth(requestExtent) / imageResolution, DECIMALS);\n    this.imageSize_[1] = round(getHeight(requestExtent) / imageResolution, DECIMALS);\n    var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio, projection, params);\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n    this.renderedRevision_ = this.getRevision();\n    this.image_.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n    return this.image_;\n  };\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n\n\n  ImageWMS.prototype.getImageLoadFunction = function () {\n    return this.imageLoadFunction_;\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n\n\n  ImageWMS.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = 90 * pixelRatio + 0.5 | 0;\n\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n\n          break;\n\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox;\n\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n\n    params['BBOX'] = bbox.join(',');\n    return appendParams(\n    /** @type {string} */\n    this.url_, params);\n  };\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n\n\n  ImageWMS.prototype.getUrl = function () {\n    return this.url_;\n  };\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n\n\n  ImageWMS.prototype.setImageLoadFunction = function (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n\n\n  ImageWMS.prototype.setUrl = function (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n\n\n  ImageWMS.prototype.updateParams = function (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  };\n  /**\n   * @private\n   */\n\n\n  ImageWMS.prototype.updateV13_ = function () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return ImageWMS;\n}(ImageSource);\n\nexport default ImageWMS;","map":{"version":3,"mappings":"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","names":["DEFAULT_WMS_VERSION","EventType","ImageSource","defaultImageLoadFunction","ImageWrapper","WMSServerType","appendParams","assert","assign","calculateSourceResolution","ceil","floor","round","compareVersions","containsExtent","getCenter","getForViewAndSize","getHeight","getWidth","get","getProjection","transform","DECIMALS","GETFEATUREINFO_IMAGE_SIZE","__extends","opt_options","options","interpolate","imageSmoothing","undefined","_super","attributions","projection","resolutions","_this","crossOrigin_","crossOrigin","url_","url","imageLoadFunction_","imageLoadFunction","params_","params","v13_","updateV13_","serverType_","serverType","hidpi_","hidpi","image_","imageSize_","renderedRevision_","ratio_","ratio","ImageWMS","coordinate","resolution","projectionObj","sourceProjectionObj","extent","baseParams","x","y","getRequestUrl_","layers","LAYERS","isSingleLayer","Array","isArray","length","mpu","getMetersPerUnit","pixelSize","pixelRatio","findNearestResolution","imageResolution","center","viewWidth","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","image","getRevision","getResolution","getPixelRatio","getExtent","addEventListener","CHANGE","handleImageChange","bind","size","getCode","GEOSERVER","dpi","MAPSERVER","CARMENTA_SERVER","QGIS","axisOrientation","getAxisOrientation","bbox","substr","join","changed","version"],"sourceRoot":"","sources":["../src/source/ImageWMS.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}