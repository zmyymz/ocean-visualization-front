{"ast":null,"code":"import \"core-js/modules/es.object.has-own.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.error.cause.js\";\n\n/* eslint-disable no-restricted-globals, no-restricted-syntax */\n\n/* global SharedArrayBuffer */\nimport { CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT } from \"./messages.mjs\";\n/** @type {<T extends (...args: any) => any>(target: T) => (thisArg: ThisType<T>, ...args: any[]) => any} */\n\nfunction uncurryThis(target) {\n  return (thisArg, ...args) => {\n    return ReflectApply(target, thisArg, args);\n  };\n}\n/** @type {(target: any, key: string | symbol) => (thisArg: any, ...args: any[]) => any} */\n\n\nfunction uncurryThisGetter(target, key) {\n  return uncurryThis(ReflectGetOwnPropertyDescriptor(target, key).get);\n} // Reflect\n\n\nexport const {\n  apply: ReflectApply,\n  construct: ReflectConstruct,\n  defineProperty: ReflectDefineProperty,\n  get: ReflectGet,\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor,\n  getPrototypeOf: ReflectGetPrototypeOf,\n  has: ReflectHas,\n  ownKeys: ReflectOwnKeys,\n  set: ReflectSet,\n  setPrototypeOf: ReflectSetPrototypeOf\n} = Reflect; // Proxy\n\nexport const NativeProxy = Proxy; // Number\n\nexport const NativeNumber = Number;\nexport const {\n  isFinite: NumberIsFinite,\n  isNaN: NumberIsNaN\n} = NativeNumber; // Symbol\n\nexport const {\n  iterator: SymbolIterator,\n  species: SymbolSpecies,\n  toStringTag: SymbolToStringTag,\n  for: SymbolFor\n} = Symbol; // Object\n\nexport const NativeObject = Object;\nexport const {\n  create: ObjectCreate,\n  defineProperty: ObjectDefineProperty,\n  freeze: ObjectFreeze,\n  is: ObjectIs\n} = NativeObject;\nconst ObjectPrototype = NativeObject.prototype;\n/** @type {(object: object, key: PropertyKey) => Function | undefined} */\n\nexport const ObjectPrototype__lookupGetter__ =\n/** @type {any} */\nObjectPrototype.__lookupGetter__ ? uncurryThis(\n/** @type {any} */\nObjectPrototype.__lookupGetter__) : (object, key) => {\n  if (object == null) {\n    throw NativeTypeError(CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT);\n  }\n\n  let target = NativeObject(object);\n\n  do {\n    const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n\n    if (descriptor !== undefined) {\n      if (ObjectHasOwn(descriptor, \"get\")) {\n        return descriptor.get;\n      }\n\n      return;\n    }\n  } while ((target = ReflectGetPrototypeOf(target)) !== null);\n};\n/** @type {(object: object, key: PropertyKey) => boolean} */\n\nexport const ObjectHasOwn =\n/** @type {any} */\nNativeObject.hasOwn || uncurryThis(ObjectPrototype.hasOwnProperty); // Array\n\nconst NativeArray = Array;\nexport const ArrayIsArray = NativeArray.isArray;\nconst ArrayPrototype = NativeArray.prototype;\n/** @type {(array: ArrayLike<unknown>, separator?: string) => string} */\n\nexport const ArrayPrototypeJoin = uncurryThis(ArrayPrototype.join);\n/** @type {<T>(array: T[], ...items: T[]) => number} */\n\nexport const ArrayPrototypePush = uncurryThis(ArrayPrototype.push);\n/** @type {(array: ArrayLike<unknown>, ...opts: any[]) => string} */\n\nexport const ArrayPrototypeToLocaleString = uncurryThis(ArrayPrototype.toLocaleString);\nexport const NativeArrayPrototypeSymbolIterator = ArrayPrototype[SymbolIterator];\n/** @type {<T>(array: T[]) => IterableIterator<T>} */\n\nexport const ArrayPrototypeSymbolIterator = uncurryThis(NativeArrayPrototypeSymbolIterator); // Math\n\nexport const MathTrunc = Math.trunc; // ArrayBuffer\n\nexport const NativeArrayBuffer = ArrayBuffer;\nexport const ArrayBufferIsView = NativeArrayBuffer.isView;\nconst ArrayBufferPrototype = NativeArrayBuffer.prototype;\n/** @type {(buffer: ArrayBuffer, begin?: number, end?: number) => number} */\n\nexport const ArrayBufferPrototypeSlice = uncurryThis(ArrayBufferPrototype.slice);\n/** @type {(buffer: ArrayBuffer) => ArrayBuffer} */\n\nexport const ArrayBufferPrototypeGetByteLength = uncurryThisGetter(ArrayBufferPrototype, \"byteLength\"); // SharedArrayBuffer\n\nexport const NativeSharedArrayBuffer = typeof SharedArrayBuffer !== \"undefined\" ? SharedArrayBuffer : null;\n/** @type {(buffer: SharedArrayBuffer) => SharedArrayBuffer} */\n\nexport const SharedArrayBufferPrototypeGetByteLength = NativeSharedArrayBuffer && uncurryThisGetter(NativeSharedArrayBuffer.prototype, \"byteLength\"); // TypedArray\n\n/** @typedef {Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Int8Array|Int16Array|Int32Array|Float32Array|Float64Array|BigUint64Array|BigInt64Array} TypedArray */\n\n/** @type {any} */\n\nexport const TypedArray = ReflectGetPrototypeOf(Uint8Array);\nconst TypedArrayFrom = TypedArray.from;\nexport const TypedArrayPrototype = TypedArray.prototype;\nexport const NativeTypedArrayPrototypeSymbolIterator = TypedArrayPrototype[SymbolIterator];\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\n\nexport const TypedArrayPrototypeKeys = uncurryThis(TypedArrayPrototype.keys);\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\n\nexport const TypedArrayPrototypeValues = uncurryThis(TypedArrayPrototype.values);\n/** @type {(typedArray: TypedArray) => IterableIterator<[number, number]>} */\n\nexport const TypedArrayPrototypeEntries = uncurryThis(TypedArrayPrototype.entries);\n/** @type {(typedArray: TypedArray, array: ArrayLike<number>, offset?: number) => void} */\n\nexport const TypedArrayPrototypeSet = uncurryThis(TypedArrayPrototype.set);\n/** @type {<T extends TypedArray>(typedArray: T) => T} */\n\nexport const TypedArrayPrototypeReverse = uncurryThis(TypedArrayPrototype.reverse);\n/** @type {<T extends TypedArray>(typedArray: T, value: number, start?: number, end?: number) => T} */\n\nexport const TypedArrayPrototypeFill = uncurryThis(TypedArrayPrototype.fill);\n/** @type {<T extends TypedArray>(typedArray: T, target: number, start: number, end?: number) => T} */\n\nexport const TypedArrayPrototypeCopyWithin = uncurryThis(TypedArrayPrototype.copyWithin);\n/** @type {<T extends TypedArray>(typedArray: T, compareFn?: (a: number, b: number) => number) => T} */\n\nexport const TypedArrayPrototypeSort = uncurryThis(TypedArrayPrototype.sort);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\n\nexport const TypedArrayPrototypeSlice = uncurryThis(TypedArrayPrototype.slice);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\n\nexport const TypedArrayPrototypeSubarray = uncurryThis(TypedArrayPrototype.subarray);\n/** @type {((typedArray: TypedArray) => ArrayBuffer)} */\n\nexport const TypedArrayPrototypeGetBuffer = uncurryThisGetter(TypedArrayPrototype, \"buffer\");\n/** @type {((typedArray: TypedArray) => number)} */\n\nexport const TypedArrayPrototypeGetByteOffset = uncurryThisGetter(TypedArrayPrototype, \"byteOffset\");\n/** @type {((typedArray: TypedArray) => number)} */\n\nexport const TypedArrayPrototypeGetLength = uncurryThisGetter(TypedArrayPrototype, \"length\");\n/** @type {(target: unknown) => string} */\n\nexport const TypedArrayPrototypeGetSymbolToStringTag = uncurryThisGetter(TypedArrayPrototype, SymbolToStringTag); // Uint16Array\n\nexport const NativeUint16Array = Uint16Array;\n/** @type {Uint16ArrayConstructor[\"from\"]} */\n\nexport const Uint16ArrayFrom = (...args) => {\n  return ReflectApply(TypedArrayFrom, NativeUint16Array, args);\n}; // Uint32Array\n\nexport const NativeUint32Array = Uint32Array; // Float32Array\n\nexport const NativeFloat32Array = Float32Array; // ArrayIterator\n\n/** @type {any} */\n\nexport const ArrayIteratorPrototype = ReflectGetPrototypeOf([][SymbolIterator]());\n/** @type {<T>(arrayIterator: IterableIterator<T>) => IteratorResult<T>} */\n\nexport const ArrayIteratorPrototypeNext = uncurryThis(ArrayIteratorPrototype.next); // Generator\n\n/** @type {<T = unknown, TReturn = any, TNext = unknown>(generator: Generator<T, TReturn, TNext>, value?: TNext) => T} */\n\nexport const GeneratorPrototypeNext = uncurryThis(function* () {}().next); // Iterator\n\nexport const IteratorPrototype = ReflectGetPrototypeOf(ArrayIteratorPrototype); // DataView\n\nconst DataViewPrototype = DataView.prototype;\n/** @type {(dataView: DataView, byteOffset: number, littleEndian?: boolean) => number} */\n\nexport const DataViewPrototypeGetUint16 = uncurryThis(DataViewPrototype.getUint16);\n/** @type {(dataView: DataView, byteOffset: number, value: number, littleEndian?: boolean) => void} */\n\nexport const DataViewPrototypeSetUint16 = uncurryThis(DataViewPrototype.setUint16); // Error\n\nexport const NativeTypeError = TypeError;\nexport const NativeRangeError = RangeError; // WeakSet\n\n/**\n * Do not construct with arguments to avoid calling the \"add\" method\n *\n * @type {{new <T extends {}>(): WeakSet<T>}}\n */\n\nexport const NativeWeakSet = WeakSet;\nconst WeakSetPrototype = NativeWeakSet.prototype;\n/** @type {<T extends {}>(set: WeakSet<T>, value: T) => Set<T>} */\n\nexport const WeakSetPrototypeAdd = uncurryThis(WeakSetPrototype.add);\n/** @type {<T extends {}>(set: WeakSet<T>, value: T) => boolean} */\n\nexport const WeakSetPrototypeHas = uncurryThis(WeakSetPrototype.has); // WeakMap\n\n/**\n * Do not construct with arguments to avoid calling the \"set\" method\n *\n * @type {{new <K extends {}, V>(): WeakMap<K, V>}}\n */\n\nexport const NativeWeakMap = WeakMap;\nconst WeakMapPrototype = NativeWeakMap.prototype;\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => V} */\n\nexport const WeakMapPrototypeGet = uncurryThis(WeakMapPrototype.get);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => boolean} */\n\nexport const WeakMapPrototypeHas = uncurryThis(WeakMapPrototype.has);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K, value: V) => WeakMap} */\n\nexport const WeakMapPrototypeSet = uncurryThis(WeakMapPrototype.set);","map":{"version":3,"sources":["D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/@petamoriken/float16/src/_util/primordials.mjs"],"names":["CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT","uncurryThis","target","thisArg","args","ReflectApply","uncurryThisGetter","key","ReflectGetOwnPropertyDescriptor","get","apply","construct","ReflectConstruct","defineProperty","ReflectDefineProperty","ReflectGet","getOwnPropertyDescriptor","getPrototypeOf","ReflectGetPrototypeOf","has","ReflectHas","ownKeys","ReflectOwnKeys","set","ReflectSet","setPrototypeOf","ReflectSetPrototypeOf","Reflect","NativeProxy","Proxy","NativeNumber","Number","isFinite","NumberIsFinite","isNaN","NumberIsNaN","iterator","SymbolIterator","species","SymbolSpecies","toStringTag","SymbolToStringTag","for","SymbolFor","Symbol","NativeObject","Object","create","ObjectCreate","ObjectDefineProperty","freeze","ObjectFreeze","is","ObjectIs","ObjectPrototype","prototype","ObjectPrototype__lookupGetter__","__lookupGetter__","object","NativeTypeError","descriptor","undefined","ObjectHasOwn","hasOwn","hasOwnProperty","NativeArray","Array","ArrayIsArray","isArray","ArrayPrototype","ArrayPrototypeJoin","join","ArrayPrototypePush","push","ArrayPrototypeToLocaleString","toLocaleString","NativeArrayPrototypeSymbolIterator","ArrayPrototypeSymbolIterator","MathTrunc","Math","trunc","NativeArrayBuffer","ArrayBuffer","ArrayBufferIsView","isView","ArrayBufferPrototype","ArrayBufferPrototypeSlice","slice","ArrayBufferPrototypeGetByteLength","NativeSharedArrayBuffer","SharedArrayBuffer","SharedArrayBufferPrototypeGetByteLength","TypedArray","Uint8Array","TypedArrayFrom","from","TypedArrayPrototype","NativeTypedArrayPrototypeSymbolIterator","TypedArrayPrototypeKeys","keys","TypedArrayPrototypeValues","values","TypedArrayPrototypeEntries","entries","TypedArrayPrototypeSet","TypedArrayPrototypeReverse","reverse","TypedArrayPrototypeFill","fill","TypedArrayPrototypeCopyWithin","copyWithin","TypedArrayPrototypeSort","sort","TypedArrayPrototypeSlice","TypedArrayPrototypeSubarray","subarray","TypedArrayPrototypeGetBuffer","TypedArrayPrototypeGetByteOffset","TypedArrayPrototypeGetLength","TypedArrayPrototypeGetSymbolToStringTag","NativeUint16Array","Uint16Array","Uint16ArrayFrom","NativeUint32Array","Uint32Array","NativeFloat32Array","Float32Array","ArrayIteratorPrototype","ArrayIteratorPrototypeNext","next","GeneratorPrototypeNext","IteratorPrototype","DataViewPrototype","DataView","DataViewPrototypeGetUint16","getUint16","DataViewPrototypeSetUint16","setUint16","TypeError","NativeRangeError","RangeError","NativeWeakSet","WeakSet","WeakSetPrototype","WeakSetPrototypeAdd","add","WeakSetPrototypeHas","NativeWeakMap","WeakMap","WeakMapPrototype","WeakMapPrototypeGet","WeakMapPrototypeHas","WeakMapPrototypeSet"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-globals, no-restricted-syntax */\n/* global SharedArrayBuffer */\n\nimport { CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT } from \"./messages.mjs\";\n\n/** @type {<T extends (...args: any) => any>(target: T) => (thisArg: ThisType<T>, ...args: any[]) => any} */\nfunction uncurryThis(target) {\n  return (thisArg, ...args) => {\n    return ReflectApply(target, thisArg, args);\n  };\n}\n\n/** @type {(target: any, key: string | symbol) => (thisArg: any, ...args: any[]) => any} */\nfunction uncurryThisGetter(target, key) {\n  return uncurryThis(\n    ReflectGetOwnPropertyDescriptor(\n      target,\n      key\n    ).get\n  );\n}\n\n// Reflect\nexport const {\n  apply: ReflectApply,\n  construct: ReflectConstruct,\n  defineProperty: ReflectDefineProperty,\n  get: ReflectGet,\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor,\n  getPrototypeOf: ReflectGetPrototypeOf,\n  has: ReflectHas,\n  ownKeys: ReflectOwnKeys,\n  set: ReflectSet,\n  setPrototypeOf: ReflectSetPrototypeOf,\n} = Reflect;\n\n// Proxy\nexport const NativeProxy = Proxy;\n\n// Number\nexport const NativeNumber = Number;\nexport const {\n  isFinite: NumberIsFinite,\n  isNaN: NumberIsNaN,\n} = NativeNumber;\n\n// Symbol\nexport const {\n  iterator: SymbolIterator,\n  species: SymbolSpecies,\n  toStringTag: SymbolToStringTag,\n  for: SymbolFor,\n} = Symbol;\n\n// Object\nexport const NativeObject = Object;\nexport const {\n  create: ObjectCreate,\n  defineProperty: ObjectDefineProperty,\n  freeze: ObjectFreeze,\n  is: ObjectIs,\n} = NativeObject;\nconst ObjectPrototype = NativeObject.prototype;\n/** @type {(object: object, key: PropertyKey) => Function | undefined} */\nexport const ObjectPrototype__lookupGetter__ = /** @type {any} */ (ObjectPrototype).__lookupGetter__\n  ? uncurryThis(/** @type {any} */ (ObjectPrototype).__lookupGetter__)\n  : (object, key) => {\n    if (object == null) {\n      throw NativeTypeError(\n        CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n      );\n    }\n\n    let target = NativeObject(object);\n    do {\n      const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n      if (descriptor !== undefined) {\n        if (ObjectHasOwn(descriptor, \"get\")) {\n          return descriptor.get;\n        }\n\n        return;\n      }\n    } while ((target = ReflectGetPrototypeOf(target)) !== null);\n  };\n/** @type {(object: object, key: PropertyKey) => boolean} */\nexport const ObjectHasOwn = /** @type {any} */ (NativeObject).hasOwn ||\n  uncurryThis(ObjectPrototype.hasOwnProperty);\n\n// Array\nconst NativeArray = Array;\nexport const ArrayIsArray = NativeArray.isArray;\nconst ArrayPrototype = NativeArray.prototype;\n/** @type {(array: ArrayLike<unknown>, separator?: string) => string} */\nexport const ArrayPrototypeJoin = uncurryThis(ArrayPrototype.join);\n/** @type {<T>(array: T[], ...items: T[]) => number} */\nexport const ArrayPrototypePush = uncurryThis(ArrayPrototype.push);\n/** @type {(array: ArrayLike<unknown>, ...opts: any[]) => string} */\nexport const ArrayPrototypeToLocaleString = uncurryThis(\n  ArrayPrototype.toLocaleString\n);\nexport const NativeArrayPrototypeSymbolIterator = ArrayPrototype[SymbolIterator];\n/** @type {<T>(array: T[]) => IterableIterator<T>} */\nexport const ArrayPrototypeSymbolIterator = uncurryThis(NativeArrayPrototypeSymbolIterator);\n\n// Math\nexport const MathTrunc = Math.trunc;\n\n// ArrayBuffer\nexport const NativeArrayBuffer = ArrayBuffer;\nexport const ArrayBufferIsView = NativeArrayBuffer.isView;\nconst ArrayBufferPrototype = NativeArrayBuffer.prototype;\n/** @type {(buffer: ArrayBuffer, begin?: number, end?: number) => number} */\nexport const ArrayBufferPrototypeSlice = uncurryThis(ArrayBufferPrototype.slice);\n/** @type {(buffer: ArrayBuffer) => ArrayBuffer} */\nexport const ArrayBufferPrototypeGetByteLength = uncurryThisGetter(ArrayBufferPrototype, \"byteLength\");\n\n// SharedArrayBuffer\nexport const NativeSharedArrayBuffer = typeof SharedArrayBuffer !== \"undefined\" ? SharedArrayBuffer : null;\n/** @type {(buffer: SharedArrayBuffer) => SharedArrayBuffer} */\nexport const SharedArrayBufferPrototypeGetByteLength = NativeSharedArrayBuffer\n  && uncurryThisGetter(NativeSharedArrayBuffer.prototype, \"byteLength\");\n\n// TypedArray\n/** @typedef {Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Int8Array|Int16Array|Int32Array|Float32Array|Float64Array|BigUint64Array|BigInt64Array} TypedArray */\n/** @type {any} */\nexport const TypedArray = ReflectGetPrototypeOf(Uint8Array);\nconst TypedArrayFrom = TypedArray.from;\nexport const TypedArrayPrototype = TypedArray.prototype;\nexport const NativeTypedArrayPrototypeSymbolIterator = TypedArrayPrototype[SymbolIterator];\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\nexport const TypedArrayPrototypeKeys = uncurryThis(TypedArrayPrototype.keys);\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\nexport const TypedArrayPrototypeValues = uncurryThis(\n  TypedArrayPrototype.values\n);\n/** @type {(typedArray: TypedArray) => IterableIterator<[number, number]>} */\nexport const TypedArrayPrototypeEntries = uncurryThis(\n  TypedArrayPrototype.entries\n);\n/** @type {(typedArray: TypedArray, array: ArrayLike<number>, offset?: number) => void} */\nexport const TypedArrayPrototypeSet = uncurryThis(TypedArrayPrototype.set);\n/** @type {<T extends TypedArray>(typedArray: T) => T} */\nexport const TypedArrayPrototypeReverse = uncurryThis(\n  TypedArrayPrototype.reverse\n);\n/** @type {<T extends TypedArray>(typedArray: T, value: number, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeFill = uncurryThis(TypedArrayPrototype.fill);\n/** @type {<T extends TypedArray>(typedArray: T, target: number, start: number, end?: number) => T} */\nexport const TypedArrayPrototypeCopyWithin = uncurryThis(\n  TypedArrayPrototype.copyWithin\n);\n/** @type {<T extends TypedArray>(typedArray: T, compareFn?: (a: number, b: number) => number) => T} */\nexport const TypedArrayPrototypeSort = uncurryThis(TypedArrayPrototype.sort);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeSlice = uncurryThis(TypedArrayPrototype.slice);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeSubarray = uncurryThis(\n  TypedArrayPrototype.subarray\n);\n/** @type {((typedArray: TypedArray) => ArrayBuffer)} */\nexport const TypedArrayPrototypeGetBuffer = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"buffer\"\n);\n/** @type {((typedArray: TypedArray) => number)} */\nexport const TypedArrayPrototypeGetByteOffset = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"byteOffset\"\n);\n/** @type {((typedArray: TypedArray) => number)} */\nexport const TypedArrayPrototypeGetLength = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"length\"\n);\n/** @type {(target: unknown) => string} */\nexport const TypedArrayPrototypeGetSymbolToStringTag = uncurryThisGetter(\n  TypedArrayPrototype,\n  SymbolToStringTag\n);\n\n// Uint16Array\nexport const NativeUint16Array = Uint16Array;\n/** @type {Uint16ArrayConstructor[\"from\"]} */\nexport const Uint16ArrayFrom = (...args) => {\n  return ReflectApply(TypedArrayFrom, NativeUint16Array, args);\n};\n\n// Uint32Array\nexport const NativeUint32Array = Uint32Array;\n\n// Float32Array\nexport const NativeFloat32Array = Float32Array;\n\n// ArrayIterator\n/** @type {any} */\nexport const ArrayIteratorPrototype = ReflectGetPrototypeOf([][SymbolIterator]());\n/** @type {<T>(arrayIterator: IterableIterator<T>) => IteratorResult<T>} */\nexport const ArrayIteratorPrototypeNext = uncurryThis(ArrayIteratorPrototype.next);\n\n// Generator\n/** @type {<T = unknown, TReturn = any, TNext = unknown>(generator: Generator<T, TReturn, TNext>, value?: TNext) => T} */\nexport const GeneratorPrototypeNext = uncurryThis((function* () {})().next);\n\n// Iterator\nexport const IteratorPrototype = ReflectGetPrototypeOf(ArrayIteratorPrototype);\n\n// DataView\nconst DataViewPrototype = DataView.prototype;\n/** @type {(dataView: DataView, byteOffset: number, littleEndian?: boolean) => number} */\nexport const DataViewPrototypeGetUint16 = uncurryThis(\n  DataViewPrototype.getUint16\n);\n/** @type {(dataView: DataView, byteOffset: number, value: number, littleEndian?: boolean) => void} */\nexport const DataViewPrototypeSetUint16 = uncurryThis(\n  DataViewPrototype.setUint16\n);\n\n// Error\nexport const NativeTypeError = TypeError;\nexport const NativeRangeError = RangeError;\n\n// WeakSet\n/**\n * Do not construct with arguments to avoid calling the \"add\" method\n *\n * @type {{new <T extends {}>(): WeakSet<T>}}\n */\nexport const NativeWeakSet = WeakSet;\nconst WeakSetPrototype = NativeWeakSet.prototype;\n/** @type {<T extends {}>(set: WeakSet<T>, value: T) => Set<T>} */\nexport const WeakSetPrototypeAdd = uncurryThis(WeakSetPrototype.add);\n/** @type {<T extends {}>(set: WeakSet<T>, value: T) => boolean} */\nexport const WeakSetPrototypeHas = uncurryThis(WeakSetPrototype.has);\n\n// WeakMap\n/**\n * Do not construct with arguments to avoid calling the \"set\" method\n *\n * @type {{new <K extends {}, V>(): WeakMap<K, V>}}\n */\nexport const NativeWeakMap = WeakMap;\nconst WeakMapPrototype = NativeWeakMap.prototype;\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => V} */\nexport const WeakMapPrototypeGet = uncurryThis(WeakMapPrototype.get);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => boolean} */\nexport const WeakMapPrototypeHas = uncurryThis(WeakMapPrototype.has);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K, value: V) => WeakMap} */\nexport const WeakMapPrototypeSet = uncurryThis(WeakMapPrototype.set);\n"]},"metadata":{},"sourceType":"module"}