{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/TextFeature\n */\n\n\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport { abstract } from '../util.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\n\nvar TextFeature =\n/** @class */\nfunction (_super) {\n  __extends(TextFeature, _super);\n\n  function TextFeature() {\n    return _super.call(this) || this;\n  }\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n\n\n  TextFeature.prototype.getType = function () {\n    return FormatType.TEXT;\n  };\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n\n\n  TextFeature.prototype.readFeature = function (source, opt_options) {\n    return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n  };\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n\n\n  TextFeature.prototype.readFeatureFromText = function (text, opt_options) {\n    return abstract();\n  };\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n\n\n  TextFeature.prototype.readFeatures = function (source, opt_options) {\n    return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n  };\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n\n\n  TextFeature.prototype.readFeaturesFromText = function (text, opt_options) {\n    return abstract();\n  };\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n\n\n  TextFeature.prototype.readGeometry = function (source, opt_options) {\n    return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n  };\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n\n\n  TextFeature.prototype.readGeometryFromText = function (text, opt_options) {\n    return abstract();\n  };\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n\n\n  TextFeature.prototype.readProjection = function (source) {\n    return this.readProjectionFromText(getText(source));\n  };\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n\n\n  TextFeature.prototype.readProjectionFromText = function (text) {\n    return this.dataProjection;\n  };\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n\n\n  TextFeature.prototype.writeFeature = function (feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  };\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n\n\n  TextFeature.prototype.writeFeatureText = function (feature, opt_options) {\n    return abstract();\n  };\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n\n\n  TextFeature.prototype.writeFeatures = function (features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  };\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n\n\n  TextFeature.prototype.writeFeaturesText = function (features, opt_options) {\n    return abstract();\n  };\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n\n\n  TextFeature.prototype.writeGeometry = function (geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  };\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n\n\n  TextFeature.prototype.writeGeometryText = function (geometry, opt_options) {\n    return abstract();\n  };\n\n  return TextFeature;\n}(FeatureFormat);\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\n\n\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\nexport default TextFeature;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,OAAOA,aAAP,MAA0B,sBAA1B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AAEA;;;;;;;;;AAQA;AAAA;AAAA;AAA0BC;;AACxB;WACEC,qBAAO;AACR;AAED;;;;;AAGAC;AACE,WAAOJ,UAAU,CAACK,IAAlB;AACD,GAFD;AAIA;;;;;;;;;;AAQAD,gDAAYE,MAAZ,EAAoBC,WAApB,EAA+B;AAC7B,WAAO,KAAKC,mBAAL,CACLC,OAAO,CAACH,MAAD,CADF,EAEL,KAAKI,YAAL,CAAkBH,WAAlB,CAFK,CAAP;AAID,GALD;AAOA;;;;;;;;;AAOAH,wDAAoBO,IAApB,EAA0BJ,WAA1B,EAAqC;AACnC,WAAON,QAAQ,EAAf;AACD,GAFD;AAIA;;;;;;;;;;AAQAG,iDAAaE,MAAb,EAAqBC,WAArB,EAAgC;AAC9B,WAAO,KAAKK,oBAAL,CACLH,OAAO,CAACH,MAAD,CADF,EAEL,KAAKI,YAAL,CAAkBH,WAAlB,CAFK,CAAP;AAID,GALD;AAOA;;;;;;;;;AAOAH,yDAAqBO,IAArB,EAA2BJ,WAA3B,EAAsC;AACpC,WAAON,QAAQ,EAAf;AACD,GAFD;AAIA;;;;;;;;;;AAQAG,iDAAaE,MAAb,EAAqBC,WAArB,EAAgC;AAC9B,WAAO,KAAKM,oBAAL,CACLJ,OAAO,CAACH,MAAD,CADF,EAEL,KAAKI,YAAL,CAAkBH,WAAlB,CAFK,CAAP;AAID,GALD;AAOA;;;;;;;;;AAOAH,yDAAqBO,IAArB,EAA2BJ,WAA3B,EAAsC;AACpC,WAAON,QAAQ,EAAf;AACD,GAFD;AAIA;;;;;;;;;AAOAG,mDAAeE,MAAf,EAAqB;AACnB,WAAO,KAAKQ,sBAAL,CAA4BL,OAAO,CAACH,MAAD,CAAnC,CAAP;AACD,GAFD;AAIA;;;;;;;AAKAF,2DAAuBO,IAAvB,EAA2B;AACzB,WAAO,KAAKI,cAAZ;AACD,GAFD;AAIA;;;;;;;;;;AAQAX,iDAAaY,OAAb,EAAsBT,WAAtB,EAAiC;AAC/B,WAAO,KAAKU,gBAAL,CAAsBD,OAAtB,EAA+B,KAAKN,YAAL,CAAkBH,WAAlB,CAA/B,CAAP;AACD,GAFD;AAIA;;;;;;;;;AAOAH,qDAAiBY,OAAjB,EAA0BT,WAA1B,EAAqC;AACnC,WAAON,QAAQ,EAAf;AACD,GAFD;AAIA;;;;;;;;;;AAQAG,kDAAcc,QAAd,EAAwBX,WAAxB,EAAmC;AACjC,WAAO,KAAKY,iBAAL,CAAuBD,QAAvB,EAAiC,KAAKR,YAAL,CAAkBH,WAAlB,CAAjC,CAAP;AACD,GAFD;AAIA;;;;;;;;;AAOAH,sDAAkBc,QAAlB,EAA4BX,WAA5B,EAAuC;AACrC,WAAON,QAAQ,EAAf;AACD,GAFD;AAIA;;;;;;;;;;AAQAG,kDAAcgB,QAAd,EAAwBb,WAAxB,EAAmC;AACjC,WAAO,KAAKc,iBAAL,CAAuBD,QAAvB,EAAiC,KAAKV,YAAL,CAAkBH,WAAlB,CAAjC,CAAP;AACD,GAFD;AAIA;;;;;;;;;AAOAH,sDAAkBgB,QAAlB,EAA4Bb,WAA5B,EAAuC;AACrC,WAAON,QAAQ,EAAf;AACD,GAFD;;AAGF;AAlLA,EAA0BF,aAA1B;AAoLA;;;;;;AAIA,SAASU,OAAT,CAAiBH,MAAjB,EAAuB;AACrB,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAOA,MAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF;;AAED,eAAeF,WAAf","names":["FeatureFormat","FormatType","abstract","__extends","_super","TextFeature","TEXT","source","opt_options","readFeatureFromText","getText","adaptOptions","text","readFeaturesFromText","readGeometryFromText","readProjectionFromText","dataProjection","feature","writeFeatureText","features","writeFeaturesText","geometry","writeGeometryText"],"sourceRoot":"","sources":["../src/format/TextFeature.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}