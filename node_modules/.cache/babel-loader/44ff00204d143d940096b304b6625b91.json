{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.slice.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/PluggableMap\n */\n\n\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, { GroupEvent } from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { getUid } from './util.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\n\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\n\n\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n\n  if (layer instanceof LayerGroup) {\n    var layers = layer.getLayers().getArray();\n\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\n\n\nvar PluggableMap =\n/** @class */\nfunction (_super) {\n  __extends(PluggableMap, _super);\n  /**\n   * @param {MapOptions} options Map options.\n   */\n\n\n  function PluggableMap(options) {\n    var _this = _super.call(this) || this;\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n\n\n    _this.on;\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n\n    _this.un;\n    var optionsInternal = createOptionsInternal(options);\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.renderComplete_;\n    /** @private */\n\n    _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n    /**\n     * @type {number}\n     * @private\n     */\n\n    _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.pixelRatio_ = options.pixelRatio !== undefined ? options.pixelRatio : DEVICE_PIXEL_RATIO;\n    /**\n     * @private\n     * @type {*}\n     */\n\n    _this.postRenderTimeoutHandle_;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    _this.animationDelayKey_;\n    /**\n     * @private\n     */\n\n    _this.animationDelay_ =\n    /** @this {PluggableMap} */\n    function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(_this);\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n\n\n    _this.coordinateToPixelTransform_ = createTransform();\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n\n    _this.pixelToCoordinateTransform_ = createTransform();\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.frameIndex_ = 0;\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n\n    _this.frameState_ = null;\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n\n    _this.previousExtent_ = null;\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n\n    _this.viewPropertyListenerKey_ = null;\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n\n    _this.viewChangeListenerKey_ = null;\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n\n    _this.layerGroupPropertyListenerKeys_ = null;\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n\n    _this.viewport_ = document.createElement('div');\n    _this.viewport_.className = 'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    _this.viewport_.style.position = 'relative';\n    _this.viewport_.style.overflow = 'hidden';\n    _this.viewport_.style.width = '100%';\n    _this.viewport_.style.height = '100%';\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n\n    _this.overlayContainer_ = document.createElement('div');\n    _this.overlayContainer_.style.position = 'absolute';\n    _this.overlayContainer_.style.zIndex = '0';\n    _this.overlayContainer_.style.width = '100%';\n    _this.overlayContainer_.style.height = '100%';\n    _this.overlayContainer_.style.pointerEvents = 'none';\n    _this.overlayContainer_.className = 'ol-overlaycontainer';\n\n    _this.viewport_.appendChild(_this.overlayContainer_);\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n\n\n    _this.overlayContainerStopEvent_ = document.createElement('div');\n    _this.overlayContainerStopEvent_.style.position = 'absolute';\n    _this.overlayContainerStopEvent_.style.zIndex = '0';\n    _this.overlayContainerStopEvent_.style.width = '100%';\n    _this.overlayContainerStopEvent_.style.height = '100%';\n    _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n\n    _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n\n\n    _this.mapBrowserEventHandler_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.moveTolerance_ = options.moveTolerance;\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n\n    _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n\n    _this.targetChangeHandlerKeys_ = null;\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n\n    _this.controls = optionsInternal.controls || new Collection();\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n\n    _this.interactions = optionsInternal.interactions || new Collection();\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n\n    _this.overlays_ = optionsInternal.overlays;\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n\n    _this.overlayIdIndex_ = {};\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n\n    _this.renderer_ = null;\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n\n    _this.postRenderFunctions_ = [];\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n\n    _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n\n    _this.addChangeListener(MapProperty.LAYERGROUP, _this.handleLayerGroupChanged_);\n\n    _this.addChangeListener(MapProperty.VIEW, _this.handleViewChanged_);\n\n    _this.addChangeListener(MapProperty.SIZE, _this.handleSizeChanged_);\n\n    _this.addChangeListener(MapProperty.TARGET, _this.handleTargetChanged_); // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n\n\n    _this.setProperties(optionsInternal.values);\n\n    var map = _this;\n\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    _this.controls.addEventListener(CollectionEventType.ADD,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      event.element.setMap(this);\n    }.bind(_this));\n\n    _this.controls.addEventListener(CollectionEventType.REMOVE,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      event.element.setMap(null);\n    }.bind(_this));\n\n    _this.interactions.addEventListener(CollectionEventType.ADD,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      event.element.setMap(this);\n    }.bind(_this));\n\n    _this.interactions.addEventListener(CollectionEventType.REMOVE,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      event.element.setMap(null);\n    }.bind(_this));\n\n    _this.overlays_.addEventListener(CollectionEventType.ADD,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      this.addOverlayInternal_(\n      /** @type {import(\"./Overlay.js\").default} */\n      event.element);\n    }.bind(_this));\n\n    _this.overlays_.addEventListener(CollectionEventType.REMOVE,\n    /**\n     * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n     */\n    function (event) {\n      var overlay =\n      /** @type {import(\"./Overlay.js\").default} */\n      event.element;\n      var id = overlay.getId();\n\n      if (id !== undefined) {\n        delete this.overlayIdIndex_[id.toString()];\n      }\n\n      event.element.setMap(null);\n    }.bind(_this));\n\n    _this.controls.forEach(\n    /**\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @this {PluggableMap}\n     */\n    function (control) {\n      control.setMap(this);\n    }.bind(_this));\n\n    _this.interactions.forEach(\n    /**\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n     * @this {PluggableMap}\n     */\n    function (interaction) {\n      interaction.setMap(this);\n    }.bind(_this));\n\n    _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n\n    return _this;\n  }\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n\n\n  PluggableMap.prototype.createRenderer = function () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n\n\n  PluggableMap.prototype.addControl = function (control) {\n    this.getControls().push(control);\n  };\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n\n\n  PluggableMap.prototype.addInteraction = function (interaction) {\n    this.getInteractions().push(interaction);\n  };\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n\n\n  PluggableMap.prototype.addLayer = function (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n\n\n  PluggableMap.prototype.handleLayerAdd_ = function (event) {\n    setLayerMapProperty(event.layer, this);\n  };\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n\n\n  PluggableMap.prototype.addOverlay = function (overlay) {\n    this.getOverlays().push(overlay);\n  };\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n\n\n  PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n    var id = overlay.getId();\n\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n\n    overlay.setMap(this);\n  };\n  /**\n   *\n   * Clean up.\n   */\n\n\n  PluggableMap.prototype.disposeInternal = function () {\n    this.setTarget(null);\n\n    _super.prototype.disposeInternal.call(this);\n  };\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n\n\n  PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n\n    var coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n  };\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n    var features = [];\n    this.forEachFeatureAtPixel(pixel, function (feature) {\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getAllLayers = function () {\n    var layers = [];\n\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n\n    addLayersFrom(this.getLayers());\n    return layers;\n  };\n  /**\n   * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\n   * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\n   *\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: In maps with more than one layer, this method will typically return pixel data\n   * representing the composed image of all layers visible at the given pixel – because layers\n   * will generally share the same rendering context.  To force layers to render separately, and\n   * to get pixel data representing only one layer at a time, you can assign each layer a unique\n   * `className` in its constructor.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   * @deprecated\n   */\n\n\n  PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n\n    var options = opt_options || {};\n    var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n  };\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n\n\n  PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n\n    var coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    var checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n  };\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getEventCoordinate = function (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n\n\n  PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  };\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getEventPixel = function (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = //FIXME Are we really calling this with a TouchEvent anywhere?\n    'changedTouches' in event ?\n    /** @type {TouchEvent} */\n    event.changedTouches[0] :\n    /** @type {MouseEvent} */\n    event;\n    return [eventPosition.clientX - viewportPosition.left, eventPosition.clientY - viewportPosition.top];\n  };\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.getTarget = function () {\n    return (\n      /** @type {HTMLElement|string|undefined} */\n      this.get(MapProperty.TARGET)\n    );\n  };\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getTargetElement = function () {\n    var target = this.getTarget();\n\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n    return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n  };\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n\n\n  PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n    var frameState = this.frameState_;\n\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getControls = function () {\n    return this.controls;\n  };\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getOverlays = function () {\n    return this.overlays_;\n  };\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getOverlayById = function (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getInteractions = function () {\n    return this.interactions;\n  };\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.getLayerGroup = function () {\n    return (\n      /** @type {LayerGroup} */\n      this.get(MapProperty.LAYERGROUP)\n    );\n  };\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n\n\n  PluggableMap.prototype.setLayers = function (layers) {\n    var group = this.getLayerGroup();\n\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    var collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  };\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getLayers = function () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n\n\n  PluggableMap.prototype.getLoadingOrNotReady = function () {\n    var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layer = layerStatesArray[i].layer;\n\n      if (!layer.getRenderer().ready) {\n        return true;\n      }\n\n      var source =\n      /** @type {import(\"./layer/Layer.js\").default} */\n      layer.getSource();\n\n      if (source && source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n    var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  };\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n\n\n  PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n    var frameState = this.frameState_;\n\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n\n\n  PluggableMap.prototype.getRenderer = function () {\n    return this.renderer_;\n  };\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.getSize = function () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */\n      this.get(MapProperty.SIZE)\n    );\n  };\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.getView = function () {\n    return (\n      /** @type {View} */\n      this.get(MapProperty.VIEW)\n    );\n  };\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n\n\n  PluggableMap.prototype.getViewport = function () {\n    return this.viewport_;\n  };\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n\n\n  PluggableMap.prototype.getOverlayContainer = function () {\n    return this.overlayContainer_;\n  };\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n\n\n  PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n    return this.overlayContainerStopEvent_;\n  };\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n\n\n  PluggableMap.prototype.getOwnerDocument = function () {\n    var targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  };\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n\n\n  PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n  };\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n\n\n  PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n\n\n  PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n\n    var originalEvent =\n    /** @type {PointerEvent} */\n    mapBrowserEvent.originalEvent;\n    var eventType = originalEvent.type;\n\n    if (eventType === PointerEventType.POINTERDOWN || eventType === EventType.WHEEL || eventType === EventType.KEYDOWN) {\n      var doc = this.getOwnerDocument();\n      var rootNode = this.viewport_.getRootNode ? this.viewport_.getRootNode() : doc;\n      var target =\n      /** @type {Node} */\n      originalEvent.target;\n\n      if ( // Abort if the target is a child of the container for elements whose events are not meant\n      // to be handled by map interactions.\n      this.overlayContainerStopEvent_.contains(target) || // Abort if the event target is a child of the container that is no longer in the page.\n      // It's possible for the target to no longer be in the page if it has been removed in an\n      // event listener, this might happen in a Control that recreates it's content based on\n      // user interaction either manually or via a render in something like https://reactjs.org/\n      !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n        return;\n      }\n    }\n\n    mapBrowserEvent.frameState = this.frameState_;\n\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      var interactionsArray = this.getInteractions().getArray().slice();\n\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n\n        if (interaction.getMap() !== this || !interaction.getActive() || !this.getTargetElement()) {\n          continue;\n        }\n\n        var cont = interaction.handleEvent(mapBrowserEvent);\n\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  PluggableMap.prototype.handlePostRender = function () {\n    var frameState = this.frameState_; // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n\n    var tileQueue = this.tileQueue_;\n\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n\n      if (frameState) {\n        var hints = frameState.viewHints;\n\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          var lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate && this.renderComplete_) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n\n    postRenderFunctions.length = 0;\n  };\n  /**\n   * @private\n   */\n\n\n  PluggableMap.prototype.handleSizeChanged_ = function () {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  };\n  /**\n   * @private\n   */\n\n\n  PluggableMap.prototype.handleTargetChanged_ = function () {\n    if (this.mapBrowserEventHandler_) {\n      for (var i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n      this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    } // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n\n      for (var key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n      }\n\n      this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n      this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? {\n        passive: false\n      } : false);\n      var defaultView = this.getOwnerDocument().defaultView;\n      var keyboardEventTarget = !this.keyboardEventTarget_ ? targetElement : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this), listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this), listen(defaultView, EventType.RESIZE, this.updateSize, this)];\n    }\n\n    this.updateSize(); // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n  /**\n   * @private\n   */\n\n\n  PluggableMap.prototype.handleTileChange_ = function () {\n    this.render();\n  };\n  /**\n   * @private\n   */\n\n\n  PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n    this.render();\n  };\n  /**\n   * @private\n   */\n\n\n  PluggableMap.prototype.handleViewChanged_ = function () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n\n    var view = this.getView();\n\n    if (view) {\n      this.updateViewportSize_();\n      this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n      view.resolveConstraints(0);\n    }\n\n    this.render();\n  };\n  /**\n   * @private\n   */\n\n\n  PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n\n    var layerGroup = this.getLayerGroup();\n\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this), listen(layerGroup, EventType.CHANGE, this.render, this), listen(layerGroup, 'addlayer', this.handleLayerAdd_, this), listen(layerGroup, 'removelayer', this.handleLayerRemove_, this)];\n    }\n\n    this.render();\n  };\n  /**\n   * @return {boolean} Is rendered.\n   */\n\n\n  PluggableMap.prototype.isRendered = function () {\n    return !!this.frameState_;\n  };\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n\n\n  PluggableMap.prototype.renderSync = function () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n\n    this.animationDelay_();\n  };\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n\n\n  PluggableMap.prototype.redrawText = function () {\n    var layerStates = this.getLayerGroup().getLayerStatesArray();\n\n    for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n      var layer = layerStates[i].layer;\n\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  };\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n\n\n  PluggableMap.prototype.render = function () {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n\n\n  PluggableMap.prototype.removeControl = function (control) {\n    return this.getControls().remove(control);\n  };\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n\n\n  PluggableMap.prototype.removeInteraction = function (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n\n\n  PluggableMap.prototype.removeLayer = function (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n\n\n  PluggableMap.prototype.handleLayerRemove_ = function (event) {\n    removeLayerMapProperty(event.layer);\n  };\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n\n\n  PluggableMap.prototype.removeOverlay = function (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n\n\n  PluggableMap.prototype.renderFrame_ = function (time) {\n    var _this = this;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n\n    var frameState = null;\n\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {}\n      };\n\n      if (viewState.nextCenter && viewState.nextResolution) {\n        var rotation = isNaN(viewState.nextRotation) ? viewState.rotation : viewState.nextRotation;\n        frameState.nextExtent = getForViewAndSize(viewState.nextCenter, viewState.nextResolution, rotation, size);\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ || !isEmpty(this.previousExtent_) && !equals(frameState.extent, this.previousExtent_);\n\n        if (moveStart) {\n          this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ && !frameState.viewHints[ViewHint.ANIMATING] && !frameState.viewHints[ViewHint.INTERACTING] && !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n    this.renderComplete_ = !this.tileQueue_.getTilesLoading() && !this.tileQueue_.getCount() && !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(function () {\n        _this.postRenderTimeoutHandle_ = undefined;\n\n        _this.handlePostRender();\n      }, 0);\n    }\n  };\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n    var oldLayerGroup = this.getLayerGroup();\n\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.setSize = function (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.setTarget = function (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n\n\n  PluggableMap.prototype.setView = function (view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n\n    this.set(MapProperty.VIEW, new View());\n    var map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  };\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n\n\n  PluggableMap.prototype.updateSize = function () {\n    var targetElement = this.getTargetElement();\n    var size = undefined;\n\n    if (targetElement) {\n      var computedStyle = getComputedStyle(targetElement);\n      var width = targetElement.offsetWidth - parseFloat(computedStyle['borderLeftWidth']) - parseFloat(computedStyle['paddingLeft']) - parseFloat(computedStyle['paddingRight']) - parseFloat(computedStyle['borderRightWidth']);\n      var height = targetElement.offsetHeight - parseFloat(computedStyle['borderTopWidth']) - parseFloat(computedStyle['paddingTop']) - parseFloat(computedStyle['paddingBottom']) - parseFloat(computedStyle['borderBottomWidth']);\n\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n\n        if (!hasArea(size) && !!(targetElement.offsetWidth || targetElement.offsetHeight || targetElement.getClientRects().length)) {\n          // eslint-disable-next-line\n          console.warn(\"No map visible because the map container's width or height are 0.\");\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  };\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n\n\n  PluggableMap.prototype.updateViewportSize_ = function () {\n    var view = this.getView();\n\n    if (view) {\n      var size = undefined;\n      var computedStyle = getComputedStyle(this.viewport_);\n\n      if (computedStyle.width && computedStyle.height) {\n        size = [parseInt(computedStyle.width, 10), parseInt(computedStyle.height, 10)];\n      }\n\n      view.setViewportSize(size);\n    }\n  };\n\n  return PluggableMap;\n}(BaseObject);\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\n\n\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ? document.getElementById(options.keyboardEventTarget) : options.keyboardEventTarget;\n  }\n  /**\n   * @type {Object<string, *>}\n   */\n\n\n  var values = {};\n  var layerGroup = options.layers && typeof\n  /** @type {?} */\n  options.layers.getLayers === 'function' ?\n  /** @type {LayerGroup} */\n  options.layers : new LayerGroup({\n    layers:\n    /** @type {Collection} */\n    options.layers\n  });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n  values[MapProperty.TARGET] = options.target;\n  values[MapProperty.VIEW] = options.view instanceof View ? options.view : new View();\n  var controls;\n\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof\n      /** @type {?} */\n      options.controls.getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n\n      controls =\n      /** @type {Collection} */\n      options.controls;\n    }\n  }\n\n  var interactions;\n\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof\n      /** @type {?} */\n      options.interactions.getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n\n      interactions =\n      /** @type {Collection} */\n      options.interactions;\n    }\n  }\n\n  var overlays;\n\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof\n      /** @type {?} */\n      options.overlays.getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n}\n\nexport default PluggableMap;","map":{"version":3,"mappings":"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","names":["BaseObject","Collection","CollectionEventType","EventType","Layer","LayerGroup","GroupEvent","MapBrowserEvent","MapBrowserEventHandler","MapBrowserEventType","MapEvent","MapEventType","MapProperty","ObjectEventType","PointerEventType","RenderEventType","TileQueue","getTilePriority","View","ViewHint","DEVICE_PIXEL_RATIO","PASSIVE_EVENT_LISTENERS","TRUE","apply","applyTransform","create","createTransform","assert","clone","createOrUpdateEmpty","equals","getForViewAndSize","isEmpty","fromUserCoordinate","toUserCoordinate","getUid","hasArea","listen","unlistenByKey","removeNode","removeLayerMapProperty","layer","setMapInternal","getLayers","forEach","setLayerMapProperty","map","layers","getArray","i","ii","length","__extends","options","_super","_this","on","once","un","optionsInternal","createOptionsInternal","renderComplete_","boundHandleBrowserEvent_","handleBrowserEvent","bind","maxTilesLoading_","maxTilesLoading","undefined","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","Date","now","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","document","createElement","className","window","style","position","overflow","width","height","overlayContainer_","zIndex","pointerEvents","appendChild","overlayContainerStopEvent_","mapBrowserEventHandler_","moveTolerance_","moveTolerance","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","controls","interactions","overlays_","overlays","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","handleTileChange_","addChangeListener","LAYERGROUP","handleLayerGroupChanged_","VIEW","handleViewChanged_","SIZE","handleSizeChanged_","TARGET","handleTargetChanged_","setProperties","values","view","then","viewOptions","setView","addEventListener","ADD","event","element","setMap","REMOVE","addOverlayInternal_","overlay","id","getId","toString","control","interaction","PluggableMap","Error","getControls","push","getInteractions","getLayerGroup","getOverlays","setTarget","disposeInternal","call","pixel","callback","opt_options","coordinate","getCoordinateFromPixelInternal","hitTolerance","layerFilter","checkWrapped","forEachFeatureAtCoordinate","features","forEachFeatureAtPixel","feature","addLayersFrom","layerGroup","forEachLayerAtPixel","hasFeatureAtCoordinate","getCoordinateFromPixel","getEventPixel","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","clientX","left","clientY","top","get","target","getTarget","getElementById","getView","getProjection","frameState","pixelToCoordinateTransform","slice","group","setLayers","collection","clear","extend","layerStatesArray","getLayerStatesArray","getRenderer","ready","source","getSource","loading","viewCoordinate","getPixelFromCoordinateInternal","coordinateToPixelTransform","targetElement","getTargetElement","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","browserEvent","opt_type","type","mapBrowserEvent","handleMapBrowserEvent","originalEvent","eventType","POINTERDOWN","WHEEL","KEYDOWN","doc","getOwnerDocument","rootNode","getRootNode","contains","documentElement","dispatchEvent","interactionsArray","getMap","getActive","cont","handleEvent","propagationStopped","tileQueue","maxTotalLoading","maxNewLoads","hints","viewHints","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","hasListener","RENDERCOMPLETE","animate","dispatchRenderEvent","postRenderFunctions","getAnimating","resolveConstraints","render","removeEventListener","CONTEXTMENU","dispose","clearTimeout","cancelAnimationFrame","createRenderer","key","passive","defaultView","KEYPRESS","RESIZE","updateSize","updateViewportSize_","PROPERTYCHANGE","handleViewPropertyChanged_","CHANGE","handleLayerAdd_","handleLayerRemove_","layerStates","hasRenderer","handleFontsChanged","requestAnimationFrame","remove","size","getSize","previousFrameState","isDef","getHints","viewState","getState","declutterTree","extent","center","resolution","rotation","index","layerIndex","usedTiles","wantedTiles","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","renderFrame","Array","prototype","moveStart","MOVESTART","idle","MOVEEND","POSTRENDER","getCount","getLoadingOrNotReady","setTimeout","handlePostRender","oldLayerGroup","set","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","console","warn","setSize","parseInt","setViewportSize","isArray"],"sourceRoot":"","sources":["src/PluggableMap.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}