{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/TileCache\n */\n\n\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\n\nvar TileCache =\n/** @class */\nfunction (_super) {\n  __extends(TileCache, _super);\n\n  function TileCache() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n\n\n  TileCache.prototype.expireCache = function (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  };\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n\n\n  TileCache.prototype.pruneExceptNewestZ = function () {\n    if (this.getCount() === 0) {\n      return;\n    }\n\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    }.bind(this));\n  };\n\n  return TileCache;\n}(LRUCache);\n\nexport default TileCache;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,OAAOA,QAAP,MAAqB,uBAArB;AACA,SAAQC,OAAR,EAAiBC,MAAjB,QAA8B,gBAA9B;;AAEA;AAAA;AAAA;AAAwBC;;AAAxB;;AAkCC;AAjCC;;;;;AAGAC,8CAAYC,SAAZ,EAAqB;AACnB,WAAO,KAAKC,cAAL,EAAP,EAA8B;AAC5B,UAAMC,IAAI,GAAG,KAAKC,QAAL,EAAb;;AACA,UAAID,IAAI,CAACL,MAAL,MAAiBG,SAArB,EAAgC;AAC9B;AACD,OAFD,MAEO;AACL,aAAKI,GAAL,GAAWC,OAAX;AACD;AACF;AACF,GATD;AAWA;;;;;AAGAN;AACE,QAAI,KAAKO,QAAL,OAAoB,CAAxB,EAA2B;AACzB;AACD;;AACD,QAAMC,GAAG,GAAG,KAAKC,YAAL,EAAZ;AACA,QAAMC,SAAS,GAAGb,OAAO,CAACW,GAAD,CAAzB;AACA,QAAMG,CAAC,GAAGD,SAAS,CAAC,CAAD,CAAnB;AACA,SAAKE,OAAL,CACE,UAAUT,IAAV,EAAc;AACZ,UAAIA,IAAI,CAACO,SAAL,CAAe,CAAf,MAAsBC,CAA1B,EAA6B;AAC3B,aAAKE,MAAL,CAAYf,MAAM,CAACK,IAAI,CAACO,SAAN,CAAlB;AACAP,YAAI,CAACG,OAAL;AACD;AACF,KALD,CAKEQ,IALF,CAKO,IALP,CADF;AAQD,GAfD;;AAgBF;AAlCA,EAAwBlB,QAAxB;;AAoCA,eAAeI,SAAf","names":["LRUCache","fromKey","getKey","__extends","TileCache","usedTiles","canExpireCache","tile","peekLast","pop","release","getCount","key","peekFirstKey","tileCoord","z","forEach","remove","bind"],"sourceRoot":"","sources":["src/TileCache.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}