{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/VectorTile\n */\n\n\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nvar VectorTile =\n/** @class */\nfunction (_super) {\n  __extends(VectorTile, _super);\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n\n\n  function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n    var _this = _super.call(this, tileCoord, state, opt_options) || this;\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n\n\n    _this.extent = null;\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n\n    _this.format_ = format;\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n\n    _this.features_ = null;\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n\n    _this.loader_;\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n\n    _this.projection = null;\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n\n    _this.resolution;\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n\n    _this.tileLoadFunction_ = tileLoadFunction;\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.url_ = src;\n    _this.key = src;\n    return _this;\n  }\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n\n\n  VectorTile.prototype.getFormat = function () {\n    return this.format_;\n  };\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n\n\n  VectorTile.prototype.getFeatures = function () {\n    return this.features_;\n  };\n  /**\n   * Load not yet loaded URI.\n   */\n\n\n  VectorTile.prototype.load = function () {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  };\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n\n\n  VectorTile.prototype.onLoad = function (features, dataProjection) {\n    this.setFeatures(features);\n  };\n  /**\n   * Handler for tile load errors.\n   */\n\n\n  VectorTile.prototype.onError = function () {\n    this.setState(TileState.ERROR);\n  };\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n\n\n  VectorTile.prototype.setFeatures = function (features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  };\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n\n\n  VectorTile.prototype.setLoader = function (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorTile;\n}(Tile);\n\nexport default VectorTile;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;AAEA;AAAA;AAAA;AAAyBC;AACvB;;;;;;;;;;AAQA,sBAAYC,SAAZ,EAAuBC,KAAvB,EAA8BC,GAA9B,EAAmCC,MAAnC,EAA2CC,gBAA3C,EAA6DC,WAA7D,EAAwE;AAAxE,gBACEC,kBAAMN,SAAN,EAAiBC,KAAjB,EAAwBI,WAAxB,KAAoC,IADtC;AAGE;;;;;;AAIAE,SAAI,CAACC,MAAL,GAAc,IAAd;AAEA;;;;;AAIAD,SAAI,CAACE,OAAL,GAAeN,MAAf;AAEA;;;;;AAIAI,SAAI,CAACG,SAAL,GAAiB,IAAjB;AAEA;;;;;AAIAH,SAAI,CAACI,OAAL;AAEA;;;;;AAIAJ,SAAI,CAACK,UAAL,GAAkB,IAAlB;AAEA;;;;;AAIAL,SAAI,CAACM,UAAL;AAEA;;;;;AAIAN,SAAI,CAACO,iBAAL,GAAyBV,gBAAzB;AAEA;;;;;AAIAG,SAAI,CAACQ,IAAL,GAAYb,GAAZ;AAEAK,SAAI,CAACS,GAAL,GAAWd,GAAX;;AACD;AAED;;;;;;;AAKAe;AACE,WAAO,KAAKR,OAAZ;AACD,GAFD;AAIA;;;;;;;AAKAQ;AACE,WAAO,KAAKP,SAAZ;AACD,GAFD;AAIA;;;;;AAGAO;AACE,QAAI,KAAKhB,KAAL,IAAcH,SAAS,CAACoB,IAA5B,EAAkC;AAChC,WAAKC,QAAL,CAAcrB,SAAS,CAACsB,OAAxB;AACA,WAAKN,iBAAL,CAAuB,IAAvB,EAA6B,KAAKC,IAAlC;;AACA,UAAI,KAAKJ,OAAT,EAAkB;AAChB,aAAKA,OAAL,CAAa,KAAKH,MAAlB,EAA0B,KAAKK,UAA/B,EAA2C,KAAKD,UAAhD;AACD;AACF;AACF,GARD;AAUA;;;;;;;AAKAK,0CAAOI,QAAP,EAAiBC,cAAjB,EAA+B;AAC7B,SAAKC,WAAL,CAAiBF,QAAjB;AACD,GAFD;AAIA;;;;;AAGAJ;AACE,SAAKE,QAAL,CAAcrB,SAAS,CAAC0B,KAAxB;AACD,GAFD;AAIA;;;;;;;;AAMAP,+CAAYI,QAAZ,EAAoB;AAClB,SAAKX,SAAL,GAAiBW,QAAjB;AACA,SAAKF,QAAL,CAAcrB,SAAS,CAAC2B,MAAxB;AACD,GAHD;AAKA;;;;;;;AAKAR,6CAAUS,MAAV,EAAgB;AACd,SAAKf,OAAL,GAAee,MAAf;AACD,GAFD;;AAGF;AAjIA,EAAyB7B,IAAzB;;AAmIA,eAAeoB,UAAf","names":["Tile","TileState","__extends","tileCoord","state","src","format","tileLoadFunction","opt_options","_super","_this","extent","format_","features_","loader_","projection","resolution","tileLoadFunction_","url_","key","VectorTile","IDLE","setState","LOADING","features","dataProjection","setFeatures","ERROR","LOADED","loader"],"sourceRoot":"","sources":["src/VectorTile.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}