{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.slice.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\n\n\nimport CanvasLayerRenderer from './Layer.js';\nimport ViewHint from '../../ViewHint.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED } from './common.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as toTransformString } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { containsCoordinate, containsExtent, getHeight, getIntersection, getWidth, intersects as intersectsExtent, isEmpty } from '../../extent.js';\nimport { fromUserExtent } from '../../proj.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\n\nvar CanvasImageLayerRenderer =\n/** @class */\nfunction (_super) {\n  __extends(CanvasImageLayerRenderer, _super);\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n\n\n  function CanvasImageLayerRenderer(imageLayer) {\n    var _this = _super.call(this, imageLayer) || this;\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n\n\n    _this.image_ = null;\n    return _this;\n  }\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n\n\n  CanvasImageLayerRenderer.prototype.getImage = function () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n\n\n  CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n    var layerState = frameState.layerStatesArray[frameState.layerIndex];\n    var pixelRatio = frameState.pixelRatio;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n    var imageSource = this.getLayer().getSource();\n    var hints = frameState.viewHints;\n    var renderedExtent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n      if (imageSource) {\n        var projection = viewState.projection;\n\n        if (!ENABLE_RASTER_REPROJECTION) {\n          var sourceProjection = imageSource.getProjection();\n\n          if (sourceProjection) {\n            projection = sourceProjection;\n          }\n        }\n\n        var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n\n        if (image && this.loadImage(image)) {\n          this.image_ = image;\n        } else {\n          this.image_ = null;\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  };\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n\n\n  CanvasImageLayerRenderer.prototype.getData = function (pixel) {\n    var frameState = this.frameState;\n\n    if (!frameState) {\n      return null;\n    }\n\n    var layer = this.getLayer();\n    var coordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    var layerExtent = layer.getExtent();\n\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    var imageExtent = this.image_.getExtent();\n    var img = this.image_.getImage();\n    var imageMapWidth = getWidth(imageExtent);\n    var col = Math.floor(img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth));\n\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    var imageMapHeight = getHeight(imageExtent);\n    var row = Math.floor(img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight));\n\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  };\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n\n\n  CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n    var image = this.image_;\n    var imageExtent = image.getExtent();\n    var imageResolution = image.getResolution();\n    var imagePixelRatio = image.getPixelRatio();\n    var layerState = frameState.layerStatesArray[frameState.layerIndex];\n    var pixelRatio = frameState.pixelRatio;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n    var size = frameState.size;\n    var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n    var width = Math.round(size[0] * pixelRatio);\n    var height = Math.round(size[1] * pixelRatio);\n    var rotation = viewState.rotation;\n\n    if (rotation) {\n      var size_1 = Math.round(Math.sqrt(width * width + height * height));\n      width = size_1;\n      height = size_1;\n    } // set forward and inverse pixel transforms\n\n\n    composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n    var canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, layerState.opacity, this.getBackground(frameState));\n    var context = this.context;\n    var canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    } // clipped rendering if layer extent is set\n\n\n    var clipped = false;\n    var render = true;\n\n    if (layerState.extent) {\n      var layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    var img = image.getImage();\n    var transform = composeTransform(this.tempTransform, width / 2, height / 2, scale, scale, 0, imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution, imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    var dw = img.width * transform[0];\n    var dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      var dx = transform[4];\n      var dy = transform[5];\n      var opacity = layerState.opacity;\n      var previousAlpha = void 0;\n\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n\n      context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  };\n\n  return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer);\n\nexport default CanvasImageLayerRenderer;","map":{"version":3,"mappings":"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","names":["CanvasLayerRenderer","ViewHint","ENABLE_RASTER_REPROJECTION","IMAGE_SMOOTHING_DISABLED","IMAGE_SMOOTHING_ENABLED","apply","applyTransform","compose","composeTransform","makeInverse","toString","toTransformString","assign","containsCoordinate","containsExtent","getHeight","getIntersection","getWidth","intersects","intersectsExtent","isEmpty","fromUserExtent","__extends","imageLayer","_super","_this","image_","CanvasImageLayerRenderer","getImage","frameState","layerState","layerStatesArray","layerIndex","pixelRatio","viewState","viewResolution","resolution","imageSource","getLayer","getSource","hints","viewHints","renderedExtent","extent","undefined","projection","ANIMATING","INTERACTING","sourceProjection","getProjection","image","loadImage","pixel","layer","coordinate","pixelToCoordinateTransform","slice","layerExtent","getExtent","imageExtent","img","imageMapWidth","col","Math","floor","width","imageMapHeight","row","height","getImageData","target","imageResolution","getResolution","imagePixelRatio","getPixelRatio","viewCenter","center","size","scale","round","rotation","size_1","sqrt","pixelTransform","inversePixelTransform","canvasTransform","useContainer","opacity","getBackground","context","canvas","containerReused","clearRect","clipped","render","clipUnrotated","transform","tempTransform","renderedResolution","dw","dh","getInterpolate","preRender","dx","dy","previousAlpha","globalAlpha","drawImage","postRender","restore","style","container"],"sourceRoot":"","sources":["../../src/renderer/canvas/ImageLayer.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}