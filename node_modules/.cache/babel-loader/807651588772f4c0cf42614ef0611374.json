{"ast":null,"code":"/**\n * @module ol/format/xsd\n */\nimport { getAllTextContent, getDocument } from '../xml.js';\nimport { padNumber } from '../string.js';\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\n\nexport function readBoolean(node) {\n  var s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\n\nexport function readBooleanString(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\n\nexport function readDateTime(node) {\n  var s = getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\n\nexport function readDecimal(node) {\n  var s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\n\nexport function readDecimalString(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\n\nexport function readPositiveInteger(node) {\n  var s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\n\nexport function readNonNegativeIntegerString(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\n\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\n\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\n\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\n\nexport function writeDateTimeTextNode(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' + padNumber(date.getUTCMonth() + 1, 2) + '-' + padNumber(date.getUTCDate(), 2) + 'T' + padNumber(date.getUTCHours(), 2) + ':' + padNumber(date.getUTCMinutes(), 2) + ':' + padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\n\nexport function writeDecimalTextNode(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\n\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\n\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}","map":{"version":3,"mappings":"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","names":["getAllTextContent","getDocument","padNumber","readBoolean","node","s","readBooleanString","string","m","exec","undefined","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","parseFloat","readPositiveInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","toString"],"sourceRoot":"","sources":["../src/format/xsd.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}