{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/renderer/webgl/Layer\n */\n\n\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform } from '../../transform.js';\nimport { containsCoordinate } from '../../extent.js';\n/**\n * @enum {string}\n */\n\nexport var WebGLWorkerMessageType = {\n  GENERATE_BUFFERS: 'GENERATE_BUFFERS'\n};\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Render instructions raw binary buffer.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {number} [customAttributesCount] Amount of custom attributes count in the render instructions.\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\n\nvar WebGLLayerRenderer =\n/** @class */\nfunction (_super) {\n  __extends(WebGLLayerRenderer, _super);\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function WebGLLayerRenderer(layer, opt_options) {\n    var _this = _super.call(this, layer) || this;\n\n    var options = opt_options || {};\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    _this.inversePixelTransform_ = createTransform();\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n\n    _this.pixelContext_ = null;\n    /**\n     * @private\n     */\n\n    _this.postProcesses_ = options.postProcesses;\n    /**\n     * @private\n     */\n\n    _this.uniforms_ = options.uniforms;\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n\n    _this.helper;\n    layer.addChangeListener(LayerProperty.MAP, _this.removeHelper.bind(_this));\n    _this.dispatchPreComposeEvent = _this.dispatchPreComposeEvent.bind(_this);\n    _this.dispatchPostComposeEvent = _this.dispatchPostComposeEvent.bind(_this);\n    return _this;\n  }\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n\n\n  WebGLLayerRenderer.prototype.dispatchPreComposeEvent = function (context, frameState) {\n    var layer = this.getLayer();\n\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      var event_1 = new RenderEvent(RenderEventType.PRECOMPOSE, undefined, frameState, context);\n      layer.dispatchEvent(event_1);\n    }\n  };\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n\n\n  WebGLLayerRenderer.prototype.dispatchPostComposeEvent = function (context, frameState) {\n    var layer = this.getLayer();\n\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      var event_2 = new RenderEvent(RenderEventType.POSTCOMPOSE, undefined, frameState, context);\n      layer.dispatchEvent(event_2);\n    }\n  };\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n\n\n  WebGLLayerRenderer.prototype.reset = function (options) {\n    this.uniforms_ = options.uniforms;\n\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  WebGLLayerRenderer.prototype.removeHelper = function () {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  };\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n\n\n  WebGLLayerRenderer.prototype.prepareFrame = function (frameState) {\n    if (this.getLayer().getRenderSource()) {\n      var incrementGroup = true;\n      var groupNumber = -1;\n      var className = void 0;\n\n      for (var i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        var layer = frameState.layerStatesArray[i].layer;\n        var renderer = layer.getRenderer();\n\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n\n        var layerClassName = layer.getClassName();\n\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n\n        className = layerClassName;\n\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      var canvasCacheKey = 'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (!this.helper || !this.helper.canvasCacheKeyMatches(canvasCacheKey)) {\n        this.removeHelper();\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  };\n  /**\n   * @protected\n   */\n\n\n  WebGLLayerRenderer.prototype.afterHelperCreated = function () {};\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n\n\n  WebGLLayerRenderer.prototype.prepareFrameInternal = function (frameState) {\n    return true;\n  };\n  /**\n   * Clean up.\n   */\n\n\n  WebGLLayerRenderer.prototype.disposeInternal = function () {\n    this.removeHelper();\n\n    _super.prototype.disposeInternal.call(this);\n  };\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n\n\n  WebGLLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n    var layer = this.getLayer();\n\n    if (layer.hasListener(type)) {\n      composeTransform(this.inversePixelTransform_, 0, 0, frameState.pixelRatio, -frameState.pixelRatio, 0, 0, -frameState.size[1]);\n      var event_3 = new RenderEvent(type, this.inversePixelTransform_, frameState, context);\n      layer.dispatchEvent(event_3);\n    }\n  };\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n\n\n  WebGLLayerRenderer.prototype.preRender = function (context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  };\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n\n\n  WebGLLayerRenderer.prototype.postRender = function (context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  };\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n\n\n  WebGLLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n    var renderPixel = applyTransform([frameState.pixelRatio, 0, 0, frameState.pixelRatio, 0, 0], pixel.slice());\n    var gl = this.helper.getGL();\n\n    if (!gl) {\n      return null;\n    }\n\n    var layer = this.getLayer();\n    var layerExtent = layer.getExtent();\n\n    if (layerExtent) {\n      var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n      /** get only data inside of the layer extent */\n\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    var attributes = gl.getContextAttributes();\n\n    if (!attributes || !attributes.preserveDrawingBuffer) {\n      // we assume there is data at the given pixel (although there might not be)\n      return new Uint8Array();\n    }\n\n    var x = Math.round(renderPixel[0]);\n    var y = Math.round(renderPixel[1]);\n    var pixelContext = this.pixelContext_;\n\n    if (!pixelContext) {\n      var pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n\n    pixelContext.clearRect(0, 0, 1, 1);\n    var data;\n\n    try {\n      pixelContext.drawImage(gl.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n\n    return data;\n  };\n\n  return WebGLLayerRenderer;\n}(LayerRenderer);\n\nvar tmpArray_ = [];\nvar bufferPositions_ = {\n  vertexPosition: 0,\n  indexPosition: 0\n};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\n\n\nexport function writePointFeatureToBuffers(instructions, elementIndex, vertexBuffer, indexBuffer, customAttributesCount, bufferPositions) {\n  // This is for x, y and index\n  var baseVertexAttrsCount = 3;\n  var baseInstructionsCount = 2;\n  var stride = baseVertexAttrsCount + customAttributesCount;\n  var x = instructions[elementIndex + 0];\n  var y = instructions[elementIndex + 1]; // read custom numerical attributes on the feature\n\n  var customAttrs = tmpArray_;\n  customAttrs.length = customAttributesCount;\n\n  for (var i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  var vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  var iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  var baseIndex = vPos / stride; // push vertices for each of the four quad corners (first standard then custom attributes)\n\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length && vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length && vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length && vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length && vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n  return bufferPositions_;\n}\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\n\nexport function getBlankImageData() {\n  var canvas = document.createElement('canvas');\n  var image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [opt_array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\n\nexport function colorEncodeId(id, opt_array) {\n  var array = opt_array || [];\n  var radix = 256;\n  var divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = Math.floor(id / radix / radix) % radix / divide;\n  array[2] = Math.floor(id / radix) % radix / divide;\n  array[3] = id % radix / divide;\n  return array;\n}\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\n\nexport function colorDecodeId(color) {\n  var id = 0;\n  var radix = 256;\n  var mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\nexport default WebGLLayerRenderer;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,OAAOA,aAAP,MAA0B,yBAA1B;AACA,OAAOC,aAAP,MAA0B,aAA1B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SACEC,KAAK,IAAIC,cADX,EAEEC,OAAO,IAAIC,gBAFb,EAGEC,MAAM,IAAIC,eAHZ,QAIO,oBAJP;AAKA,SAAQC,kBAAR,QAAiC,iBAAjC;AAEA;;;;AAGA,OAAO,IAAMC,sBAAsB,GAAG;AACpCC,kBAAgB,EAAE;AADkB,CAA/B;AAIP;;;;;;;;;;;;;AAaA;;;;;;;;;AASA;;;;;;AAMA;;;;;;;;AAOA;AAAA;AAAA;AAAiCC;AAC/B;;;;;;AAIA,8BAAYC,KAAZ,EAAmBC,WAAnB,EAA8B;AAA9B,gBACEC,kBAAMF,KAAN,KAAY,IADd;;AAGE,QAAMG,OAAO,GAAGF,WAAW,IAAI,EAA/B;AAEA;;;;;;;AAMAG,SAAI,CAACC,sBAAL,GAA8BV,eAAe,EAA7C;AAEA;;;;;AAIAS,SAAI,CAACE,aAAL,GAAqB,IAArB;AAEA;;;;AAGAF,SAAI,CAACG,cAAL,GAAsBJ,OAAO,CAACK,aAA9B;AAEA;;;;AAGAJ,SAAI,CAACK,SAAL,GAAiBN,OAAO,CAACO,QAAzB;AAEA;;;;;AAIAN,SAAI,CAACO,MAAL;AAEAX,SAAK,CAACY,iBAAN,CAAwB3B,aAAa,CAAC4B,GAAtC,EAA2CT,KAAI,CAACU,YAAL,CAAkBC,IAAlB,CAAuBX,KAAvB,CAA3C;AAEAA,SAAI,CAACY,uBAAL,GAA+BZ,KAAI,CAACY,uBAAL,CAA6BD,IAA7B,CAAkCX,KAAlC,CAA/B;AACAA,SAAI,CAACa,wBAAL,GAAgCb,KAAI,CAACa,wBAAL,CAA8BF,IAA9B,CAAmCX,KAAnC,CAAhC;;AACD;AAED;;;;;;;AAKAc,mEAAwBC,OAAxB,EAAiCC,UAAjC,EAA2C;AACzC,QAAMpB,KAAK,GAAG,KAAKqB,QAAL,EAAd;;AACA,QAAIrB,KAAK,CAACsB,WAAN,CAAkBlC,eAAe,CAACmC,UAAlC,CAAJ,EAAmD;AACjD,UAAMC,OAAK,GAAG,IAAIrC,WAAJ,CACZC,eAAe,CAACmC,UADJ,EAEZE,SAFY,EAGZL,UAHY,EAIZD,OAJY,CAAd;AAMAnB,WAAK,CAAC0B,aAAN,CAAoBF,OAApB;AACD;AACF,GAXD;AAaA;;;;;;;AAKAN,oEAAyBC,OAAzB,EAAkCC,UAAlC,EAA4C;AAC1C,QAAMpB,KAAK,GAAG,KAAKqB,QAAL,EAAd;;AACA,QAAIrB,KAAK,CAACsB,WAAN,CAAkBlC,eAAe,CAACuC,WAAlC,CAAJ,EAAoD;AAClD,UAAMC,OAAK,GAAG,IAAIzC,WAAJ,CACZC,eAAe,CAACuC,WADJ,EAEZF,SAFY,EAGZL,UAHY,EAIZD,OAJY,CAAd;AAMAnB,WAAK,CAAC0B,aAAN,CAAoBE,OAApB;AACD;AACF,GAXD;AAaA;;;;;;AAIAV,iDAAMf,OAAN,EAAa;AACX,SAAKM,SAAL,GAAiBN,OAAO,CAACO,QAAzB;;AACA,QAAI,KAAKC,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYkB,WAAZ,CAAwB,KAAKpB,SAA7B;AACD;AACF,GALD;AAOA;;;;;AAGAS;AACE,QAAI,KAAKP,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYmB,OAAZ;AACA,aAAO,KAAKnB,MAAZ;AACD;AACF,GALD;AAOA;;;;;;;AAKAO,wDAAaE,UAAb,EAAuB;AACrB,QAAI,KAAKC,QAAL,GAAgBU,eAAhB,EAAJ,EAAuC;AACrC,UAAIC,cAAc,GAAG,IAArB;AACA,UAAIC,WAAW,GAAG,CAAC,CAAnB;AACA,UAAIC,SAAS,SAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGhB,UAAU,CAACiB,gBAAX,CAA4BC,MAAjD,EAAyDH,CAAC,GAAGC,EAA7D,EAAiED,CAAC,EAAlE,EAAsE;AACpE,YAAMnC,KAAK,GAAGoB,UAAU,CAACiB,gBAAX,CAA4BF,CAA5B,EAA+BnC,KAA7C;AACA,YAAMuC,QAAQ,GAAGvC,KAAK,CAACwC,WAAN,EAAjB;;AACA,YAAI,EAAED,QAAQ,YAAYrB,kBAAtB,CAAJ,EAA+C;AAC7Cc,wBAAc,GAAG,IAAjB;AACA;AACD;;AACD,YAAMS,cAAc,GAAGzC,KAAK,CAAC0C,YAAN,EAAvB;;AACA,YAAIV,cAAc,IAAIS,cAAc,KAAKP,SAAzC,EAAoD;AAClDD,qBAAW,IAAI,CAAf;AACAD,wBAAc,GAAG,KAAjB;AACD;;AACDE,iBAAS,GAAGO,cAAZ;;AACA,YAAIF,QAAQ,KAAK,IAAjB,EAAuB;AACrB;AACD;AACF;;AAED,UAAMI,cAAc,GAClB,SAASvB,UAAU,CAACwB,KAApB,GAA4B,SAA5B,GAAwCX,WAD1C;;AAGA,UAAI,CAAC,KAAKtB,MAAN,IAAgB,CAAC,KAAKA,MAAL,CAAYkC,qBAAZ,CAAkCF,cAAlC,CAArB,EAAwE;AACtE,aAAK7B,YAAL;AAEA,aAAKH,MAAL,GAAc,IAAItB,WAAJ,CAAgB;AAC5BmB,uBAAa,EAAE,KAAKD,cADQ;AAE5BG,kBAAQ,EAAE,KAAKD,SAFa;AAG5BkC,wBAAc,EAAEA;AAHY,SAAhB,CAAd;;AAMA,YAAIT,SAAJ,EAAe;AACb,eAAKvB,MAAL,CAAYmC,SAAZ,GAAwBZ,SAAxB,GAAoCA,SAApC;AACD;;AAED,aAAKa,kBAAL;AACD;AACF;;AAED,WAAO,KAAKC,oBAAL,CAA0B5B,UAA1B,CAAP;AACD,GA5CD;AA8CA;;;;;AAGAF,iEAAuB,CAAvB;AAEA;;;;;;;;AAMAA,gEAAqBE,UAArB,EAA+B;AAC7B,WAAO,IAAP;AACD,GAFD;AAIA;;;;;AAGAF;AACE,SAAKJ,YAAL;;AACAZ,qBAAM+C,eAAN,CAAqBC,IAArB,CAAqB,IAArB;AACD,GAHD;AAKA;;;;;;;;AAMAhC,gEAAqBiC,IAArB,EAA2BhC,OAA3B,EAAoCC,UAApC,EAA8C;AAC5C,QAAMpB,KAAK,GAAG,KAAKqB,QAAL,EAAd;;AACA,QAAIrB,KAAK,CAACsB,WAAN,CAAkB6B,IAAlB,CAAJ,EAA6B;AAC3B1D,sBAAgB,CACd,KAAKY,sBADS,EAEd,CAFc,EAGd,CAHc,EAIde,UAAU,CAACgC,UAJG,EAKd,CAAChC,UAAU,CAACgC,UALE,EAMd,CANc,EAOd,CAPc,EAQd,CAAChC,UAAU,CAACiC,IAAX,CAAgB,CAAhB,CARa,CAAhB;AAWA,UAAMC,OAAK,GAAG,IAAInE,WAAJ,CACZgE,IADY,EAEZ,KAAK9C,sBAFO,EAGZe,UAHY,EAIZD,OAJY,CAAd;AAMAnB,WAAK,CAAC0B,aAAN,CAAoB4B,OAApB;AACD;AACF,GAtBD;AAwBA;;;;;;;AAKApC,qDAAUC,OAAV,EAAmBC,UAAnB,EAA6B;AAC3B,SAAKmC,oBAAL,CAA0BnE,eAAe,CAACoE,SAA1C,EAAqDrC,OAArD,EAA8DC,UAA9D;AACD,GAFD;AAIA;;;;;;;AAKAF,sDAAWC,OAAX,EAAoBC,UAApB,EAA8B;AAC5B,SAAKmC,oBAAL,CAA0BnE,eAAe,CAACqE,UAA1C,EAAsDtC,OAAtD,EAA+DC,UAA/D;AACD,GAFD;AAIA;;;;;;;;;;AAQAF,0DAAewC,KAAf,EAAsBtC,UAAtB,EAAkCuC,YAAlC,EAA8C;AAC5C,QAAMC,WAAW,GAAGrE,cAAc,CAChC,CAAC6B,UAAU,CAACgC,UAAZ,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BhC,UAAU,CAACgC,UAAzC,EAAqD,CAArD,EAAwD,CAAxD,CADgC,EAEhCM,KAAK,CAACG,KAAN,EAFgC,CAAlC;AAIA,QAAMC,EAAE,GAAG,KAAKnD,MAAL,CAAYoD,KAAZ,EAAX;;AACA,QAAI,CAACD,EAAL,EAAS;AACP,aAAO,IAAP;AACD;;AACD,QAAM9D,KAAK,GAAG,KAAKqB,QAAL,EAAd;AACA,QAAM2C,WAAW,GAAGhE,KAAK,CAACiE,SAAN,EAApB;;AACA,QAAID,WAAJ,EAAiB;AACf,UAAME,gBAAgB,GAAG3E,cAAc,CACrC6B,UAAU,CAAC+C,0BAD0B,EAErCT,KAAK,CAACG,KAAN,EAFqC,CAAvC;AAKA;;AACA,UAAI,CAACjE,kBAAkB,CAACoE,WAAD,EAAcE,gBAAd,CAAvB,EAAwD;AACtD,eAAO,IAAP;AACD;AACF;;AAED,QAAME,UAAU,GAAGN,EAAE,CAACO,oBAAH,EAAnB;;AACA,QAAI,CAACD,UAAD,IAAe,CAACA,UAAU,CAACE,qBAA/B,EAAsD;AACpD;AACA,aAAO,IAAIC,UAAJ,EAAP;AACD;;AAED,QAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWd,WAAW,CAAC,CAAD,CAAtB,CAAV;AACA,QAAMe,CAAC,GAAGF,IAAI,CAACC,KAAL,CAAWd,WAAW,CAAC,CAAD,CAAtB,CAAV;AACA,QAAIgB,YAAY,GAAG,KAAKtE,aAAxB;;AACA,QAAI,CAACsE,YAAL,EAAmB;AACjB,UAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAApB;AACAF,iBAAW,CAACG,KAAZ,GAAoB,CAApB;AACAH,iBAAW,CAACI,MAAZ,GAAqB,CAArB;AACAL,kBAAY,GAAGC,WAAW,CAACK,UAAZ,CAAuB,IAAvB,CAAf;AACA,WAAK5E,aAAL,GAAqBsE,YAArB;AACD;;AACDA,gBAAY,CAACO,SAAb,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC;AACA,QAAIC,IAAJ;;AACA,QAAI;AACFR,kBAAY,CAACS,SAAb,CAAuBvB,EAAE,CAACwB,MAA1B,EAAkCd,CAAlC,EAAqCG,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD;AACAS,UAAI,GAAGR,YAAY,CAACW,YAAb,CAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsCH,IAA7C;AACD,KAHD,CAGE,OAAOI,GAAP,EAAY;AACZ,aAAOJ,IAAP;AACD;;AAED,QAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAhB,EAAmB;AACjB,aAAO,IAAP;AACD;;AACD,WAAOA,IAAP;AACD,GApDD;;AAqDF;AA9RA,EAAiClG,aAAjC;;AAgSA,IAAMuG,SAAS,GAAG,EAAlB;AACA,IAAMC,gBAAgB,GAAG;AAACC,gBAAc,EAAE,CAAjB;AAAoBC,eAAa,EAAE;AAAnC,CAAzB;;AAEA,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCvB,CAAvC,EAA0CG,CAA1C,EAA6CqB,KAA7C,EAAkD;AAChDF,QAAM,CAACC,GAAG,GAAG,CAAP,CAAN,GAAkBvB,CAAlB;AACAsB,QAAM,CAACC,GAAG,GAAG,CAAP,CAAN,GAAkBpB,CAAlB;AACAmB,QAAM,CAACC,GAAG,GAAG,CAAP,CAAN,GAAkBC,KAAlB;AACD;AAED;;;;;;;AAOA;;;;;;;;;;;;;;;AAaA,OAAM,SAAUC,0BAAV,CACJC,YADI,EAEJC,YAFI,EAGJC,YAHI,EAIJC,WAJI,EAKJC,qBALI,EAMJC,eANI,EAMW;AAEf;AACA,MAAMC,oBAAoB,GAAG,CAA7B;AACA,MAAMC,qBAAqB,GAAG,CAA9B;AACA,MAAMC,MAAM,GAAGF,oBAAoB,GAAGF,qBAAtC;AAEA,MAAM9B,CAAC,GAAG0B,YAAY,CAACC,YAAY,GAAG,CAAhB,CAAtB;AACA,MAAMxB,CAAC,GAAGuB,YAAY,CAACC,YAAY,GAAG,CAAhB,CAAtB,CARe,CAUf;;AACA,MAAMQ,WAAW,GAAGlB,SAApB;AACAkB,aAAW,CAACrE,MAAZ,GAAqBgE,qBAArB;;AACA,OAAK,IAAInE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwE,WAAW,CAACrE,MAAhC,EAAwCH,CAAC,EAAzC,EAA6C;AAC3CwE,eAAW,CAACxE,CAAD,CAAX,GAAiB+D,YAAY,CAACC,YAAY,GAAGM,qBAAf,GAAuCtE,CAAxC,CAA7B;AACD;;AAED,MAAIyE,IAAI,GAAGL,eAAe,GAAGA,eAAe,CAACZ,cAAnB,GAAoC,CAA9D;AACA,MAAIkB,IAAI,GAAGN,eAAe,GAAGA,eAAe,CAACX,aAAnB,GAAmC,CAA7D;AACA,MAAMkB,SAAS,GAAGF,IAAI,GAAGF,MAAzB,CAnBe,CAqBf;;AACAb,kBAAgB,CAACO,YAAD,EAAeQ,IAAf,EAAqBpC,CAArB,EAAwBG,CAAxB,EAA2B,CAA3B,CAAhB;AACAgC,aAAW,CAACrE,MAAZ,IACE8D,YAAY,CAACW,GAAb,CAAiBJ,WAAjB,EAA8BC,IAAI,GAAGJ,oBAArC,CADF;AAEAI,MAAI,IAAIF,MAAR;AAEAb,kBAAgB,CAACO,YAAD,EAAeQ,IAAf,EAAqBpC,CAArB,EAAwBG,CAAxB,EAA2B,CAA3B,CAAhB;AACAgC,aAAW,CAACrE,MAAZ,IACE8D,YAAY,CAACW,GAAb,CAAiBJ,WAAjB,EAA8BC,IAAI,GAAGJ,oBAArC,CADF;AAEAI,MAAI,IAAIF,MAAR;AAEAb,kBAAgB,CAACO,YAAD,EAAeQ,IAAf,EAAqBpC,CAArB,EAAwBG,CAAxB,EAA2B,CAA3B,CAAhB;AACAgC,aAAW,CAACrE,MAAZ,IACE8D,YAAY,CAACW,GAAb,CAAiBJ,WAAjB,EAA8BC,IAAI,GAAGJ,oBAArC,CADF;AAEAI,MAAI,IAAIF,MAAR;AAEAb,kBAAgB,CAACO,YAAD,EAAeQ,IAAf,EAAqBpC,CAArB,EAAwBG,CAAxB,EAA2B,CAA3B,CAAhB;AACAgC,aAAW,CAACrE,MAAZ,IACE8D,YAAY,CAACW,GAAb,CAAiBJ,WAAjB,EAA8BC,IAAI,GAAGJ,oBAArC,CADF;AAEAI,MAAI,IAAIF,MAAR;AAEAL,aAAW,CAACQ,IAAI,EAAL,CAAX,GAAsBC,SAAtB;AACAT,aAAW,CAACQ,IAAI,EAAL,CAAX,GAAsBC,SAAS,GAAG,CAAlC;AACAT,aAAW,CAACQ,IAAI,EAAL,CAAX,GAAsBC,SAAS,GAAG,CAAlC;AACAT,aAAW,CAACQ,IAAI,EAAL,CAAX,GAAsBC,SAAS,GAAG,CAAlC;AACAT,aAAW,CAACQ,IAAI,EAAL,CAAX,GAAsBC,SAAS,GAAG,CAAlC;AACAT,aAAW,CAACQ,IAAI,EAAL,CAAX,GAAsBC,SAAS,GAAG,CAAlC;AAEApB,kBAAgB,CAACC,cAAjB,GAAkCiB,IAAlC;AACAlB,kBAAgB,CAACE,aAAjB,GAAiCiB,IAAjC;AAEA,SAAOnB,gBAAP;AACD;AAED;;;;;;AAKA,OAAM,SAAUsB,iBAAV,GAA2B;AAC/B,MAAM1B,MAAM,GAAGR,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,MAAMkC,KAAK,GAAG3B,MAAM,CAACJ,UAAP,CAAkB,IAAlB,EAAwBgC,eAAxB,CAAwC,CAAxC,EAA2C,CAA3C,CAAd;AACAD,OAAK,CAAC7B,IAAN,CAAW,CAAX,IAAgB,GAAhB;AACA6B,OAAK,CAAC7B,IAAN,CAAW,CAAX,IAAgB,GAAhB;AACA6B,OAAK,CAAC7B,IAAN,CAAW,CAAX,IAAgB,GAAhB;AACA6B,OAAK,CAAC7B,IAAN,CAAW,CAAX,IAAgB,GAAhB;AACA,SAAO6B,KAAP;AACD;AAED;;;;;;;;AAOA,OAAM,SAAUE,aAAV,CAAwBC,EAAxB,EAA4BC,SAA5B,EAAqC;AACzC,MAAMC,KAAK,GAAGD,SAAS,IAAI,EAA3B;AACA,MAAME,KAAK,GAAG,GAAd;AACA,MAAMC,MAAM,GAAGD,KAAK,GAAG,CAAvB;AACAD,OAAK,CAAC,CAAD,CAAL,GAAW7C,IAAI,CAACgD,KAAL,CAAWL,EAAE,GAAGG,KAAL,GAAaA,KAAb,GAAqBA,KAAhC,IAAyCC,MAApD;AACAF,OAAK,CAAC,CAAD,CAAL,GAAY7C,IAAI,CAACgD,KAAL,CAAWL,EAAE,GAAGG,KAAL,GAAaA,KAAxB,IAAiCA,KAAlC,GAA2CC,MAAtD;AACAF,OAAK,CAAC,CAAD,CAAL,GAAY7C,IAAI,CAACgD,KAAL,CAAWL,EAAE,GAAGG,KAAhB,IAAyBA,KAA1B,GAAmCC,MAA9C;AACAF,OAAK,CAAC,CAAD,CAAL,GAAYF,EAAE,GAAGG,KAAN,GAAeC,MAA1B;AACA,SAAOF,KAAP;AACD;AAED;;;;;;;AAMA,OAAM,SAAUI,aAAV,CAAwBC,KAAxB,EAA6B;AACjC,MAAIP,EAAE,GAAG,CAAT;AACA,MAAMG,KAAK,GAAG,GAAd;AACA,MAAMK,IAAI,GAAGL,KAAK,GAAG,CAArB;AACAH,IAAE,IAAI3C,IAAI,CAACC,KAAL,CAAWiD,KAAK,CAAC,CAAD,CAAL,GAAWJ,KAAX,GAAmBA,KAAnB,GAA2BA,KAA3B,GAAmCK,IAA9C,CAAN;AACAR,IAAE,IAAI3C,IAAI,CAACC,KAAL,CAAWiD,KAAK,CAAC,CAAD,CAAL,GAAWJ,KAAX,GAAmBA,KAAnB,GAA2BK,IAAtC,CAAN;AACAR,IAAE,IAAI3C,IAAI,CAACC,KAAL,CAAWiD,KAAK,CAAC,CAAD,CAAL,GAAWJ,KAAX,GAAmBK,IAA9B,CAAN;AACAR,IAAE,IAAI3C,IAAI,CAACC,KAAL,CAAWiD,KAAK,CAAC,CAAD,CAAL,GAAWC,IAAtB,CAAN;AACA,SAAOR,EAAP;AACD;AAED,eAAelG,kBAAf","names":["LayerProperty","LayerRenderer","RenderEvent","RenderEventType","WebGLHelper","apply","applyTransform","compose","composeTransform","create","createTransform","containsCoordinate","WebGLWorkerMessageType","GENERATE_BUFFERS","__extends","layer","opt_options","_super","options","_this","inversePixelTransform_","pixelContext_","postProcesses_","postProcesses","uniforms_","uniforms","helper","addChangeListener","MAP","removeHelper","bind","dispatchPreComposeEvent","dispatchPostComposeEvent","WebGLLayerRenderer","context","frameState","getLayer","hasListener","PRECOMPOSE","event_1","undefined","dispatchEvent","POSTCOMPOSE","event_2","setUniforms","dispose","getRenderSource","incrementGroup","groupNumber","className","i","ii","layerStatesArray","length","renderer","getRenderer","layerClassName","getClassName","canvasCacheKey","mapId","canvasCacheKeyMatches","getCanvas","afterHelperCreated","prepareFrameInternal","disposeInternal","call","type","pixelRatio","size","event_3","dispatchRenderEvent_","PRERENDER","POSTRENDER","pixel","hitTolerance","renderPixel","slice","gl","getGL","layerExtent","getExtent","renderCoordinate","pixelToCoordinateTransform","attributes","getContextAttributes","preserveDrawingBuffer","Uint8Array","x","Math","round","y","pixelContext","pixelCanvas","document","createElement","width","height","getContext","clearRect","data","drawImage","canvas","getImageData","err","tmpArray_","bufferPositions_","vertexPosition","indexPosition","writePointVertex","buffer","pos","index","writePointFeatureToBuffers","instructions","elementIndex","vertexBuffer","indexBuffer","customAttributesCount","bufferPositions","baseVertexAttrsCount","baseInstructionsCount","stride","customAttrs","vPos","iPos","baseIndex","set","getBlankImageData","image","createImageData","colorEncodeId","id","opt_array","array","radix","divide","floor","colorDecodeId","color","mult"],"sourceRoot":"","sources":["../../src/renderer/webgl/Layer.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}