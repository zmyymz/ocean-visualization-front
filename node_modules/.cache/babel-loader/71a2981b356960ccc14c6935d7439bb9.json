{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function' ? Object.assign : function (target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments[i];\n\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\n\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\n\nexport var getValues = typeof Object.values === 'function' ? Object.values : function (object) {\n  var values = [];\n\n  for (var property in object) {\n    values.push(object[property]);\n  }\n\n  return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\n\nexport function isEmpty(object) {\n  var property;\n\n  for (property in object) {\n    return false;\n  }\n\n  return !property;\n}","map":{"version":3,"mappings":";;AAAA;;;;AAIA;;;;;;;;;AASA,OAAO,IAAMA,MAAM,GACjB,OAAOC,MAAM,CAACD,MAAd,KAAyB,UAAzB,GACIC,MAAM,CAACD,MADX,GAEI,UAAUE,MAAV,EAAkBC,WAAlB,EAA6B;AAC3B,MAAID,MAAM,KAAKE,SAAX,IAAwBF,MAAM,KAAK,IAAvC,EAA6C;AAC3C,UAAM,IAAIG,SAAJ,CAAc,4CAAd,CAAN;AACD;;AAED,MAAMC,MAAM,GAAGL,MAAM,CAACC,MAAD,CAArB;;AACA,OAAK,IAAIK,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGC,SAAS,CAACC,MAA/B,EAAuCH,CAAC,GAAGC,EAA3C,EAA+C,EAAED,CAAjD,EAAoD;AAClD,QAAMI,MAAM,GAAGF,SAAS,CAACF,CAAD,CAAxB;;AACA,QAAII,MAAM,KAAKP,SAAX,IAAwBO,MAAM,KAAK,IAAvC,EAA6C;AAC3C,WAAK,IAAMC,GAAX,IAAkBD,MAAlB,EAA0B;AACxB,YAAIA,MAAM,CAACE,cAAP,CAAsBD,GAAtB,CAAJ,EAAgC;AAC9BN,gBAAM,CAACM,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AACD;AACF;AACF;AACF;;AACD,SAAON,MAAP;AACD,CApBA;AAsBP;;;;;AAIA,OAAM,SAAUQ,KAAV,CAAgBC,MAAhB,EAAsB;AAC1B,OAAK,IAAMC,QAAX,IAAuBD,MAAvB,EAA+B;AAC7B,WAAOA,MAAM,CAACC,QAAD,CAAb;AACD;AACF;AAED;;;;;;;;;AAQA,OAAO,IAAMC,SAAS,GACpB,OAAOhB,MAAM,CAACiB,MAAd,KAAyB,UAAzB,GACIjB,MAAM,CAACiB,MADX,GAEI,UAAUH,MAAV,EAAgB;AACd,MAAMG,MAAM,GAAG,EAAf;;AACA,OAAK,IAAMF,QAAX,IAAuBD,MAAvB,EAA+B;AAC7BG,UAAM,CAACC,IAAP,CAAYJ,MAAM,CAACC,QAAD,CAAlB;AACD;;AACD,SAAOE,MAAP;AACD,CATA;AAWP;;;;;;AAKA,OAAM,SAAUE,OAAV,CAAkBL,MAAlB,EAAwB;AAC5B,MAAIC,QAAJ;;AACA,OAAKA,QAAL,IAAiBD,MAAjB,EAAyB;AACvB,WAAO,KAAP;AACD;;AACD,SAAO,CAACC,QAAR;AACD","names":["assign","Object","target","var_sources","undefined","TypeError","output","i","ii","arguments","length","source","key","hasOwnProperty","clear","object","property","getValues","values","push","isEmpty"],"sourceRoot":"","sources":["src/obj.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}