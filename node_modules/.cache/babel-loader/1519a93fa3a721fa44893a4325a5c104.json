{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/events/Target\n */\n\n\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\n\nvar Target =\n/** @class */\nfunction (_super) {\n  __extends(Target, _super);\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n\n\n  function Target(opt_target) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {*}\n     */\n\n\n    _this.eventTarget_ = opt_target;\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n\n    _this.pendingRemovals_ = null;\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n\n    _this.dispatching_ = null;\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n\n    _this.listeners_ = null;\n    return _this;\n  }\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n\n\n  Target.prototype.addEventListener = function (type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n\n    var listeners = this.listeners_ || (this.listeners_ = {});\n    var listenersForType = listeners[type] || (listeners[type] = []);\n\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  };\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n\n\n  Target.prototype.dispatchEvent = function (event) {\n    var isString = typeof event === 'string';\n    var type = isString ? event : event.type;\n    var listeners = this.listeners_ && this.listeners_[type];\n\n    if (!listeners) {\n      return;\n    }\n\n    var evt = isString ? new Event(event) :\n    /** @type {Event} */\n    event;\n\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n\n    var dispatching = this.dispatching_ || (this.dispatching_ = {});\n    var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n\n    ++dispatching[type];\n    var propagate;\n\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate =\n        /** @type {import(\"../events.js\").ListenerObject} */\n        listeners[i].handleEvent(evt);\n      } else {\n        propagate =\n        /** @type {import(\"../events.js\").ListenerFunction} */\n        listeners[i].call(this, evt);\n      }\n\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n\n    if (--dispatching[type] === 0) {\n      var pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n\n      delete dispatching[type];\n    }\n\n    return propagate;\n  };\n  /**\n   * Clean up.\n   */\n\n\n  Target.prototype.disposeInternal = function () {\n    this.listeners_ && clear(this.listeners_);\n  };\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n\n\n  Target.prototype.getListeners = function (type) {\n    return this.listeners_ && this.listeners_[type] || undefined;\n  };\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n\n\n  Target.prototype.hasListener = function (opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n\n    return opt_type ? opt_type in this.listeners_ : Object.keys(this.listeners_).length > 0;\n  };\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n\n\n  Target.prototype.removeEventListener = function (type, listener) {\n    var listeners = this.listeners_ && this.listeners_[type];\n\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable);\n\nexport default Target;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,SAAQC,KAAR,QAAoB,WAApB;AAEA;;;;AAIA;;;;;;;;;;;;;;;;AAeA;AAAA;AAAA;AAAqBC;AACnB;;;;;AAGA,kBAAYC,UAAZ,EAAsB;AAAtB,gBACEC,qBAAO,IADT;AAGE;;;;;;AAIAC,SAAI,CAACC,YAAL,GAAoBH,UAApB;AAEA;;;;;AAIAE,SAAI,CAACE,gBAAL,GAAwB,IAAxB;AAEA;;;;;AAIAF,SAAI,CAACG,YAAL,GAAoB,IAApB;AAEA;;;;;AAIAH,SAAI,CAACI,UAAL,GAAkB,IAAlB;;AACD;AAED;;;;;;AAIAC,gDAAiBC,IAAjB,EAAuBC,QAAvB,EAA+B;AAC7B,QAAI,CAACD,IAAD,IAAS,CAACC,QAAd,EAAwB;AACtB;AACD;;AACD,QAAMC,SAAS,GAAG,KAAKJ,UAAL,KAAoB,KAAKA,UAAL,GAAkB,EAAtC,CAAlB;AACA,QAAMK,gBAAgB,GAAGD,SAAS,CAACF,IAAD,CAAT,KAAoBE,SAAS,CAACF,IAAD,CAAT,GAAkB,EAAtC,CAAzB;;AACA,QAAIG,gBAAgB,CAACC,OAAjB,CAAyBH,QAAzB,MAAuC,CAAC,CAA5C,EAA+C;AAC7CE,sBAAgB,CAACE,IAAjB,CAAsBJ,QAAtB;AACD;AACF,GATD;AAWA;;;;;;;;;;;;AAUAF,6CAAcO,KAAd,EAAmB;AACjB,QAAMC,QAAQ,GAAG,OAAOD,KAAP,KAAiB,QAAlC;AACA,QAAMN,IAAI,GAAGO,QAAQ,GAAGD,KAAH,GAAWA,KAAK,CAACN,IAAtC;AACA,QAAME,SAAS,GAAG,KAAKJ,UAAL,IAAmB,KAAKA,UAAL,CAAgBE,IAAhB,CAArC;;AACA,QAAI,CAACE,SAAL,EAAgB;AACd;AACD;;AAED,QAAMM,GAAG,GAAGD,QAAQ,GAAG,IAAInB,KAAJ,CAAUkB,KAAV,CAAH;AAAsB;AAAsBA,SAAhE;;AACA,QAAI,CAACE,GAAG,CAACC,MAAT,EAAiB;AACfD,SAAG,CAACC,MAAJ,GAAa,KAAKd,YAAL,IAAqB,IAAlC;AACD;;AACD,QAAMe,WAAW,GAAG,KAAKb,YAAL,KAAsB,KAAKA,YAAL,GAAoB,EAA1C,CAApB;AACA,QAAMc,eAAe,GACnB,KAAKf,gBAAL,KAA0B,KAAKA,gBAAL,GAAwB,EAAlD,CADF;;AAEA,QAAI,EAAEI,IAAI,IAAIU,WAAV,CAAJ,EAA4B;AAC1BA,iBAAW,CAACV,IAAD,CAAX,GAAoB,CAApB;AACAW,qBAAe,CAACX,IAAD,CAAf,GAAwB,CAAxB;AACD;;AACD,MAAEU,WAAW,CAACV,IAAD,CAAb;AACA,QAAIY,SAAJ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGZ,SAAS,CAACa,MAA/B,EAAuCF,CAAC,GAAGC,EAA3C,EAA+C,EAAED,CAAjD,EAAoD;AAClD,UAAI,iBAAiBX,SAAS,CAACW,CAAD,CAA9B,EAAmC;AACjCD,iBAAS;AAAG;AACVV,iBAAS,CAACW,CAAD,CADsD,CAE/DG,WAF+D,CAEnDR,GAFmD,CAAjE;AAGD,OAJD,MAIO;AACLI,iBAAS;AAAG;AACVV,iBAAS,CAACW,CAAD,CADwD,CAEjEI,IAFiE,CAE5D,IAF4D,EAEtDT,GAFsD,CAAnE;AAGD;;AACD,UAAII,SAAS,KAAK,KAAd,IAAuBJ,GAAG,CAACU,kBAA/B,EAAmD;AACjDN,iBAAS,GAAG,KAAZ;AACA;AACD;AACF;;AACD,QAAI,EAAEF,WAAW,CAACV,IAAD,CAAb,KAAwB,CAA5B,EAA+B;AAC7B,UAAImB,EAAE,GAAGR,eAAe,CAACX,IAAD,CAAxB;AACA,aAAOW,eAAe,CAACX,IAAD,CAAtB;;AACA,aAAOmB,EAAE,EAAT,EAAa;AACX,aAAKC,mBAAL,CAAyBpB,IAAzB,EAA+BX,IAA/B;AACD;;AACD,aAAOqB,WAAW,CAACV,IAAD,CAAlB;AACD;;AACD,WAAOY,SAAP;AACD,GA7CD;AA+CA;;;;;AAGAb;AACE,SAAKD,UAAL,IAAmBR,KAAK,CAAC,KAAKQ,UAAN,CAAxB;AACD,GAFD;AAIA;;;;;;;;;AAOAC,4CAAaC,IAAb,EAAiB;AACf,WAAQ,KAAKF,UAAL,IAAmB,KAAKA,UAAL,CAAgBE,IAAhB,CAApB,IAA8CqB,SAArD;AACD,GAFD;AAIA;;;;;;;AAKAtB,2CAAYuB,QAAZ,EAAoB;AAClB,QAAI,CAAC,KAAKxB,UAAV,EAAsB;AACpB,aAAO,KAAP;AACD;;AACD,WAAOwB,QAAQ,GACXA,QAAQ,IAAI,KAAKxB,UADN,GAEXyB,MAAM,CAACC,IAAP,CAAY,KAAK1B,UAAjB,EAA6BiB,MAA7B,GAAsC,CAF1C;AAGD,GAPD;AASA;;;;;;AAIAhB,mDAAoBC,IAApB,EAA0BC,QAA1B,EAAkC;AAChC,QAAMC,SAAS,GAAG,KAAKJ,UAAL,IAAmB,KAAKA,UAAL,CAAgBE,IAAhB,CAArC;;AACA,QAAIE,SAAJ,EAAe;AACb,UAAMuB,KAAK,GAAGvB,SAAS,CAACE,OAAV,CAAkBH,QAAlB,CAAd;;AACA,UAAIwB,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,YAAI,KAAK7B,gBAAL,IAAyBI,IAAI,IAAI,KAAKJ,gBAA1C,EAA4D;AAC1D;AACAM,mBAAS,CAACuB,KAAD,CAAT,GAAmBpC,IAAnB;AACA,YAAE,KAAKO,gBAAL,CAAsBI,IAAtB,CAAF;AACD,SAJD,MAIO;AACLE,mBAAS,CAACwB,MAAV,CAAiBD,KAAjB,EAAwB,CAAxB;;AACA,cAAIvB,SAAS,CAACa,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,mBAAO,KAAKjB,UAAL,CAAgBE,IAAhB,CAAP;AACD;AACF;AACF;AACF;AACF,GAjBD;;AAkBF;AA9JA,EAAqBb,UAArB;;AAgKA,eAAeY,MAAf","names":["Disposable","Event","VOID","clear","__extends","opt_target","_super","_this","eventTarget_","pendingRemovals_","dispatching_","listeners_","Target","type","listener","listeners","listenersForType","indexOf","push","event","isString","evt","target","dispatching","pendingRemovals","propagate","i","ii","length","handleEvent","call","propagationStopped","pr","removeEventListener","undefined","opt_type","Object","keys","index","splice"],"sourceRoot":"","sources":["../src/events/Target.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}