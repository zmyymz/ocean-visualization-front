{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/filter/LogicalNary\n */\n\n\nimport Filter from './Filter.js';\nimport { assert } from '../../asserts.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\n\nvar LogicalNary =\n/** @class */\nfunction (_super) {\n  __extends(LogicalNary, _super);\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n\n\n  function LogicalNary(tagName, conditions) {\n    var _this = _super.call(this, tagName) || this;\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n\n\n    _this.conditions = conditions;\n    assert(_this.conditions.length >= 2, 57); // At least 2 conditions are required.\n\n    return _this;\n  }\n\n  return LogicalNary;\n}(Filter);\n\nexport default LogicalNary;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAAQC,MAAR,QAAqB,kBAArB;AAEA;;;;;;;;AAOA;AAAA;AAAA;AAA0BC;AACxB;;;;;;AAIA,uBAAYC,OAAZ,EAAqBC,UAArB,EAA+B;AAA/B,gBACEC,kBAAMF,OAAN,KAAc,IADhB;AAGE;;;;;AAGAG,SAAI,CAACF,UAAL,GAAkBA,UAAlB;AACAH,UAAM,CAACK,KAAI,CAACF,UAAL,CAAgBG,MAAhB,IAA0B,CAA3B,EAA8B,EAA9B,CAAN,CAP6B,CAOY;;;AAC1C;;AACH;AAdA,EAA0BP,MAA1B;;AAgBA,eAAeQ,WAAf","names":["Filter","assert","__extends","tagName","conditions","_super","_this","length","LogicalNary"],"sourceRoot":"","sources":["../../src/format/filter/LogicalNary.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}