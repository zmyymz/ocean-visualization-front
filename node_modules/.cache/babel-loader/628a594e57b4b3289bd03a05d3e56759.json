{"ast":null,"code":"import _asyncToGenerator from \"D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { BaseClient, BaseResponse } from './base.js';\n\nvar FetchResponse = /*#__PURE__*/function (_BaseResponse) {\n  _inherits(FetchResponse, _BaseResponse);\n\n  var _super = _createSuper(FetchResponse);\n\n  /**\n   * BaseResponse facade for fetch API Response\n   * @param {Response} response\n   */\n  function FetchResponse(response) {\n    var _this;\n\n    _classCallCheck(this, FetchResponse);\n\n    _this = _super.call(this);\n    _this.response = response;\n    return _this;\n  }\n\n  _createClass(FetchResponse, [{\n    key: \"status\",\n    get: function get() {\n      return this.response.status;\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader(name) {\n      return this.response.headers.get(name);\n    }\n  }, {\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.response.arrayBuffer) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.response.arrayBuffer();\n\n              case 3:\n                _context.t0 = _context.sent;\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.next = 8;\n                return this.response.buffer();\n\n              case 8:\n                _context.t0 = _context.sent.buffer;\n\n              case 9:\n                data = _context.t0;\n                return _context.abrupt(\"return\", data);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }]);\n\n  return FetchResponse;\n}(BaseResponse);\n\nexport var FetchClient = /*#__PURE__*/function (_BaseClient) {\n  _inherits(FetchClient, _BaseClient);\n\n  var _super2 = _createSuper(FetchClient);\n\n  function FetchClient(url, credentials) {\n    var _this2;\n\n    _classCallCheck(this, FetchClient);\n\n    _this2 = _super2.call(this, url);\n    _this2.credentials = credentials;\n    return _this2;\n  }\n\n  _createClass(FetchClient, [{\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _ref,\n            headers,\n            credentials,\n            signal,\n            response,\n            _args2 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _ref = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, headers = _ref.headers, credentials = _ref.credentials, signal = _ref.signal;\n                _context2.next = 3;\n                return fetch(this.url, {\n                  headers: headers,\n                  credentials: credentials,\n                  signal: signal\n                });\n\n              case 3:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", new FetchResponse(response));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function request() {\n        return _request.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }]);\n\n  return FetchClient;\n}(BaseClient);","map":{"version":3,"sources":["D:/Java/JavaEE/IdeaProjects/ocean-vis/node_modules/geotiff/dist-module/source/client/fetch.js"],"names":["BaseClient","BaseResponse","FetchResponse","response","status","name","headers","get","arrayBuffer","buffer","data","FetchClient","url","credentials","signal","fetch"],"mappings":";;;;;;;AAAA,SAASA,UAAT,EAAqBC,YAArB,QAAyC,WAAzC;;IAEMC,a;;;;;AACJ;AACF;AACA;AACA;AACE,yBAAYC,QAAZ,EAAsB;AAAA;;AAAA;;AACpB;AACA,UAAKA,QAAL,GAAgBA,QAAhB;AAFoB;AAGrB;;;;SAED,eAAa;AACX,aAAO,KAAKA,QAAL,CAAcC,MAArB;AACD;;;WAED,mBAAUC,IAAV,EAAgB;AACd,aAAO,KAAKF,QAAL,CAAcG,OAAd,CAAsBC,GAAtB,CAA0BF,IAA1B,CAAP;AACD;;;;6EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACe,KAAKF,QAAL,CAAcK,WAD7B;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEY,KAAKL,QAAL,CAAcK,WAAd,EAFZ;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAGa,KAAKL,QAAL,CAAcM,MAAd,EAHb;;AAAA;AAAA,4CAGqCA,MAHrC;;AAAA;AACQC,gBAAAA,IADR;AAAA,iDAISA,IAJT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;EAlB0BT,Y;;AA0B5B,WAAaU,WAAb;AAAA;;AAAA;;AACE,uBAAYC,GAAZ,EAAiBC,WAAjB,EAA8B;AAAA;;AAAA;;AAC5B,gCAAMD,GAAN;AACA,WAAKC,WAAL,GAAmBA,WAAnB;AAF4B;AAG7B;;AAJH;AAAA;AAAA;AAAA,6EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kFAAiD,EAAjD,EAAgBP,OAAhB,QAAgBA,OAAhB,EAAyBO,WAAzB,QAAyBA,WAAzB,EAAsCC,MAAtC,QAAsCA,MAAtC;AAAA;AAAA,uBACyBC,KAAK,CAAC,KAAKH,GAAN,EAAW;AACrCN,kBAAAA,OAAO,EAAPA,OADqC;AAC5BO,kBAAAA,WAAW,EAAXA,WAD4B;AACfC,kBAAAA,MAAM,EAANA;AADe,iBAAX,CAD9B;;AAAA;AACQX,gBAAAA,QADR;AAAA,kDAIS,IAAID,aAAJ,CAAkBC,QAAlB,CAJT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAiCH,UAAjC","sourcesContent":["import { BaseClient, BaseResponse } from './base.js';\n\nclass FetchResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for fetch API Response\n   * @param {Response} response\n   */\n  constructor(response) {\n    super();\n    this.response = response;\n  }\n\n  get status() {\n    return this.response.status;\n  }\n\n  getHeader(name) {\n    return this.response.headers.get(name);\n  }\n\n  async getData() {\n    const data = this.response.arrayBuffer\n      ? await this.response.arrayBuffer()\n      : (await this.response.buffer()).buffer;\n    return data;\n  }\n}\n\nexport class FetchClient extends BaseClient {\n  constructor(url, credentials) {\n    super(url);\n    this.credentials = credentials;\n  }\n\n  async request({ headers, credentials, signal } = {}) {\n    const response = await fetch(this.url, {\n      headers, credentials, signal,\n    });\n    return new FetchResponse(response);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}