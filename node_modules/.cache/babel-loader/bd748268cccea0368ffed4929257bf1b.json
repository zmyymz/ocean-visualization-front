{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n\n/**\n * @module ol/control/MousePosition\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport { get as getProjection, getTransformFromProjections, getUserProjection, identityTransform } from '../proj.js';\nimport { listen } from '../events.js';\n/**\n * @type {string}\n */\n\nvar PROJECTION = 'projection';\n/**\n * @type {string}\n */\n\nvar COORDINATE_FORMAT = 'coordinateFormat';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string|boolean} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space\n * is rendered when the mouse leaves the viewport.  To render something else, provide a string\n * to be used as the text content (e.g. 'no position' or '' for an empty string).  Set the placeholder\n * to `false` to retain the last position when the mouse leaves the viewport.  In a future release, this\n * will be the default behavior.\n * @property {string} [undefinedHTML='&#160;'] This option is deprecated.  Use the `placeholder` option instead.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\n\nvar MousePosition =\n/** @class */\nfunction (_super) {\n  __extends(MousePosition, _super);\n  /**\n   * @param {Options} [opt_options] Mouse position options.\n   */\n\n\n  function MousePosition(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    var element = document.createElement('div');\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n    _this = _super.call(this, {\n      element: element,\n      render: options.render,\n      target: options.target\n    }) || this;\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.on;\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    _this.once;\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n\n    _this.un;\n\n    _this.addChangeListener(PROJECTION, _this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      _this.setCoordinateFormat(options.coordinateFormat);\n    }\n\n    if (options.projection) {\n      _this.setProjection(options.projection);\n    }\n    /**\n     * Change this to `false` when removing the deprecated `undefinedHTML` option.\n     * @type {boolean}\n     */\n\n\n    var renderOnMouseOut = true;\n    /**\n     * @type {string}\n     */\n\n    var placeholder = '&#160;';\n\n    if ('undefinedHTML' in options) {\n      // deprecated behavior\n      if (options.undefinedHTML !== undefined) {\n        placeholder = options.undefinedHTML;\n      }\n\n      renderOnMouseOut = !!placeholder;\n    } else if ('placeholder' in options) {\n      if (options.placeholder === false) {\n        renderOnMouseOut = false;\n      } else {\n        placeholder = String(options.placeholder);\n      }\n    }\n    /**\n     * @private\n     * @type {string}\n     */\n\n\n    _this.placeholder_ = placeholder;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.renderOnMouseOut_ = renderOnMouseOut;\n    /**\n     * @private\n     * @type {string}\n     */\n\n    _this.renderedHTML_ = element.innerHTML;\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n\n    _this.mapProjection_ = null;\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n\n    _this.transform_ = null;\n    return _this;\n  }\n  /**\n   * @private\n   */\n\n\n  MousePosition.prototype.handleProjectionChanged_ = function () {\n    this.transform_ = null;\n  };\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n\n\n  MousePosition.prototype.getCoordinateFormat = function () {\n    return (\n      /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */\n      this.get(COORDINATE_FORMAT)\n    );\n  };\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n\n\n  MousePosition.prototype.getProjection = function () {\n    return (\n      /** @type {import(\"../proj/Projection.js\").default|undefined} */\n      this.get(PROJECTION)\n    );\n  };\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n\n\n  MousePosition.prototype.handleMouseMove = function (event) {\n    var map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  };\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n\n\n  MousePosition.prototype.handleMouseOut = function (event) {\n    this.updateHTML_(null);\n  };\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n\n\n  MousePosition.prototype.setMap = function (map) {\n    _super.prototype.setMap.call(this, map);\n\n    if (map) {\n      var viewport = map.getViewport();\n      this.listenerKeys.push(listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this));\n\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this));\n      }\n\n      this.updateHTML_(null);\n    }\n  };\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n\n\n  MousePosition.prototype.setCoordinateFormat = function (format) {\n    this.set(COORDINATE_FORMAT, format);\n  };\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n\n\n  MousePosition.prototype.setProjection = function (projection) {\n    this.set(PROJECTION, getProjection(projection));\n  };\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n\n\n  MousePosition.prototype.updateHTML_ = function (pixel) {\n    var html = this.placeholder_;\n\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        var projection = this.getProjection();\n\n        if (projection) {\n          this.transform_ = getTransformFromProjections(this.mapProjection_, projection);\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n\n      var map = this.getMap();\n      var coordinate = map.getCoordinateFromPixelInternal(pixel);\n\n      if (coordinate) {\n        var userProjection = getUserProjection();\n\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(this.mapProjection_, userProjection);\n        }\n\n        this.transform_(coordinate, coordinate);\n        var coordinateFormat = this.getCoordinateFormat();\n\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  };\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n\n\n  MousePosition.prototype.render = function (mapEvent) {\n    var frameState = mapEvent.frameState;\n\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  };\n\n  return MousePosition;\n}(Control);\n\nexport default MousePosition;","map":{"version":3,"mappings":"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","names":["Control","EventType","get","getProjection","getTransformFromProjections","getUserProjection","identityTransform","listen","PROJECTION","COORDINATE_FORMAT","__extends","opt_options","options","element","document","createElement","className","undefined","_super","render","target","_this","on","once","un","addChangeListener","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","projection","setProjection","renderOnMouseOut","placeholder","undefinedHTML","String","placeholder_","renderOnMouseOut_","renderedHTML_","innerHTML","mapProjection_","transform_","MousePosition","event","map","getMap","updateHTML_","getEventPixel","setMap","call","viewport","getViewport","listenerKeys","push","POINTERMOVE","handleMouseMove","POINTEROUT","handleMouseOut","format","set","pixel","html","coordinate","getCoordinateFromPixelInternal","userProjection","getCoordinateFormat","toString","mapEvent","frameState","viewState"],"sourceRoot":"","sources":["../src/control/MousePosition.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}