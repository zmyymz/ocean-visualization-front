{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/WebGLTile\n */\n\n\nimport BaseTileLayer from './BaseTile.js';\nimport LayerProperty from '../layer/Property.js';\nimport SourceState from '../source/State.js';\nimport WebGLTileLayerRenderer, { Attributes, Uniforms } from '../renderer/webgl/TileLayer.js';\nimport { PALETTE_TEXTURE_ARRAY, ValueTypes, expressionToGlsl, getStringNumberEquivalent, uniformNameForVariable } from '../style/expressions.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {import(\"../source/DataTile.js\").default|import(\"../source/TileImage.js\").default} SourceType\n */\n\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color`, `brightness`, `contrast`, `exposure`, `saturation` and `gamma`\n * {@link import(\"../style/expressions.js\").ExpressionValue expressions}, using the `['var', 'varName']` operator.\n * To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [color] An expression applied to color values.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [brightness=0] Value used to decrease or increase\n * the layer brightness.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [contrast=0] Value used to decrease or increase\n * the layer contrast.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [exposure=0] Value used to decrease or increase\n * the layer exposure.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [saturation=0] Value used to decrease or increase\n * the layer saturation.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [gamma=1] Apply a gamma correction to the layer.\n * Values range from 0 to infinity.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>} [sources] Array\n * of sources for this layer. Takes precedence over `source`. Can either be an array of sources, or a function that\n * expects an extent and a resolution (in view projection units per pixel) and returns an array of sources. See\n * {@link module:ol/source.sourcesFromTileGrid} for a helper function to generate sources that are organized in a\n * pyramid following the same pattern as a tile grid.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} vertexShader The vertex shader.\n * @property {string} fragmentShader The fragment shader.\n * @property {Object<string,import(\"../webgl/Helper.js\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../webgl/PaletteTexture.js\").default>} paletteTextures Palette textures.\n */\n\n/**\n * @param {Style} style The layer style.\n * @param {number} [bandCount] The number of bands.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\n\nfunction parseStyle(style, bandCount) {\n  var vertexShader = \"\\n    attribute vec2 \".concat(Attributes.TEXTURE_COORD, \";\\n    uniform mat4 \").concat(Uniforms.TILE_TRANSFORM, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_WIDTH, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_HEIGHT, \";\\n    uniform float \").concat(Uniforms.TEXTURE_RESOLUTION, \";\\n    uniform float \").concat(Uniforms.TEXTURE_ORIGIN_X, \";\\n    uniform float \").concat(Uniforms.TEXTURE_ORIGIN_Y, \";\\n    uniform float \").concat(Uniforms.DEPTH, \";\\n\\n    varying vec2 v_textureCoord;\\n    varying vec2 v_mapCoord;\\n\\n    void main() {\\n      v_textureCoord = \").concat(Attributes.TEXTURE_COORD, \";\\n      v_mapCoord = vec2(\\n        \").concat(Uniforms.TEXTURE_ORIGIN_X, \" + \").concat(Uniforms.TEXTURE_RESOLUTION, \" * \").concat(Uniforms.TEXTURE_PIXEL_WIDTH, \" * v_textureCoord[0],\\n        \").concat(Uniforms.TEXTURE_ORIGIN_Y, \" - \").concat(Uniforms.TEXTURE_RESOLUTION, \" * \").concat(Uniforms.TEXTURE_PIXEL_HEIGHT, \" * v_textureCoord[1]\\n      );\\n      gl_Position = \").concat(Uniforms.TILE_TRANSFORM, \" * vec4(\").concat(Attributes.TEXTURE_COORD, \", \").concat(Uniforms.DEPTH, \", 1.0);\\n    }\\n  \");\n  /**\n   * @type {import(\"../style/expressions.js\").ParsingContext}\n   */\n\n  var context = {\n    inFragmentShader: true,\n    variables: [],\n    attributes: [],\n    stringLiteralsMap: {},\n    functions: {},\n    bandCount: bandCount\n  };\n  var pipeline = [];\n\n  if (style.color !== undefined) {\n    var color = expressionToGlsl(context, style.color, ValueTypes.COLOR);\n    pipeline.push(\"color = \".concat(color, \";\"));\n  }\n\n  if (style.contrast !== undefined) {\n    var contrast = expressionToGlsl(context, style.contrast, ValueTypes.NUMBER);\n    pipeline.push(\"color.rgb = clamp((\".concat(contrast, \" + 1.0) * color.rgb - (\").concat(contrast, \" / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\"));\n  }\n\n  if (style.exposure !== undefined) {\n    var exposure = expressionToGlsl(context, style.exposure, ValueTypes.NUMBER);\n    pipeline.push(\"color.rgb = clamp((\".concat(exposure, \" + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\"));\n  }\n\n  if (style.saturation !== undefined) {\n    var saturation = expressionToGlsl(context, style.saturation, ValueTypes.NUMBER);\n    pipeline.push(\"\\n      float saturation = \".concat(saturation, \" + 1.0;\\n      float sr = (1.0 - saturation) * 0.2126;\\n      float sg = (1.0 - saturation) * 0.7152;\\n      float sb = (1.0 - saturation) * 0.0722;\\n      mat3 saturationMatrix = mat3(\\n        sr + saturation, sr, sr,\\n        sg, sg + saturation, sg,\\n        sb, sb, sb + saturation\\n      );\\n      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\\n    \"));\n  }\n\n  if (style.gamma !== undefined) {\n    var gamma = expressionToGlsl(context, style.gamma, ValueTypes.NUMBER);\n    pipeline.push(\"color.rgb = pow(color.rgb, vec3(1.0 / \".concat(gamma, \"));\"));\n  }\n\n  if (style.brightness !== undefined) {\n    var brightness = expressionToGlsl(context, style.brightness, ValueTypes.NUMBER);\n    pipeline.push(\"color.rgb = clamp(color.rgb + \".concat(brightness, \", vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\"));\n  }\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n\n\n  var uniforms = {};\n  var numVariables = context.variables.length;\n\n  if (numVariables > 1 && !style.variables) {\n    throw new Error(\"Missing variables in style (expected \".concat(context.variables, \")\"));\n  }\n\n  var _loop_1 = function (i) {\n    var variableName = context.variables[i];\n\n    if (!(variableName in style.variables)) {\n      throw new Error(\"Missing '\".concat(variableName, \"' in style variables\"));\n    }\n\n    var uniformName = uniformNameForVariable(variableName);\n\n    uniforms[uniformName] = function () {\n      var value = style.variables[variableName];\n\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(context, value);\n      }\n\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  };\n\n  for (var i = 0; i < numVariables; ++i) {\n    _loop_1(i);\n  }\n\n  var uniformDeclarations = Object.keys(uniforms).map(function (name) {\n    return \"uniform float \".concat(name, \";\");\n  });\n  var textureCount = Math.ceil(bandCount / 4);\n  uniformDeclarations.push(\"uniform sampler2D \".concat(Uniforms.TILE_TEXTURE_ARRAY, \"[\").concat(textureCount, \"];\"));\n\n  if (context.paletteTextures) {\n    uniformDeclarations.push(\"uniform sampler2D \".concat(PALETTE_TEXTURE_ARRAY, \"[\").concat(context.paletteTextures.length, \"];\"));\n  }\n\n  var functionDefintions = Object.keys(context.functions).map(function (name) {\n    return context.functions[name];\n  });\n  var fragmentShader = \"\\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\\n    precision highp float;\\n    #else\\n    precision mediump float;\\n    #endif\\n\\n    varying vec2 v_textureCoord;\\n    varying vec2 v_mapCoord;\\n    uniform vec4 \".concat(Uniforms.RENDER_EXTENT, \";\\n    uniform float \").concat(Uniforms.TRANSITION_ALPHA, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_WIDTH, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_HEIGHT, \";\\n    uniform float \").concat(Uniforms.RESOLUTION, \";\\n    uniform float \").concat(Uniforms.ZOOM, \";\\n\\n    \").concat(uniformDeclarations.join('\\n'), \"\\n\\n    \").concat(functionDefintions.join('\\n'), \"\\n\\n    void main() {\\n      if (\\n        v_mapCoord[0] < \").concat(Uniforms.RENDER_EXTENT, \"[0] ||\\n        v_mapCoord[1] < \").concat(Uniforms.RENDER_EXTENT, \"[1] ||\\n        v_mapCoord[0] > \").concat(Uniforms.RENDER_EXTENT, \"[2] ||\\n        v_mapCoord[1] > \").concat(Uniforms.RENDER_EXTENT, \"[3]\\n      ) {\\n        discard;\\n      }\\n\\n      vec4 color = texture2D(\").concat(Uniforms.TILE_TEXTURE_ARRAY, \"[0],  v_textureCoord);\\n\\n      \").concat(pipeline.join('\\n'), \"\\n\\n      if (color.a == 0.0) {\\n        discard;\\n      }\\n\\n      gl_FragColor = color;\\n      gl_FragColor.rgb *= gl_FragColor.a;\\n      gl_FragColor *= \").concat(Uniforms.TRANSITION_ALPHA, \";\\n    }\");\n  return {\n    vertexShader: vertexShader,\n    fragmentShader: fragmentShader,\n    uniforms: uniforms,\n    paletteTextures: context.paletteTextures\n  };\n}\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends BaseTileLayer<SourceType, WebGLTileLayerRenderer>\n * @api\n */\n\n\nvar WebGLTileLayer =\n/** @class */\nfunction (_super) {\n  __extends(WebGLTileLayer, _super);\n  /**\n   * @param {Options} opt_options Tile layer options.\n   */\n\n\n  function WebGLTileLayer(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? assign({}, opt_options) : {};\n    var style = options.style || {};\n    delete options.style;\n    var cacheSize = options.cacheSize;\n    delete options.cacheSize;\n    _this = _super.call(this, options) || this;\n    /**\n     * @type {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>}\n     * @private\n     */\n\n    _this.sources_ = options.sources;\n    /**\n     * @type {number}\n     * @private\n     */\n\n    _this.renderedResolution_ = NaN;\n    /**\n     * @type {Style}\n     * @private\n     */\n\n    _this.style_ = style;\n    /**\n     * @type {number}\n     * @private\n     */\n\n    _this.cacheSize_ = cacheSize;\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n\n    _this.styleVariables_ = _this.style_.variables || {};\n\n    _this.addChangeListener(LayerProperty.SOURCE, _this.handleSourceUpdate_);\n\n    return _this;\n  }\n  /**\n   * Gets the sources for this layer, for a given extent and resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<SourceType>} Sources.\n   */\n\n\n  WebGLTileLayer.prototype.getSources = function (extent, resolution) {\n    var source = this.getSource();\n    return this.sources_ ? typeof this.sources_ === 'function' ? this.sources_(extent, resolution) : this.sources_ : source ? [source] : [];\n  };\n  /**\n   * @return {SourceType} The source being rendered.\n   */\n\n\n  WebGLTileLayer.prototype.getRenderSource = function () {\n    return (\n      /** @type {SourceType} */\n      this.getLayerState().source || this.getSource()\n    );\n  };\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n\n\n  WebGLTileLayer.prototype.getSourceState = function () {\n    var source = this.getRenderSource();\n    return source ? source.getState() : SourceState.UNDEFINED;\n  };\n  /**\n   * @private\n   */\n\n\n  WebGLTileLayer.prototype.handleSourceUpdate_ = function () {\n    if (this.getSource()) {\n      this.setStyle(this.style_);\n    }\n  };\n  /**\n   * @private\n   * @return {number} The number of source bands.\n   */\n\n\n  WebGLTileLayer.prototype.getSourceBandCount_ = function () {\n    var source = this.getSource();\n    return source && 'bandCount' in source ? source.bandCount : 4;\n  };\n\n  WebGLTileLayer.prototype.createRenderer = function () {\n    var parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n    return new WebGLTileLayerRenderer(this, {\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      cacheSize: this.cacheSize_,\n      paletteTextures: parsedStyle.paletteTextures\n    });\n  };\n  /**\n   * @param {import(\"../PluggableMap\").FrameState} frameState Frame state.\n   * @param {Array<SourceType>} sources Sources.\n   * @return {HTMLElement} Canvas.\n   */\n\n\n  WebGLTileLayer.prototype.renderSources = function (frameState, sources) {\n    var layerRenderer = this.getRenderer();\n    var canvas;\n\n    for (var i = 0, ii = sources.length; i < ii; ++i) {\n      this.getLayerState().source = sources[i];\n\n      if (layerRenderer.prepareFrame(frameState)) {\n        canvas = layerRenderer.renderFrame(frameState);\n      }\n    }\n\n    return canvas;\n  };\n  /**\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n\n\n  WebGLTileLayer.prototype.render = function (frameState, target) {\n    var _this = this;\n\n    this.rendered = true;\n    var viewState = frameState.viewState;\n    var sources = this.getSources(frameState.extent, viewState.resolution);\n    var ready = true;\n\n    var _loop_2 = function (i, ii) {\n      var source = sources[i];\n      var sourceState = source.getState();\n\n      if (sourceState == SourceState.LOADING) {\n        var onChange_1 = function () {\n          if (source.getState() == SourceState.READY) {\n            source.removeEventListener('change', onChange_1);\n\n            _this.changed();\n          }\n        };\n\n        source.addEventListener('change', onChange_1);\n      }\n\n      ready = ready && sourceState == SourceState.READY;\n    };\n\n    for (var i = 0, ii = sources.length; i < ii; ++i) {\n      _loop_2(i, ii);\n    }\n\n    var canvas = this.renderSources(frameState, sources);\n\n    if (this.getRenderer().renderComplete && ready) {\n      // Fully rendered, done.\n      this.renderedResolution_ = viewState.resolution;\n      return canvas;\n    } // Render sources from previously fully rendered frames\n\n\n    if (this.renderedResolution_ > 0.5 * viewState.resolution) {\n      var altSources = this.getSources(frameState.extent, this.renderedResolution_).filter(function (source) {\n        return !sources.includes(source);\n      });\n\n      if (altSources.length > 0) {\n        return this.renderSources(frameState, altSources);\n      }\n    }\n\n    return canvas;\n  };\n  /**\n   * Update the layer style.  The `updateStyleVariables` function is a more efficient\n   * way to update layer rendering.  In cases where the whole style needs to be updated,\n   * this method may be called instead.  Note that calling this method will also replace\n   * any previously set variables, so the new style also needs to include new variables,\n   * if needed.\n   * @param {Style} style The new style.\n   */\n\n\n  WebGLTileLayer.prototype.setStyle = function (style) {\n    this.styleVariables_ = style.variables || {};\n    this.style_ = style;\n    var parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n    var renderer = this.getRenderer();\n    renderer.reset({\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      paletteTextures: parsedStyle.paletteTextures\n    });\n    this.changed();\n  };\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   * @api\n   */\n\n\n  WebGLTileLayer.prototype.updateStyleVariables = function (variables) {\n    assign(this.styleVariables_, variables);\n    this.changed();\n  };\n\n  return WebGLTileLayer;\n}(BaseTileLayer);\n/**\n * Clean up underlying WebGL resources.\n * @function\n * @api\n */\n\n\nWebGLTileLayer.prototype.dispose;\nexport default WebGLTileLayer;","map":{"version":3,"mappings":"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","names":["BaseTileLayer","LayerProperty","SourceState","WebGLTileLayerRenderer","Attributes","Uniforms","PALETTE_TEXTURE_ARRAY","ValueTypes","expressionToGlsl","getStringNumberEquivalent","uniformNameForVariable","assign","parseStyle","style","bandCount","vertexShader","TEXTURE_COORD","concat","TILE_TRANSFORM","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","DEPTH","context","inFragmentShader","variables","attributes","stringLiteralsMap","functions","pipeline","color","undefined","COLOR","push","contrast","NUMBER","exposure","saturation","gamma","brightness","uniforms","numVariables","length","Error","i","variableName","uniformName","value","uniformDeclarations","Object","keys","map","name","textureCount","Math","ceil","TILE_TEXTURE_ARRAY","paletteTextures","functionDefintions","fragmentShader","RENDER_EXTENT","TRANSITION_ALPHA","RESOLUTION","ZOOM","join","__extends","opt_options","options","cacheSize","_super","_this","sources_","sources","renderedResolution_","NaN","style_","cacheSize_","styleVariables_","addChangeListener","SOURCE","handleSourceUpdate_","WebGLTileLayer","extent","resolution","source","getSource","getLayerState","getRenderSource","getState","UNDEFINED","setStyle","parsedStyle","getSourceBandCount_","frameState","layerRenderer","getRenderer","canvas","ii","prepareFrame","renderFrame","target","rendered","viewState","getSources","ready","sourceState","LOADING","onChange_1","READY","removeEventListener","changed","addEventListener","renderSources","renderComplete","altSources","filter","includes","renderer","reset","prototype","dispose"],"sourceRoot":"","sources":["../src/layer/WebGLTile.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}