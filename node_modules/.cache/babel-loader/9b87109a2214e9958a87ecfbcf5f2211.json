{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/TileQueue\n */\n\n\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nvar TileQueue =\n/** @class */\nfunction (_super) {\n  __extends(TileQueue, _super);\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n\n\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n    var _this = _super.call(this,\n    /**\n     * @param {Array} element Element.\n     * @return {number} Priority.\n     */\n    function (element) {\n      return tilePriorityFunction.apply(null, element);\n    },\n    /**\n     * @param {Array} element Element.\n     * @return {string} Key.\n     */\n    function (element) {\n      return (\n        /** @type {import(\"./Tile.js\").default} */\n        element[0].getKey()\n      );\n    }) || this;\n    /** @private */\n\n\n    _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n\n    _this.tileChangeCallback_ = tileChangeCallback;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.tilesLoading_ = 0;\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n\n    _this.tilesLoadingKeys_ = {};\n    return _this;\n  }\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n\n\n  TileQueue.prototype.enqueue = function (element) {\n    var added = _super.prototype.enqueue.call(this, element);\n\n    if (added) {\n      var tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n\n    return added;\n  };\n  /**\n   * @return {number} Number of tiles loading.\n   */\n\n\n  TileQueue.prototype.getTilesLoading = function () {\n    return this.tilesLoading_;\n  };\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n\n\n  TileQueue.prototype.handleTileChange = function (event) {\n    var tile =\n    /** @type {import(\"./Tile.js\").default} */\n    event.target;\n    var state = tile.getState();\n\n    if (state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      var tileKey = tile.getKey();\n\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n\n      this.tileChangeCallback_();\n    }\n  };\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n\n\n  TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var state, tile, tileKey;\n\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads && this.getCount() > 0) {\n      tile =\n      /** @type {import(\"./Tile.js\").default} */\n      this.dequeue()[0];\n      tileKey = tile.getKey();\n      state = tile.getState();\n\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue);\n\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\n\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  } // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n\n\n  var center = frameState.viewState.center;\n  var deltaX = tileCenter[0] - center[0];\n  var deltaY = tileCenter[1] - center[1];\n  return 65536 * Math.log(tileResolution) + Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n}","map":{"version":3,"mappings":"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","names":["EventType","PriorityQueue","DROP","TileState","__extends","tilePriorityFunction","tileChangeCallback","_super","element","apply","getKey","_this","boundHandleTileChange_","handleTileChange","bind","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","TileQueue","added","enqueue","call","tile","addEventListener","CHANGE","event","target","state","getState","LOADED","ERROR","EMPTY","removeEventListener","tileKey","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","IDLE","load","getTilePriority","frameState","tileSourceKey","tileCenter","tileResolution","wantedTiles","center","viewState","deltaX","deltaY","Math","log","sqrt"],"sourceRoot":"","sources":["src/TileQueue.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}